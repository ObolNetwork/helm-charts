Directory structure:
└── ethpandaops-ethereum-helm-charts/
    ├── README.md
    ├── _typos.toml
    ├── ct.yaml
    ├── LICENSE
    ├── lintconf.yaml
    ├── Makefile
    ├── .pre-commit-config.yaml
    ├── charts/
    │   ├── armiarma/
    │   │   ├── README.md
    │   │   ├── Chart.lock
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   └── default-values.yaml
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.p2p.nodeport.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── statefulset.yaml
    │   ├── assertoor/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── service-headless.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── beacon-metrics-gazer/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── beaconchain-explorer/
    │   │   ├── README.md
    │   │   ├── Chart.lock
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── besu/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   └── default-values.yaml
    │   │   └── templates/
    │   │       ├── _cmd.tpl
    │   │       ├── _helpers.tpl
    │   │       ├── clusterrole.yaml
    │   │       ├── clusterrolebinding.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── poddisruptionbudget.yaml
    │   │       ├── role.yaml
    │   │       ├── rolebinding.yaml
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.p2p.nodeport.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── blob-me-baby/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── blobscan/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── servicemonitor.yaml
    │   ├── blobscan-indexer/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── servicemonitor.yaml
    │   ├── blockscout/
    │   │   ├── README.md
    │   │   ├── Chart.lock
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   ├── all-dependencies-values.yaml
    │   │   │   └── default-values.yaml
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── blutgang/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   └── default-values.yaml
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── poddisruptionbudget.yaml
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── checkpointz/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── servicemonitor.yaml
    │   ├── consensus-monitor/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── contributoor/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── NOTES.txt
    │   │       ├── pdb.yaml
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── servicemonitor.yaml
    │   ├── dora/
    │   │   ├── README.md
    │   │   ├── Chart.lock
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── dshackle/
    │   │   ├── README.md
    │   │   ├── Chart.lock
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   └── default-values.yaml
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── dugtrio/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── service-headless.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── eleel/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   └── ct-values.yaml
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       └── serviceaccount.yaml
    │   ├── erigon/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   └── default-values.yaml
    │   │   └── templates/
    │   │       ├── _cmd.tpl
    │   │       ├── _helpers.tpl
    │   │       ├── clusterrole.yaml
    │   │       ├── clusterrolebinding.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── poddisruptionbudget.yaml
    │   │       ├── role.yaml
    │   │       ├── rolebinding.yaml
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.p2p.nodeport.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── erpc/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── eth-faucet/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       └── serviceaccount.yaml
    │   ├── eth2-fork-mon/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   └── ct-values.yaml
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── ethereum-address-metrics-exporter/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── servicemonitor.yaml
    │   ├── ethereum-metrics-exporter/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── servicemonitor.yaml
    │   ├── ethereum-node/
    │   │   ├── README.md
    │   │   ├── Chart.lock
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   ├── clients/
    │   │   │   │   ├── consensus/
    │   │   │   │   │   ├── grandine.yaml
    │   │   │   │   │   ├── lighthouse.yaml
    │   │   │   │   │   ├── lodestar.yaml
    │   │   │   │   │   ├── nimbus.yaml
    │   │   │   │   │   ├── prysm.yaml
    │   │   │   │   │   └── teku.yaml
    │   │   │   │   └── execution/
    │   │   │   │       ├── besu.yaml
    │   │   │   │       ├── erigon.yaml
    │   │   │   │       ├── ethereumjs.yaml
    │   │   │   │       ├── geth.yaml
    │   │   │   │       ├── nethermind.yaml
    │   │   │   │       └── reth.yaml
    │   │   │   └── networks/
    │   │   │       ├── goerli.yaml
    │   │   │       ├── holesky.yaml
    │   │   │       ├── mainnet.yaml
    │   │   │       └── sepolia.yaml
    │   │   └── templates/
    │   │       └── NOTES.txt
    │   ├── ethereum-validator-metrics-exporter/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── servicemonitor.yaml
    │   ├── ethereumjs/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   └── default-values.yaml
    │   │   └── templates/
    │   │       ├── _cmd.tpl
    │   │       ├── _helpers.tpl
    │   │       ├── clusterrole.yaml
    │   │       ├── clusterrolebinding.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── poddisruptionbudget.yaml
    │   │       ├── role.yaml
    │   │       ├── rolebinding.yaml
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.p2p.nodeport.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── ethstats/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── fauceth/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   └── default-values.yaml
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── forkmon/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _cmd.tpl
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── ingress.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── forky/
    │   │   ├── README.md
    │   │   ├── Chart.lock
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   └── ct-values.yaml
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── servicemonitor.yaml
    │   ├── ganache/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   └── ct-values.yaml
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── genesis-generator/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   └── test-values.yaml
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── geth/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   └── default-values.yaml
    │   │   └── templates/
    │   │       ├── _cmd.tpl
    │   │       ├── _helpers.tpl
    │   │       ├── clusterrole.yaml
    │   │       ├── clusterrolebinding.yaml
    │   │       ├── configmap.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── poddisruptionbudget.yaml
    │   │       ├── role.yaml
    │   │       ├── rolebinding.yaml
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.p2p.nodeport.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── grandine/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   ├── default-values.yaml
    │   │   │   └── validator-values.yaml
    │   │   └── templates/
    │   │       ├── _cmd.tpl
    │   │       ├── _helpers.tpl
    │   │       ├── clusterrole.yaml
    │   │       ├── clusterrolebinding.yaml
    │   │       ├── ingress.yaml
    │   │       ├── poddisruptionbudget.yaml
    │   │       ├── role.yaml
    │   │       ├── rolebinding.yaml
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.p2p.nodeport.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── hermes/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── servicemonitor.yaml
    │   ├── ipfs-cluster/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   └── default-values.yaml
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── cluster.service.yaml
    │   │       ├── cluster.statefulset.yaml
    │   │       ├── clusterrole.yaml
    │   │       ├── clusterrolebinding.yaml
    │   │       ├── ingress.yaml
    │   │       ├── ipfs.init-d.configmap.yaml
    │   │       ├── ipfs.service.p2p-nodeport.yaml
    │   │       ├── ipfs.service.yaml
    │   │       ├── ipfs.statefulset.yaml
    │   │       ├── role.yaml
    │   │       ├── rolebinding.yaml
    │   │       ├── secret.yaml
    │   │       └── serviceaccount.yaml
    │   ├── lighthouse/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   ├── bootnode-values.yaml
    │   │   │   └── default-values.yaml
    │   │   └── templates/
    │   │       ├── _cmd.tpl
    │   │       ├── _helpers.tpl
    │   │       ├── clusterrole.yaml
    │   │       ├── clusterrolebinding.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── poddisruptionbudget.yaml
    │   │       ├── role.yaml
    │   │       ├── rolebinding.yaml
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.p2p.nodeport.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── lodestar/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   ├── default-values.yaml
    │   │   │   └── validator-values.yaml
    │   │   └── templates/
    │   │       ├── _cmd.tpl
    │   │       ├── _helpers.tpl
    │   │       ├── clusterrole.yaml
    │   │       ├── clusterrolebinding.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── poddisruptionbudget.yaml
    │   │       ├── role.yaml
    │   │       ├── rolebinding.yaml
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.p2p.nodeport.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── nethermind/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   └── default-values.yaml
    │   │   └── templates/
    │   │       ├── _cmd.tpl
    │   │       ├── _helpers.tpl
    │   │       ├── clusterrole.yaml
    │   │       ├── clusterrolebinding.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── poddisruptionbudget.yaml
    │   │       ├── role.yaml
    │   │       ├── rolebinding.yaml
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.p2p.nodeport.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── nimbus/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   ├── default-values.yaml
    │   │   │   └── validator-values.yaml
    │   │   └── templates/
    │   │       ├── _cmd.tpl
    │   │       ├── _helpers.tpl
    │   │       ├── clusterrole.yaml
    │   │       ├── clusterrolebinding.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── poddisruptionbudget.yaml
    │   │       ├── role.yaml
    │   │       ├── rolebinding.yaml
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.p2p.nodeport.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── powfaucet/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── service-headless.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── prysm/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   ├── default-values.yaml
    │   │   │   └── validator-values.yaml
    │   │   └── templates/
    │   │       ├── _cmd.tpl
    │   │       ├── _helpers.tpl
    │   │       ├── clusterrole.yaml
    │   │       ├── clusterrolebinding.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── poddisruptionbudget.yaml
    │   │       ├── role.yaml
    │   │       ├── rolebinding.yaml
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.p2p.nodeport.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── reth/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   └── default-values.yaml
    │   │   └── templates/
    │   │       ├── _cmd.tpl
    │   │       ├── _helpers.tpl
    │   │       ├── clusterrole.yaml
    │   │       ├── clusterrolebinding.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── poddisruptionbudget.yaml
    │   │       ├── role.yaml
    │   │       ├── rolebinding.yaml
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.p2p.nodeport.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── rpc-proxy/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── rpc-snooper/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── smart-contract-verifier-http/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   └── default-values.yaml
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── spamoor/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _cmd.tpl
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── service-headless.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           ├── test-connection-headless.yaml
    │   │           └── test-connection.yaml
    │   ├── splitoor/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── NOTES.txt
    │   │       ├── pdb.yaml
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── servicemonitor.yaml
    │   ├── stubbies/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── servicemonitor.yaml
    │   ├── teku/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   ├── default-values.yaml
    │   │   │   └── validator-values.yaml
    │   │   └── templates/
    │   │       ├── _cmd.tpl
    │   │       ├── _helpers.tpl
    │   │       ├── clusterrole.yaml
    │   │       ├── clusterrolebinding.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── poddisruptionbudget.yaml
    │   │       ├── role.yaml
    │   │       ├── rolebinding.yaml
    │   │       ├── secret.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.p2p.nodeport.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── testnet-faucet/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── pdb.yaml
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── testnet-homepage/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── pdb.yaml
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── tracoor-agent/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── NOTES.txt
    │   │       ├── pdb.yaml
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── servicemonitor.yaml
    │   ├── tracoor-server/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── hpa.yaml
    │   │       ├── ingress-grpc.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── pdb.yaml
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── servicemonitor.yaml
    │   ├── tracoor-single/
    │   │   ├── README.md
    │   │   ├── Chart.lock
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── ingress-grpc.yaml
    │   │       ├── ingress.yaml
    │   │       ├── NOTES.txt
    │   │       ├── pdb.yaml
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       └── statefulset.yaml
    │   ├── web3signer/
    │   │   ├── README.md
    │   │   ├── Chart.lock
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   ├── ci/
    │   │   │   └── default-values.yaml
    │   │   └── templates/
    │   │       ├── _cmd.tpl
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── ingress.yaml
    │   │       ├── pdb.yaml
    │   │       ├── service-headless.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       ├── statefulset.yaml
    │   │       └── tests/
    │   │           └── test-connection.yaml
    │   ├── xatu-cannon/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── NOTES.txt
    │   │       ├── pdb.yaml
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       └── statefulset.yaml
    │   ├── xatu-cl-mimicry/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── NOTES.txt
    │   │       ├── pdb.yaml
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       ├── servicemonitor.yaml
    │   │       └── statefulset.yaml
    │   ├── xatu-discovery/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── NOTES.txt
    │   │       ├── pdb.yaml
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── servicemonitor.yaml
    │   ├── xatu-mimicry/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── NOTES.txt
    │   │       ├── pdb.yaml
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── servicemonitor.yaml
    │   ├── xatu-relay-monitor/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── NOTES.txt
    │   │       ├── pdb.yaml
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── servicemonitor.yaml
    │   ├── xatu-sage/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── NOTES.txt
    │   │       ├── pdb.yaml
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── servicemonitor.yaml
    │   ├── xatu-sentry/
    │   │   ├── README.md
    │   │   ├── Chart.yaml
    │   │   ├── README.md.gotmpl
    │   │   ├── values.yaml
    │   │   ├── .helmignore
    │   │   └── templates/
    │   │       ├── _helpers.tpl
    │   │       ├── configmap.yaml
    │   │       ├── deployment.yaml
    │   │       ├── NOTES.txt
    │   │       ├── pdb.yaml
    │   │       ├── secret.yaml
    │   │       ├── service.yaml
    │   │       ├── serviceaccount.yaml
    │   │       └── servicemonitor.yaml
    │   └── xatu-server/
    │       ├── README.md
    │       ├── Chart.yaml
    │       ├── README.md.gotmpl
    │       ├── values.yaml
    │       ├── .helmignore
    │       └── templates/
    │           ├── _helpers.tpl
    │           ├── configmap.yaml
    │           ├── deployment.yaml
    │           ├── hpa.yaml
    │           ├── ingress.yaml
    │           ├── NOTES.txt
    │           ├── pdb.yaml
    │           ├── secret.yaml
    │           ├── service.yaml
    │           ├── serviceaccount.yaml
    │           └── servicemonitor.yaml
    └── .github/
        ├── CODEOWNERS
        ├── dependabot.yml
        └── workflows/
            ├── check-typos.yaml
            ├── release.yaml
            ├── test-charts.yaml
            └── test-ethereum-node.yaml

================================================
FILE: README.md
================================================
# Ethereum Helm Charts

[![Release Helm Charts](https://github.com/ethpandaops/ethereum-helm-charts/actions/workflows/release.yaml/badge.svg)](https://github.com/ethpandaops/ethereum-helm-charts/actions/workflows/release.yaml)
[![Artifact Hub](https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/ethereum-helm-charts)](https://artifacthub.io/packages/search?repo=ethereum-helm-charts)

A set of [Helm](https://helm.sh/) charts to run multiple components of the [Ethereum](https://ethereum.org/) blockchain on [Kubernetes](https://kubernetes.io/).

Deployment examples that use these helm charts can be found under [ethpandaops/ethereum-k8s-testnets](https://github.com/ethpandaops/ethereum-k8s-testnets).

## Usage

[Helm](https://helm.sh) must be installed to use the charts.  Please refer to
Helm's [documentation](https://helm.sh/docs) to get started.

Once Helm has been set up correctly, add the repo as follows:

```sh
helm repo add ethereum-helm-charts https://ethpandaops.github.io/ethereum-helm-charts
```

If you had already added this repo earlier, run `helm repo update` to retrieve
the latest versions of the packages.  You can then run the following command to see the charts.

```sh
helm search repo ethereum-helm-charts
```

To install the ethstats chart:

```sh
helm install ethstats ethereum-helm-charts/ethstats
```

To uninstall the chart:

```sh
helm delete ethstats
```

## List of charts

Execution layer clients

- [`besu`](charts/besu)
- [`erigon`](charts/erigon)
- [`ethereumjs`](charts/ethereumjs)
- [`geth`](charts/geth)
- [`nethermind`](charts/nethermind)
- [`reth`](charts/reth)

Consensus layer clients
- [`grandine`](charts/grandine)
- [`lighthouse`](charts/lighthouse)
- [`lodestar`](charts/lodestar)
- [`nimbus`](charts/nimbus)
- [`prysm`](charts/prysm)
- [`teku`](charts/teku)

Generic

- [`ethereum-node`](charts/ethereum-node) - Umbrella chart that uses the execution and consensus layer client charts.

Tooling

- [`beacon-metrics-gazer`](charts/beacon-metrics-gazer) - A prometheus exporter for Ethereum validator clients.
- [`beaconchain-explorer`](charts/beaconchain-explorer) - Beacon chain block explorer.
- [`blob-me-baby`](charts/blob-me-baby) - Send arbitrary blob data in well-formatted blobs
- [`blobscan-indexer`](charts/blobscan-indexer) - Blobscan-Indexer indexes blobs in MongoDB for use with Blobscan.
- [`blobscan`](charts/blobscan) - Blobscan is the first blockchain explorer that helps to navigate and visualize those EIP-4844 blobs.
- [`blockscout`](charts/blockscout) - Execution layer block explorer.
- [`blutgang`](charts/blutgang) - The wd40 of ethereum load balancers.
- [`checkpointz`](charts/checkpointz) - A beacon chain Checkpoint Sync provider.
- [`consensus-monitor`](charts/consensus-monitor) - Web UI to check your ethereum consensus layer nodes via their beacon APIs.
- [`contributoor`](charts/contributoor) - A lightweight sidecar that runs alongside an Ethereum consensus client and collects data.
- [`dora`](charts/dora) - Lightweight Beaconchain explorer.
- [`dugtrio`](charts/dugtrio) - Fault tolerant load balancer for beacon chain RPC apis.
- [`dshackle`](charts/dshackle) - Fault tolerant load balancer for blockchain apis, including Ethereum RPC.
- [`eleel`](charts/eleel) - A multiplexer for Ethereum execution clients.
- [`erpc`](charts/erpc) - EVM RPC proxy.
- [`eth-faucet`](charts/eth-faucet) - Ether faucet server built with Go and Svelte.
- [`eth2-fork-mon`](charts/eth2-fork-mon) - Fork monitor for a configurable set of beacon nodes.
- [`ethereum-address-metrics-exporter`](charts/ethereum-address-metrics-exporter) - A prometheus exporter for Ethereum externally owned account and contract addresses.
- [`ethereum-metrics-exporter`](charts/ethereum-metrics-exporter) - A prometheus exporter for Ethereum execution and consensus clients.
- [`ethereum-validator-metrics-exporter`](charts/ethereum-validator-metrics-exporter) - A prometheus exporter for Ethereum validators.
- [`ethstats`](charts/ethstats) - Web UI to track execution layer node status.
- [`fauceth`](charts/fauceth) - EIP1559 compatible web faucet using Hcaptcha.
- [`forkmon`](charts/forkmon) - Fork monitor for execution layer nodes.
- [`ganache`](charts/ganache) - Simulator for development and testing purposes of the execution layer.
- [`genesis-generator`](charts/genesis-generator) - A tool to generate and expose genesis files for the execution and consensus layer clients.
- [`hermes`](charts/hermes) - A GossipSub listener and tracer, subscribing to all relevant pubsub topics and traces all protocol interactions.
- [`ipfs-cluster`](charts/ipfs-cluster) - IPFS Cluster
- [`powfaucet`](charts/powfaucet) - Modularized faucet for EVM chains with different protection methods (Captcha, PoW Mining, IP Limits, Wallet Balances and more)
- [`rpc-proxy`](charts/rpc-proxy) - A proxy for web3 JSONRPC. Rate limiting and method filtering.
- [`rpc-snooper`](charts/rpc-snooper) - A tool to snoop on RPC calls and log them to stdout.
- [`smart-contract-verifier-http`](charts/smart-contract-verifier-http) - Smart contract verification service.
- [`stubbies`](charts/stubbies) - Ethereum execution client stub for consensus layer clients.
- [`testnet-faucet`](charts/testnet-faucet) - Web faucet that can be used to distribute testnet ETH to users.
- [`testnet-homepage`](charts/testnet-homepage) - Simple website that can be used to display useful information about your testnet.
- [`tracoor-single`](charts/tracoor-single) - An Ethereum beacon data and execution trace explorer in single mode.
- [`tracoor-server`](charts/tracoor-server) - An Ethereum beacon data and execution trace explorer in server mode.
- [`tracoor-agent`](charts/tracoor-agent) - An Ethereum beacon data and execution trace explorer in agent mode.
- [`web3signer`](charts/web3signer) - An open-source remote signing service.
- [`xatu-discovery`](charts/xatu-discovery) - Ethereum p2p monitoring tool that discovers node records.
- [`xatu-mimicry`](charts/xatu-mimicry) - Ethereum p2p monitoring tool that collects data from the execution layer.
- [`xatu-sentry`](charts/xatu-sentry) - Ethereum p2p monitoring tool that runs along side a [Ethereum consensus client](https://ethereum.org/en/developers/docs/nodes-and-clients/#consensus-clients) and collects data via the consensus client's [Beacon API](https://ethereum.github.io/beacon-APIs/).
- [`xatu-cannon`](charts/xatu-cannon) - Ethereum data collection tool that runs along side a [Ethereum consensus client](https://ethereum.org/en/developers/docs/nodes-and-clients/#consensus-clients) and collects data via the consensus client's [Beacon API](https://ethereum.github.io/beacon-APIs/).
- [`xatu-server`](charts/xatu-server) - Ethereum p2p monitoring tool that collects events from and controls various Xatu clients.

## Development

### Prerequisites

- [`pre-commit`](https://pre-commit.com/) - Used to setup pre-commit git hooks
- [`docker`](https://www.docker.com/) - Used by many Makefile targets

### Pre-commit hooks

This repository used [`pre-commit`](https://pre-commit.com/) to manage and run certain git hooks. Hook definitions can be found within the [`.pre-commit-config.yaml`](.pre-commit-config.yaml) file.

Run the following to add the hooks to your local repository:

```sh
make init
```

### Useful commands

The `README` for every chart is auto generated using [helm-docs](https://github.com/norwoodj/helm-docs). This is defined as a pre-commit hook. If you want to run it manually, you can run:

```sh
make docs
```

The [CT (Chart Testing)](https://github.com/helm/chart-testing) tool is used to lint and validate charts. You can run this via:

```sh
make lint
```

## License

[MIT License](LICENSE)



================================================
FILE: _typos.toml
================================================
[default]
extend-ignore-re = [
    # Ignore Ethereum Node Records (ENR)
    "enr:-.*",
    # Ignore blutgang config typo
    "supress_rpc_check",
]



================================================
FILE: ct.yaml
================================================
# This is the CT (chart testing) config file
# More infos under https://github.com/helm/chart-testing#configuration
kubectl-timeout: 60s
debug: true
remote: origin
target-branch: master
chart-dirs:
  - charts
check-version-increment: true
lint-conf: lintconf.yaml
chart-repos:
  - bitnami=https://charts.bitnami.com/bitnami
  - ethereum-helm-charts=https://ethpandaops.github.io/ethereum-helm-charts



================================================
FILE: LICENSE
================================================
MIT License

Copyright (c) 2021 Rafael Matias

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.



================================================
FILE: lintconf.yaml
================================================
---
rules:
  braces:
    min-spaces-inside: 0
    max-spaces-inside: 0
    min-spaces-inside-empty: -1
    max-spaces-inside-empty: -1
  brackets:
    min-spaces-inside: 0
    max-spaces-inside: 0
    min-spaces-inside-empty: -1
    max-spaces-inside-empty: -1
  colons:
    max-spaces-before: 0
    max-spaces-after: 1
  commas:
    max-spaces-before: 0
    min-spaces-after: 1
    max-spaces-after: 1
  comments:
    require-starting-space: false
    min-spaces-from-content: 1
  document-end: disable
  document-start: disable           # No --- to start a file
  empty-lines:
    max: 2
    max-start: 0
    max-end: 0
  hyphens:
    max-spaces-after: 1
  indentation:
    spaces: consistent
    indent-sequences: whatever      # - list indentation will handle both indentation and without
    check-multi-line-strings: false
  key-duplicates: enable
  line-length: disable              # Lines can be any length
  new-line-at-end-of-file: enable
  new-lines:
    type: unix
  trailing-spaces: enable
  truthy:
    level: warning



================================================
FILE: Makefile
================================================
SHELL=/bin/bash

UID := $(shell id -u)
CURRENT_DIR := $(shell pwd)

.PHONY: init lint docs clean

init:
	@pre-commit install

lint:
	@docker run --rm --workdir /workdir --volume "$(CURRENT_DIR):/workdir" -u $(UID) -e "HOME=/tmp" quay.io/helmpack/chart-testing:v3.10.0 sh -ac 'chown ${UID} .; exec ct lint --target-branch master'

docs:
	@docker run --rm --volume "$(CURRENT_DIR):/helm-docs" -u $(UID) jnorwood/helm-docs:v1.5.0

clean:
	@pre-commit uninstall



================================================
FILE: .pre-commit-config.yaml
================================================
repos:
  - repo: local
    hooks:
      - id: helm-docs
        name: Helm Docs
        args: []
        description: >
          Uses 'helm-docs' to create documentation from the Helm chart's 'values.yaml' file,
          and inserts the result into a corresponding 'README.md' file.
        entry: jnorwood/helm-docs:v1.5.0
        files: (README\.md\.gotmpl|(Chart|requirements|values)\.yaml)$
        language: docker_image
        require_serial: true



================================================
FILE: charts/armiarma/README.md
================================================

# armiarma

![Version: 0.1.2](https://img.shields.io/badge/Version-0.1.2-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

A distributed p2p network monitoring tool

**Homepage:** <https://github.com/migalabs/armiarma>

## Requirements

| Repository | Name | Version |
|------------|------|---------|
| https://charts.bitnami.com/bitnami | postgresql | 13.2.23 |

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `["eth2","--persist-connevents=false","--persist-msgs=false"]` | Custom args for the armiarma container |
| customCommand | list | `[]` | Command replacement for the armiarma container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| global | object | `{"postgresql":{"auth":{"database":"armiarmadb","password":"postgres","postgresqlPassword":"postgres","user":"postgres"}}}` | Global values |
| image.pullPolicy | string | `"IfNotPresent"` | armiarma container pull policy |
| image.repository | string | `"ethpandaops/armiarma"` | armiarma container image repository |
| image.tag | string | `"master"` | armiarma container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for exposing the SSE port |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| metricsPort | int | `9080` | Metrics port |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| p2pNodePort.enabled | bool | `false` | Expose P2P port via NodePort |
| p2pNodePort.initContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.initContainer.image.repository | string | `"lachlanevenson/k8s-kubectl"` | Container image to fetch nodeport information |
| p2pNodePort.initContainer.image.tag | string | `"v1.25.4"` | Container tag |
| p2pNodePort.port | int | `31000` | NodePort to be used |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| postgresql | object | `{"enabled":true,"image":{"repository":"bitnami/postgresql","tag":"14-debian-11"},"nameOverride":"postgresql","postgresqlDatabase":"armiarmadb","postgresqlPassword":"postgres","postgresqlUsername":"postgres","primary":{"persistence":{"enabled":true,"size":"8Gi"}}}` | Postgresql subchart configuration |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{"ARMIARMA_BACKUP_INTERVAL":"12h","ARMIARMA_FORK_DIGEST":"0x4a26c58b","ARMIARMA_GOSSIP_TOPICS":"beacon_block","ARMIARMA_LOG_LEVEL":"info","ARMIARMA_PSQL":"postgres://{{ $.Values.global.postgresql.auth.user }}:{{ $.Values.global.postgresql.auth.password }}@{{ include \"armiarma.fullname\" $ }}-postgresql:5432/{{ $.Values.global.postgresql.auth.database }}","ARMIARMA_SUBNETS":"all"}` | Env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| ssePort | int | `9099` | SSE port |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |



================================================
FILE: charts/armiarma/Chart.lock
================================================
dependencies:
- name: postgresql
  repository: https://charts.bitnami.com/bitnami
  version: 13.2.23
digest: sha256:29f892fc9caea67e8d827f6e81cb2783de11c282832e07cabbc04fb429971184
generated: "2023-12-05T10:41:26.555587+10:00"



================================================
FILE: charts/armiarma/Chart.yaml
================================================
apiVersion: v2
name: armiarma
description: A distributed p2p network monitoring tool
home: https://github.com/migalabs/armiarma
type: application
version: 0.1.2
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org
dependencies:
- name: postgresql
  version: 13.2.23
  repository: "https://charts.bitnami.com/bitnami"
  condition: postgresql.enabled



================================================
FILE: charts/armiarma/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/armiarma/values.yaml
================================================
# -- Global values
global:
  postgresql:
    auth:
      postgresqlPassword: postgres
      user: postgres
      password: postgres
      database: armiarmadb

# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- armiarma container image repository
  repository: ethpandaops/armiarma
  # -- armiarma container image tag
  tag: master
  # -- armiarma container pull policy
  pullPolicy: IfNotPresent

# -- Custom args for the armiarma container
customArgs:
  - eth2
  - --persist-connevents=false
  - --persist-msgs=false

# -- Command replacement for the armiarma container
customCommand: []

# -- Env variables injected via a created secret
secretEnv:
  ARMIARMA_LOG_LEVEL: "info"
  ARMIARMA_PSQL: "postgres://{{ $.Values.global.postgresql.auth.user }}:{{ $.Values.global.postgresql.auth.password }}@{{ include \"armiarma.fullname\" $ }}-postgresql:5432/{{ $.Values.global.postgresql.auth.database }}"
  ARMIARMA_BACKUP_INTERVAL: "12h"
  ARMIARMA_FORK_DIGEST: "0x4a26c58b"
  ARMIARMA_GOSSIP_TOPICS: "beacon_block"
  ARMIARMA_SUBNETS: "all"

# When p2pNodePort is enabled, your P2P port will be exposed via service type NodePort.
# This will generate a service for each replica, with a port binding via NodePort.
# This is useful if you want to expose and announce your node to the Internet.
p2pNodePort:
  # -- Expose P2P port via NodePort
  enabled: false
  # -- NodePort to be used
  port: 31000
  initContainer:
    image:
      # -- Container image to fetch nodeport information
      repository: lachlanevenson/k8s-kubectl
      # -- Container tag
      tag: v1.25.4
      # -- Container pull policy
      pullPolicy: IfNotPresent

# -- Metrics port
metricsPort: 9080

# -- SSE port
ssePort: 9099

ingress:
  # -- Ingress resource for exposing the SSE port
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

# -- Postgresql subchart configuration
postgresql:
  enabled: true
  nameOverride: "postgresql"
  image:
    repository: bitnami/postgresql
    tag: 14-debian-11

  primary:
    persistence:
      enabled: true
      size: 8Gi
  postgresqlDatabase: armiarmadb
  postgresqlUsername: postgres
  postgresqlPassword: postgres



================================================
FILE: charts/armiarma/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/armiarma/ci/default-values.yaml
================================================
secretEnv:
  HCAPTCHA_SECRET: "your_hcaptcha_secret"
  HCAPTCHA_SITEKEY: "your_hcaptcha_site_key"
  APP_ETHKEY: "6c9bd4919736ead6bdeb0441cd8124c16e45a881aef5d11de24be12ee9ecafe3"
  APP_AMOUNT: "1000000000000000000" # 1 ETH
  APP_CHAINS: "5"
  #APP_IMAGEURL:
  APP_TITLE: "%CHAINNAME armiarma"



================================================
FILE: charts/armiarma/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "armiarma.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "armiarma.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "armiarma.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "armiarma.labels" -}}
helm.sh/chart: {{ include "armiarma.chart" . }}
{{ include "armiarma.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "armiarma.selectorLabels" -}}
app.kubernetes.io/name: {{ include "armiarma.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "armiarma.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "armiarma.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "armiarma.metricsPort" -}}
{{ .Values.metricsPort }}
{{- end -}}

{{- define "armiarma.ssePort" -}}
{{ .Values.ssePort }}
{{- end -}}

{{- define "armiarma.secretEnv" -}}
ARMIARMA_PORT: {{ tpl (.Values.p2pNodePort.port | toString) . |  b64enc }}
ARMIARMA_METRICS_PORT: {{ tpl (.Values.metricsPort | toString) . |  b64enc }}
ARMIARMA_SSE_PORT: {{ tpl (.Values.ssePort | toString) .  |  b64enc }}
{{- range $key, $value := .Values.secretEnv }}
{{ $key }}: {{ tpl (toString ($value | toYaml)) $ | b64enc }}
{{- end -}}
{{- end -}}

{{- define "armiarma.p2pPort" -}}
{{- print .Values.p2pNodePort.port }}
{{- end -}}



================================================
FILE: charts/armiarma/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "armiarma.fullname" . -}}
{{- $svcPort := include "armiarma.ssePort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "armiarma.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/armiarma/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "armiarma.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "armiarma.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "armiarma.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "armiarma.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "armiarma.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/armiarma/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "armiarma.fullname" . }}-env
  labels:
    {{- include "armiarma.labels" . | nindent 4 }}
data:
{{- include "armiarma.secretEnv" . | nindent 2 }}



================================================
FILE: charts/armiarma/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "armiarma.fullname" . }}-headless
  labels:
    {{- include "armiarma.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "armiarma.metricsPort" . }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    - port: {{ include "armiarma.ssePort" . }}
      targetPort: sse
      protocol: TCP
      name: sse
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "armiarma.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/armiarma/templates/service.p2p.nodeport.yaml
================================================
{{- if .Values.p2pNodePort.enabled -}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "armiarma.fullname" $ }}-p2p-0
  labels:
    {{- include "armiarma.labels" $ | nindent 4 }}
    pod: {{ include "armiarma.fullname" $ }}-0
    type: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p-tcp
      port: {{ include "armiarma.p2pPort" $ }}
      protocol: TCP
      targetPort: p2p-tcp
      nodePort: {{ include "armiarma.p2pPort" $ }}
    - name: p2p-udp
      port: {{ include "armiarma.p2pPort" $ }}
      protocol: UDP
      targetPort: p2p-udp
      nodePort: {{ include "armiarma.p2pPort" $ }}
  selector:
    {{- include "armiarma.selectorLabels" $ | nindent 4 }}
    statefulset.kubernetes.io/pod-name: "{{ include "armiarma.fullname" $ }}-0"
{{- end }}



================================================
FILE: charts/armiarma/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "armiarma.fullname" . }}
  labels:
    {{- include "armiarma.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "armiarma.metricsPort" . }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    - port: {{ include "armiarma.ssePort" . }}
      targetPort: sse
      protocol: TCP
      name: sse
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "armiarma.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/armiarma/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "armiarma.serviceAccountName" . }}
  labels:
    {{- include "armiarma.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/armiarma/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "armiarma.fullname" . }}
  labels:
    {{- include "armiarma.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "armiarma.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "armiarma.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "armiarma.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "armiarma.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- if .Values.p2pNodePort.enabled }}
        - name: init-nodeport
          image: "{{ .Values.p2pNodePort.initContainer.image.repository }}:{{ .Values.p2pNodePort.initContainer.image.tag }}"
          imagePullPolicy: {{.Values.p2pNodePort.initContainer.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - sh
            - -c
            - >
              export EXTERNAL_PORT=$(kubectl get services -l "pod in (${POD_NAME}), type in (p2p)" -o jsonpath='{.items[0].spec.ports[0].nodePort}');
              export EXTERNAL_IP=$(kubectl get nodes "${NODE_NAME}" -o jsonpath='{.status.addresses[?(@.type=="ExternalIP")].address}');
              echo "EXTERNAL_PORT=$EXTERNAL_PORT" >  /env/init-nodeport;
              echo "EXTERNAL_IP=$EXTERNAL_IP"     >> /env/init-nodeport;
              cat /env/init-nodeport;
          volumeMounts:
            - name: env-nodeport
              mountPath: /env
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if gt (len .Values.customCommand) 0 }}
          command:
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: "/config"
            {{- if .Values.p2pNodePort.enabled }}
            - name: env-nodeport
              mountPath: /env
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
          ports:
            - name: metrics
              containerPort: {{ include "armiarma.metricsPort" . }}
              protocol: TCP
            - name: sse
              containerPort: {{ include "armiarma.ssePort" . }}
              protocol: TCP
            {{- if .Values.p2pNodePort.enabled }}
            - name: p2p-tcp
              containerPort: {{ include "armiarma.p2pPort" . }}
              protocol: TCP
            - name: p2p-udp
              containerPort: {{ include "armiarma.p2pPort" . }}
              protocol: UDP
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - secretRef:
                name: {{ include "armiarma.fullname" $ }}-env

          {{- if .Values.extraEnv }}
          env:
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: config
          emptyDir: {}
      {{- if .Values.p2pNodePort.enabled }}
        - name: env-nodeport
          emptyDir: {}
      {{- end }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}



================================================
FILE: charts/assertoor/README.md
================================================

# assertoor

![Version: 1.0.1](https://img.shields.io/badge/Version-1.0.1-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Testing tool that is capable of doing actions and checking conditions on ethereum pos networks.

**Homepage:** <https://github.com/ethpandaops/assertoor>

## Source Code

* <https://github.com/ethpandaops/assertoor>

# Usage

Usage: assertoor --config config.yaml

Helper:
```shell
Usage of ./assertoor:
--config string
    Path to the assertoor config file
```

Example Configuration:
```yaml
endpoints:
  - name: node1
    executionUrl: "http://execution-node:8545"
    consensusUrl: "http://beacon-node:5052"

globalVariables:
  walletPrivkey: "feedbeef12340000feedbeef12340000feedbeef12340000feedbeef12340000"

assertoorTests:
  - file: "https://raw.githubusercontent.com/ethpandaops/assertoor-test/master/assertoor-tests/block-proposal-check.yaml"
    name: "Custom Block proposal check"
    timeout: 48h
    config:
      validatorPairNames: ["geth", "besu"]
    schedule:
      cron:
        - "0 */2 * * *" # every 2 hours
      startup: true
  - file: "https://raw.githubusercontent.com/ethpandaops/assertoor-test/master/assertoor-tests/stability-check.yaml"
  - file: "https://raw.githubusercontent.com/ethpandaops/assertoor-test/master/assertoor-tests/all-opcodes-test.yaml"
  - file: "https://raw.githubusercontent.com/ethpandaops/assertoor-test/master/assertoor-tests/validator-lifecycle-test-small.yaml"

```

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| assertoorApiEnabled | bool | `true` | Enable assertoor API |
| assertoorFrontendEnabled | bool | `true` | Enable assertoor UI |
| assertoorMaxConcurrentTests | int | `1` | Maximum number of concurrent tests |
| assertoorTestRetentionTime | string | `"720h"` | Test retention time |
| assertoorTests | list | `[]` | assertoor test configurations -- file is the only required field. All other fields default to the values provided in the test file, but can be overridden if needed. |
| config | string | See `values.yaml` | Config file |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `["--config=/config/assertoor-config.yaml"]` | Custom args for the assertoor container |
| customCommand | list | `[]` | Command replacement for the assertoor container |
| endpoints | list | `[{"consensusHeaders":{"X-Test":"test","Y-Test":"test2"},"consensusUrl":"http://beacon-node:5052","executionHeaders":{"X-Test":"test","Y-Test":"test2"},"executionUrl":"http://execution-node:8545","name":"default-endpoint"}]` | An array of endpoints to use for assertoor -- executionUrl & consensusUrl are the only required fields |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| globalVariables | object | `{"walletPrivkey":"feedbeef12340000feedbeef12340000feedbeef12340000feedbeef12340000"}` | global assertoor variables -- global variables are passed to all tests. |
| httpPort | int | `8082` | HTTP port for assertoor interface |
| httpPortAdmin | int | `8080` | HTTP port for assertoor admin interface |
| image.pullPolicy | string | `"IfNotPresent"` | assertoor container pull policy |
| image.repository | string | `"ethpandaops/assertoor"` | assertoor container image repository |
| image.tag | string | `"latest"` | assertoor container image tag |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| ingressAdmin.annotations | object | `{}` | Annotations for Ingress |
| ingressAdmin.enabled | bool | `false` | Ingress resource for the HTTP API -- This is the admin interface -- Please ensure you put this behind authorization |
| ingressAdmin.hosts[0].host | string | `"chart-example-admin.local"` |  |
| ingressAdmin.hosts[0].paths | list | `[]` |  |
| ingressAdmin.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"5Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| resources | object | `{}` | Resource requests and limits |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |
| validatorNamesInventory | string | `""` | This can be a url here for example: -- "https://config.dencun-devnet-8.ethpandaops.io/api/v1/nodes/validator-ranges" -- If you want to use a local range file define it in the values.yaml validatorNamesRanges section |
| validatorNamesRanges | string | `"0-1: test\n"` |  |



================================================
FILE: charts/assertoor/Chart.yaml
================================================
apiVersion: v2
name: assertoor
description: >
  Testing tool that is capable of doing actions and checking conditions on ethereum pos networks.
home: https://github.com/ethpandaops/assertoor
sources:
  - https://github.com/ethpandaops/assertoor
type: application
version: 1.0.1
appVersion: "1.0.0"
maintainers:
  - name: pk910
    email: philipp@pk910.de



================================================
FILE: charts/assertoor/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}


{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}


# Usage

Usage: assertoor --config config.yaml

Helper:
```shell
Usage of ./assertoor:
--config string
    Path to the assertoor config file
```

Example Configuration:
```yaml
endpoints:
  - name: node1
    executionUrl: "http://execution-node:8545"
    consensusUrl: "http://beacon-node:5052"

globalVariables:
  walletPrivkey: "feedbeef12340000feedbeef12340000feedbeef12340000feedbeef12340000"

assertoorTests:
  - file: "https://raw.githubusercontent.com/ethpandaops/assertoor-test/master/assertoor-tests/block-proposal-check.yaml"
    name: "Custom Block proposal check"
    timeout: 48h
    config:
      validatorPairNames: ["geth", "besu"]
    schedule:
      cron:
        - "0 */2 * * *" # every 2 hours
      startup: true
  - file: "https://raw.githubusercontent.com/ethpandaops/assertoor-test/master/assertoor-tests/stability-check.yaml"
  - file: "https://raw.githubusercontent.com/ethpandaops/assertoor-test/master/assertoor-tests/all-opcodes-test.yaml"
  - file: "https://raw.githubusercontent.com/ethpandaops/assertoor-test/master/assertoor-tests/validator-lifecycle-test-small.yaml"

```

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/assertoor/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- assertoor container image repository
  repository: ethpandaops/assertoor
  # -- assertoor container image tag
  tag: "latest"
  # -- assertoor container pull policy
  pullPolicy: IfNotPresent

# -- Custom args for the assertoor container
customArgs:
  - --config=/config/assertoor-config.yaml

# -- Command replacement for the assertoor container
customCommand: [] # Only change this if you need to change the default command

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host for public service
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

ingressAdmin:
  # -- Ingress resource for the HTTP API
  # -- This is the admin interface
  # -- Please ensure you put this behind authorization
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host for admin service
  hosts:
    - host: chart-example-admin.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Annotations for the StatefulSet
annotations: {}

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 5Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []


# -- HTTP port for assertoor interface
httpPort: 8082

# -- HTTP port for assertoor admin interface
httpPortAdmin: 8080

# -- An array of endpoints to use for assertoor
# -- executionUrl & consensusUrl are the only required fields
endpoints:
  - name: default-endpoint
    executionUrl: "http://execution-node:8545"
    executionHeaders:
      "X-Test": "test"
      "Y-Test": "test2"
    consensusUrl: "http://beacon-node:5052"
    consensusHeaders:
      "X-Test": "test"
      "Y-Test": "test2"

# -- This can be a url here for example:
# -- "https://config.dencun-devnet-8.ethpandaops.io/api/v1/nodes/validator-ranges"
# -- If you want to use a local range file define it in the values.yaml validatorNamesRanges section
validatorNamesInventory: ""

validatorNamesRanges: |
  0-1: test

# -- Enable assertoor UI
assertoorFrontendEnabled: true

# -- Enable assertoor API
assertoorApiEnabled: true

# -- Maximum number of concurrent tests
assertoorMaxConcurrentTests: 1

# -- Test retention time
assertoorTestRetentionTime: 720h

# -- global assertoor variables
# -- global variables are passed to all tests.
globalVariables:
  walletPrivkey: "feedbeef12340000feedbeef12340000feedbeef12340000feedbeef12340000"

# -- assertoor test configurations
# -- file is the only required field. All other fields default to the values provided in the test file, but can be overridden if needed.
assertoorTests: []

# -- Config file
# @default -- See `values.yaml`
config: |
  web:
    server:
      host: "0.0.0.0"
      port: {{ .Values.httpPortAdmin }}
    publicServer:
      host: "0.0.0.0"
      port: {{ .Values.httpPort }}
    frontend:
      enabled: {{ .Values.assertoorFrontendEnabled }}
    api:
      enabled: {{ .Values.assertoorApiEnabled }}

  database:
    engine: "sqlite"
    sqlite:
      file: "/data/assertoor.sqlite"

  coordinator:
    maxConcurrentTests: {{ .Values.assertoorMaxConcurrentTests }}
    testRetentionTime: {{ .Values.assertoorTestRetentionTime }}

  # Endpoints
  endpoints:
    {{- range .Values.endpoints }}
    - executionUrl: {{ .executionUrl | quote }}
      consensusUrl: {{ .consensusUrl | quote }}
      {{- if .name }}
      name: {{ .name | quote }}
      {{- end }}
      {{- if .consensusHeaders }}
      consensusHeaders:
      {{- range $key, $value := .consensusHeaders }}
        {{ $key | quote | default "" }}: {{ $value | quote | default ""}}
      {{- end }}
      {{- end }}
      {{- if .executionHeaders }}
      executionHeaders:
      {{- range $key, $value := .executionHeaders }}
        {{ $key | quote | default "" }}: {{ $value | quote | default ""}}
      {{- end }}
      {{- end }}
    {{- end }}

  # Validator names
  validatorNames:
    inventoryYaml: "/config/ranges.yaml"
    inventoryUrl: "{{ .Values.validatorNamesInventory }}"

  globalVars:
    {{- toYaml .Values.globalVariables | nindent 2 }}

  # Test definitions
  externalTests:
    {{- range .Values.assertoorTests }}
    - file: {{ .file | quote }}
      {{- if .name }}
      name: {{ .name | quote }}
      {{- end }}
      {{- if .timeout }}
      timeout: {{ .timeout | quote }}
      {{- end }}
      {{- if .config }}
      config:
        {{- toYaml .config | nindent 6 }}
      {{- end }}
      {{- if .schedule }}
      schedule:
        {{- toYaml .schedule | nindent 6 }}
      {{- end }}
    {{- end }}



================================================
FILE: charts/assertoor/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/assertoor/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "assertoor.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "assertoor.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "assertoor.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "assertoor.labels" -}}
helm.sh/chart: {{ include "assertoor.chart" . }}
{{ include "assertoor.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "assertoor.selectorLabels" -}}
app.kubernetes.io/name: {{ include "assertoor.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "assertoor.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "assertoor.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "assertoor.httpPort" -}}
{{- printf "8082" -}}
{{- end -}}

{{- define "assertoor.httpPortAdmin" -}}
{{- printf "8080" -}}
{{- end -}}



================================================
FILE: charts/assertoor/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "assertoor.fullname" . }}-ranges
  labels:
    {{- include "assertoor.labels" . | nindent 4 }}
data:
  ranges.yaml: |
    {{- .Values.validatorNamesRanges | nindent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "assertoor.fullname" . }}-config
  labels:
    {{- include "assertoor.labels" . | nindent 4 }}
data:
  assertoor-config.yaml: |
    {{- tpl .Values.config . | nindent 4 }}





================================================
FILE: charts/assertoor/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "assertoor.fullname" . -}}
{{- $svcPortPublic := include "assertoor.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "assertoor.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPortPublic }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPortPublic }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}
---
{{- if .Values.ingressAdmin.enabled -}}
{{- $fullName := include "assertoor.fullname" . -}}
{{- $svcPortAdmin := include "assertoor.httpPortAdmin" . -}}
{{- if and .Values.ingressAdmin.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingressAdmin.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingressAdmin.annotations "kubernetes.io/ingress.class" .Values.ingressAdmin.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}-admin
  labels:
    {{- include "assertoor.labels" . | nindent 4 }}
  {{- with .Values.ingressAdmin.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingressAdmin.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingressAdmin.className }}
  {{- end }}
  {{- if .Values.ingressAdmin.tls }}
  tls:
    {{- range .Values.ingressAdmin.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingressAdmin.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPortAdmin }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPortAdmin }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/assertoor/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "assertoor.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "assertoor.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "assertoor.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "assertoor.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "assertoor.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/assertoor/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "assertoor.fullname" . }}-headless
  labels:
    {{- include "assertoor.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "assertoor.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ include "assertoor.httpPortAdmin" . }}
      targetPort: http-admin
      protocol: TCP
      name: http-admin
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "assertoor.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/assertoor/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "assertoor.fullname" . }}
  labels:
    {{- include "assertoor.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "assertoor.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ include "assertoor.httpPortAdmin" . }}
      targetPort: http-admin
      protocol: TCP
      name: http-admin
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "assertoor.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/assertoor/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "assertoor.serviceAccountName" . }}
  labels:
    {{- include "assertoor.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/assertoor/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "assertoor.fullname" . }}
  labels:
    {{- include "assertoor.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "assertoor.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "assertoor.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "assertoor.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "assertoor.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if gt (len .Values.customCommand) 0 }}
          command:
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: storage
              mountPath: "/data"
            - name: config
              mountPath: "/config/assertoor-config.yaml"
              subPath: assertoor-config.yaml
              readOnly: true
            - name: ranges
              mountPath: "/config/ranges.yaml"
              subPath: ranges.yaml
              readOnly: true
          ports:
            - name: http
              containerPort: {{ include "assertoor.httpPort" . }}
              protocol: TCP
            - name: http-admin
              containerPort: {{ include "assertoor.httpPortAdmin" . }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: config
          configMap:
            name: {{ include "assertoor.fullname" . }}-config
        - name: ranges
          configMap:
            name: {{ include "assertoor.fullname" . }}-ranges
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/assertoor/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "assertoor.fullname" . }}-test-connection"
  labels:
    {{- include "assertoor.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - --location
       - --request
       - GET
       - '{{ include "assertoor.fullname" . }}:{{ include "assertoor.httpPortAdmin" . }}/'
  restartPolicy: Never



================================================
FILE: charts/beacon-metrics-gazer/README.md
================================================

# beacon-metrics-gazer

![Version: 0.1.4](https://img.shields.io/badge/Version-0.1.4-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Collects network wide participation metrics given a range of indexes

**Homepage:** <https://github.com/dapplion/beacon-metrics-gazer>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customCommand | list | `[]` | Command replacement for the forkmon container |
| endpoint | string | `"http://beacon-node:5052"` | Endpoint that you would like to monitor |
| extraArgs | list | `[]` | Extra args for the forkmon container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `8080` |  |
| image.pullPolicy | string | `"IfNotPresent"` | forkmon container pull policy |
| image.repository | string | `"dapplion/beacon-metrics-gazer"` | forkmon container image repository |
| image.tag | string | `"latest"` |  |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"1Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| ranges | string | See `values.yaml` | Config file - defaults are set to the sepolia validator set |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |

# Example

Usage: beacon-metrics-gazer [OPTIONS] <URL>

Arguments:
```shell
  <URL>  Beacon HTTP API URL: http://1.2.3.4:4000
```
Options:
```shell
      --ranges <RANGES>            Index ranges to group IDs as JSON or TXT. Example: `{"0..100": "lh-geth-0", "100..200": "lh-geth-1"}
      --ranges-file <RANGES_FILE>  Local path or URL containing a file with index ranges with the format as defined in --ranges
      --dump                       Dump participation ranges print to stderr on each fetch
  -p, --port <PORT>                Metrics server port [default: 8080]
      --address <ADDRESS>          Metrics server bind address [default: 127.0.0.1]
  -h, --help                       Print help
  -V, --version                    Print version
```
The format of the ranges file is very flexible, can be JSON, YAML or plain text:
```shell
0-500 Nethermind lighthouse-0
500-1000 Nethermind lighthouse-1
1000-1500 Nethermind teku-0
1500-2000 Nethermind teku-1
2000-2500 Nethermind lodestar-0
2500-3750 Gateway lh + nethermind
3750-5000 Gateway lh + nethermind
```

More details can be found [here](https://docs.rs/crate/beacon-metrics-gazer/0.1.1) or [here](https://github.com/dapplion/beacon-metrics-gazer).



================================================
FILE: charts/beacon-metrics-gazer/Chart.yaml
================================================
apiVersion: v2
name: beacon-metrics-gazer
description: Collects network wide participation metrics given a range of indexes
home: https://github.com/dapplion/beacon-metrics-gazer
type: application
version: 0.1.4
maintainers:
  - name: barnabasbusa
    email: busa.barnabas@gmail.com



================================================
FILE: charts/beacon-metrics-gazer/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Example

Usage: beacon-metrics-gazer [OPTIONS] <URL>

Arguments:
```shell
  <URL>  Beacon HTTP API URL: http://1.2.3.4:4000
```
Options:
```shell
      --ranges <RANGES>            Index ranges to group IDs as JSON or TXT. Example: `{"0..100": "lh-geth-0", "100..200": "lh-geth-1"}
      --ranges-file <RANGES_FILE>  Local path or URL containing a file with index ranges with the format as defined in --ranges
      --dump                       Dump participation ranges print to stderr on each fetch
  -p, --port <PORT>                Metrics server port [default: 8080]
      --address <ADDRESS>          Metrics server bind address [default: 127.0.0.1]
  -h, --help                       Print help
  -V, --version                    Print version
```
The format of the ranges file is very flexible, can be JSON, YAML or plain text:
```shell
0-500 Nethermind lighthouse-0
500-1000 Nethermind lighthouse-1
1000-1500 Nethermind teku-0
1500-2000 Nethermind teku-1
2000-2500 Nethermind lodestar-0
2500-3750 Gateway lh + nethermind
3750-5000 Gateway lh + nethermind
```

More details can be found [here](https://docs.rs/crate/beacon-metrics-gazer/0.1.1) or [here](https://github.com/dapplion/beacon-metrics-gazer).



================================================
FILE: charts/beacon-metrics-gazer/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- forkmon container image repository
  repository: dapplion/beacon-metrics-gazer
  #repository: nginx
  # -- forkmon container image tag
  tag: latest
  # -- forkmon container pull policy
  pullPolicy: IfNotPresent

# -- Endpoint that you would like to monitor
endpoint: http://beacon-node:5052

# -- Config file - defaults are set to the sepolia validator set
# @default -- See `values.yaml`
ranges: |
  0-1: test
# -- Example ranges.yaml file:
  # 0-100: EF
  # 100-199: Nethermind
  # 200-299: Besu
  # 300-399: Erigon
  # 400-499: Lighthouse
  # 500-599: Teku
  # 600-699: Nimbus
  # 700-799: Lodestar
  # 800-899: Prysm
  # 900-999: Attestant/Vouch
  # 1000-1099: q9f
  # 1100-1199: Lightclient
  # 1200-1299: Kiln.fi
  # 1300-1399: Ralexstokes
  # 1400-1499: Simply staking
  # 1500-1549: EF Security
  # 1550-1569: EF DevOps sepolia inflation
  # 1570-1572: Attestant/Vouch token/tooling test deposits
  # 1573-1672: Blox staking
  # 1673-1772: Missing keys
  # 1773-1779: Staked.us
  # 1780-1879: Obol network
  # 1880-1972: Staked.us

# - HTTP port for forkmon interface
httpPort: 8080

# -- Extra args for the forkmon container
extraArgs: []

# -- Command replacement for the forkmon container
customCommand: []

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

# -- Additional env variables injected via a created secret
secretEnv: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 1Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/beacon-metrics-gazer/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/beacon-metrics-gazer/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "beacon-metrics-gazer.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "beacon-metrics-gazer.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "beacon-metrics-gazer.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "beacon-metrics-gazer.labels" -}}
helm.sh/chart: {{ include "beacon-metrics-gazer.chart" . }}
{{ include "beacon-metrics-gazer.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "beacon-metrics-gazer.selectorLabels" -}}
app.kubernetes.io/name: {{ include "beacon-metrics-gazer.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "beacon-metrics-gazer.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "beacon-metrics-gazer.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}


================================================
FILE: charts/beacon-metrics-gazer/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "beacon-metrics-gazer.fullname" . }}
  labels:
    {{- include "beacon-metrics-gazer.labels" . | nindent 4 }}
data:
  ranges.yaml: |
    {{- tpl .Values.ranges . | nindent 4 }}





================================================
FILE: charts/beacon-metrics-gazer/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "beacon-metrics-gazer.fullname" . }}
  labels:
    {{- include "beacon-metrics-gazer.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "beacon-metrics-gazer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "beacon-metrics-gazer.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "beacon-metrics-gazer.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
              - /beacon-metrics-gazer
              - {{ .Values.endpoint }}
              - --ranges-file
              - /data/ranges.yaml
              - --port
              - "{{ .Values.httpPort }}"
              - --address
              - "0.0.0.0"
          {{- end }}
          {{- if gt (len .Values.extraArgs) 0 }}
          args:
            {{- toYaml .Values.extraArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            - name: ranges
              mountPath: "/data/ranges.yaml"
              subPath: ranges.yaml
              readOnly: true
            {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
            {{- if .Values.extraPodPorts }}
            {{ toYaml .Values.extraPodPorts | nindent 12 }}
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
        {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
        {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: ranges
          configMap:
            name: {{ include "beacon-metrics-gazer.fullname" . }}



================================================
FILE: charts/beacon-metrics-gazer/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "beacon-metrics-gazer.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "beacon-metrics-gazer.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/beacon-metrics-gazer/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "beacon-metrics-gazer.fullname" . }}
  labels:
    {{- include "beacon-metrics-gazer.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.httpPort }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "beacon-metrics-gazer.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/beacon-metrics-gazer/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "beacon-metrics-gazer.serviceAccountName" . }}
  labels:
    {{- include "beacon-metrics-gazer.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/beacon-metrics-gazer/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "beacon-metrics-gazer.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "beacon-metrics-gazer.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: http
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "beacon-metrics-gazer.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/beacon-metrics-gazer/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "beacon-metrics-gazer.fullname" . }}-test-connection"
  labels:
    {{- include "beacon-metrics-gazer.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['{{ include "beacon-metrics-gazer.fullname" . }}:{{ .Values.httpPort }}']
  restartPolicy: Never



================================================
FILE: charts/beaconchain-explorer/README.md
================================================

# beaconchain-explorer

![Version: 0.1.6](https://img.shields.io/badge/Version-0.1.6-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Beacon chain explorer built using golang and using a PostgreSQL database for storing and indexing data.

**Homepage:** <https://beaconcha.in/>

## Source Code

* <https://github.com/gobitfly/eth2-beaconchain-explorer>

## Requirements

| Repository | Name | Version |
|------------|------|---------|
| https://charts.bitnami.com/bitnami | postgresql | 11.x.x |

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| config | object | See `values.yaml` | Config file |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the beaconchain-explorer container |
| customCommand | list | `[]` | Command replacement for the beaconchain-explorer container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | beaconchain-explorer container pull policy |
| image.repository | string | `"gobitfly/eth2-beaconchain-explorer"` | beaconchain-explorer container image repository |
| image.tag | string | `"latest"` | beaconchain-explorer container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| postgresql.enabled | bool | `true` | If enabled a postgres chart will be deployed as a dependency |
| postgresql.image.registry | string | `"docker.io"` |  |
| postgresql.image.repository | string | `"bitnami/postgresql"` |  |
| postgresql.image.tag | string | `"11.13.0-debian-10-r58"` |  |
| postgresql.initdbPassword | string | `"postgres"` |  |
| postgresql.initdbScripts | object | See `values.yaml` | How to init the PSQL DB |
| postgresql.initdbUser | string | `"postgres"` |  |
| postgresql.persistence.enabled | bool | `true` |  |
| postgresql.persistence.size | string | `"8Gi"` |  |
| postgresql.postgresqlDatabase | string | `"explorer"` |  |
| postgresql.postgresqlPassword | string | `"postgres"` |  |
| postgresql.postgresqlUsername | string | `"postgres"` |  |
| postgresql.pullPolicy | string | `"IfNotPresent"` |  |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |

# Examples

## Connecting to an external PostgreSQL database

```yaml
# Disable the postgres deployment
postgresql:
  enabled: false

config:
  database:
    user: "pguser"
    name: "explorer"
    host: "your-postgres-db.somewhere.internal"
    port: "5432"
    password: "pgpassword"
```



================================================
FILE: charts/beaconchain-explorer/Chart.lock
================================================
dependencies:
- name: postgresql
  repository: https://charts.bitnami.com/bitnami
  version: 11.9.13
digest: sha256:e99b8ccc89621db99f5ff92fbdb178a236b95624fea6838606f4f6d495916055
generated: "2023-05-10T13:19:45.865804+02:00"



================================================
FILE: charts/beaconchain-explorer/Chart.yaml
================================================
apiVersion: v2
name: beaconchain-explorer
description: >
  Beacon chain explorer built using golang and using a PostgreSQL database for storing and indexing data.
home: https://beaconcha.in/
icon: https://pbs.twimg.com/profile_images/1274442538057961474/-cZGkGhP_400x400.jpg
sources:
  - https://github.com/gobitfly/eth2-beaconchain-explorer
type: application
version: 0.1.6
maintainers:
  - name: skylenet
    email: rafael@skyle.net
dependencies:
- name: postgresql
  version: "11.x.x"
  repository: "https://charts.bitnami.com/bitnami"
  condition: postgresql.enabled



================================================
FILE: charts/beaconchain-explorer/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Connecting to an external PostgreSQL database

```yaml
# Disable the postgres deployment
postgresql:
  enabled: false

config:
  database:
    user: "pguser"
    name: "explorer"
    host: "your-postgres-db.somewhere.internal"
    port: "5432"
    password: "pgpassword"
```



================================================
FILE: charts/beaconchain-explorer/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- beaconchain-explorer container image repository
  repository: gobitfly/eth2-beaconchain-explorer
  # -- beaconchain-explorer container image tag
  tag: latest
  # -- beaconchain-explorer container pull policy
  pullPolicy: IfNotPresent

# -- Custom args for the beaconchain-explorer container
customArgs: []
  #- -config-file=/somewhere-else.yaml
  #- -output-dir=public

# -- Command replacement for the beaconchain-explorer container
customCommand: [] # Only change this if you need to change the default command

# -- Config file
# @default -- See `values.yaml`
config:
  # Database credentials
  database:
    user: "postgres"
    name: "explorer"
    host: "beaconchain-explorer-postgresql"
    port: "5432"
    password: "postgres"

  # Chain network configuration (example will work for the prysm testnet)
  chain:
    slotsPerEpoch: 32
    secondsPerSlot: 12
    genesisTimestamp: 1573489682
    minGenesisActiveValidatorCount: 16384
  # Note: It is possible to run either the frontend or the indexer or both at the same time
  # Frontend config
  frontend:
    enabled: true # Enable or disable to web frontend
    phase0path: "./phase0.yml"
    imprint: "templates/imprint.example.html}**"  # Path to the imprint page content
    siteName: "Ethereum 2.0 Beacon Chain Block Chain Explorer" # Name of the site, displayed in the title tag
    siteSubtitle: "Watching all the blocks" # Subtitle shown on the main page
    csrfAuthKey: '0123456789abcdef000000000000000000000000000000000000000000000000'
    jwtSigningSecret: "0123456789abcdef000000000000000000000000000000000000000000000000"
    jwtIssuer: "beaconchain.localhost"
    jwtValidityInMinutes: 30
    server:
      host: "0.0.0.0" # Address to listen on
      port: "3333" # Port to listen on
    database:
      user: "postgres"
      name: "explorer"
      host: "beaconchain-explorer-postgresql"
      port: "5432"
      password: "postgres"
    #sessionSecret: "<sessionSecret>"
    #email:
    #  smtp:
    #    server: "<emailserver>"
    #    host: "<emailhost>"
    #    user: "<emailuser>"
    #    password: "<emailpassword>"
    #flashSecret: "" # Encryption secret for flash cookies

  # Indexer config
  indexer:
    enabled: true # Enable or disable the indexing service
    fullIndexOnStartup: false # Perform a one time full db index on startup
    indexMissingEpochsOnStartup: false # Check for missing epochs and export them after startup
    node:
      host: "prysm-beacon" # Address of the backend node
      port: "4000" # port of the backend node
      type: "prysm" # can be either prysm or lighthouse
      pageSize: 500 # the amount of entries to fetch per paged rpc call
    eth1Endpoint: 'https://holesky.infura.io/v3/<api-token>'
    eth1DepositContractAddress: '0x5cA1e00004366Ac85f492887AAab12d0e6418876'
    eth1DepositContractFirstBlock: 2523557

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

# -- Additional env variables injected via a created secret
secretEnv: {}

postgresql:
  # -- If enabled a postgres chart will be deployed as a dependency
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 11.13.0-debian-10-r58
  pullPolicy: IfNotPresent
  initdbUser: postgres
  initdbPassword: postgres
  postgresqlDatabase: explorer
  postgresqlUsername: postgres
  postgresqlPassword: postgres
  persistence:
    enabled: true
    size: 8Gi
  # -- How to init the PSQL DB
  # @default -- See `values.yaml`
  initdbScripts:
    init_01.sql: |
      CREATE DATABASE explorer;
    init_02_db.sh: |
      #!/bin/sh
      curl https://raw.githubusercontent.com/gobitfly/eth2-beaconchain-explorer/master/tables.sql -o /tmp/tables.sql
      PGPASSWORD=postgres psql -U postgres -h 127.0.0.1 -d explorer -f /tmp/tables.sql
      rm /tmp/tables.sql



================================================
FILE: charts/beaconchain-explorer/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/beaconchain-explorer/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "beaconchain-explorer.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "beaconchain-explorer.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "beaconchain-explorer.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "beaconchain-explorer.labels" -}}
helm.sh/chart: {{ include "beaconchain-explorer.chart" . }}
{{ include "beaconchain-explorer.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "beaconchain-explorer.selectorLabels" -}}
app.kubernetes.io/name: {{ include "beaconchain-explorer.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "beaconchain-explorer.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "beaconchain-explorer.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "beaconchain-explorer.httpPort" -}}
{{- printf "3333" -}}
{{- end -}}



================================================
FILE: charts/beaconchain-explorer/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "beaconchain-explorer.fullname" . }}
  labels:
    {{- include "beaconchain-explorer.labels" . | nindent 4 }}
data:
  config.yaml: |
    {{- toYaml .Values.config | nindent 4}}



================================================
FILE: charts/beaconchain-explorer/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "beaconchain-explorer.fullname" . -}}
{{- $svcPort := include "beaconchain-explorer.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "beaconchain-explorer.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/beaconchain-explorer/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "beaconchain-explorer.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "beaconchain-explorer.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "beaconchain-explorer.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "beaconchain-explorer.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "beaconchain-explorer.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/beaconchain-explorer/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "beaconchain-explorer.fullname" . }}-env
  labels:
    {{- include "beaconchain-explorer.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/beaconchain-explorer/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "beaconchain-explorer.fullname" . }}-headless
  labels:
    {{- include "beaconchain-explorer.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "beaconchain-explorer.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "beaconchain-explorer.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/beaconchain-explorer/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "beaconchain-explorer.fullname" . }}
  labels:
    {{- include "beaconchain-explorer.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "beaconchain-explorer.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "beaconchain-explorer.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/beaconchain-explorer/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "beaconchain-explorer.serviceAccountName" . }}
  labels:
    {{- include "beaconchain-explorer.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/beaconchain-explorer/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "beaconchain-explorer.fullname" . }}
  labels:
    {{- include "beaconchain-explorer.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "beaconchain-explorer.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "beaconchain-explorer.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "beaconchain-explorer.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "beaconchain-explorer.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if gt (len .Values.customCommand) 0 }}
          command:
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
          command: ["./explorer", "--config", "/config.yaml"]
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: config
              mountPath: "/config.yaml"
              subPath: config.yaml
              readOnly: true
          ports:
            - name: http
              containerPort: {{ include "beaconchain-explorer.httpPort" . }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "beaconchain-explorer.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "beaconchain-explorer.fullname" . }}



================================================
FILE: charts/beaconchain-explorer/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "beaconchain-explorer.fullname" . }}-test-connection"
  labels:
    {{- include "beaconchain-explorer.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - --location
       - --request
       - GET
       - '{{ include "beaconchain-explorer.fullname" . }}:{{ include "beaconchain-explorer.httpPort" . }}/'
  restartPolicy: Never



================================================
FILE: charts/besu/README.md
================================================

# besu

![Version: 1.0.8](https://img.shields.io/badge/Version-1.0.8-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

An Ethereum execution layer client designed to be enterprise-friendly for both public and private, permissioned network use cases. Besu is written in Java and released under the Apache 2.0 Licence.

**Homepage:** <https://www.hyperledger.org/use/besu>

## Source Code

* <https://github.com/hyperledger/besu>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| authPort | int | `8551` | Engine Port (Auth Port) |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customCommand | list | `[]` | Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplate instead. |
| defaultCommandTemplate | string | See `values.yaml` | Template used for the default command |
| extraArgs | list | `[]` | Extra args for the besu container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `8545` | HTTP Port |
| image.pullPolicy | string | `"IfNotPresent"` | besu container pull policy |
| image.repository | string | `"hyperledger/besu"` | besu container image repository |
| image.tag | string | `"latest"` | besu container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initChownData.enabled | bool | `true` | Init container to set the correct permissions to access data directories |
| initChownData.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| initChownData.image.repository | string | `"busybox"` | Container repository |
| initChownData.image.tag | string | `"1.34.0"` | Container tag |
| initChownData.resources | object | `{}` | Resource requests and limits |
| initContainers | list | `[]` | Additional init containers |
| jwt | string | `"ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a"` | JWT secret used by client as a secret. Change this value. |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| metricsPort | int | `9545` | Metrics Port |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| p2pNodePort.enabled | bool | `false` | Expose P2P port via NodePort |
| p2pNodePort.initContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.initContainer.image.repository | string | `"lachlanevenson/k8s-kubectl"` | Container image to fetch nodeport information |
| p2pNodePort.initContainer.image.tag | string | `"v1.25.4"` | Container tag |
| p2pNodePort.port | int | `31000` | NodePort to be used |
| p2pNodePort.portForwardContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.portForwardContainer.image.repository | string | `"alpine/socat"` | Container image for the port forwarder |
| p2pNodePort.portForwardContainer.image.tag | string | `"latest"` | Container tag |
| p2pPort | int | `30303` | P2P Port |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"20Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| rbac.clusterRules | list | See `values.yaml` | Required ClusterRole rules |
| rbac.create | bool | `true` | Specifies whether RBAC resources are to be created |
| rbac.rules | list | See `values.yaml` | Required ClusterRole rules |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `300` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |
| wsPort | int | `8546` | WS Port |

# Examples

## Connecting to the holesky test network

```yaml
extraArgs:
  - --network=holesky
  - --max-peers=60
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.
Currently besu doesn't allow you to announce a a different discovery port, which would be a requirement to run multiple replicas within the same chart.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```



================================================
FILE: charts/besu/Chart.yaml
================================================
apiVersion: v2
name: besu
description: >
  An Ethereum execution layer client designed to be enterprise-friendly for both public and private,
  permissioned network use cases. Besu is written in Java and released under the Apache 2.0 Licence.
home: https://www.hyperledger.org/use/besu
icon: https://launchpad.ethereum.org/static/media/hyperledger-besu-circle.b96368c7.png
sources:
  - https://github.com/hyperledger/besu
type: application
version: 1.0.8
maintainers:
  - name: skylenet
    email: rafael@skyle.net
  - name: barnabasbusa
    email: busa.barnabas@gmail.com



================================================
FILE: charts/besu/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Connecting to the holesky test network

```yaml
extraArgs:
  - --network=holesky
  - --max-peers=60
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.
Currently besu doesn't allow you to announce a a different discovery port, which would be a requirement to run multiple replicas within the same chart.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```



================================================
FILE: charts/besu/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- besu container image repository
  repository: hyperledger/besu
  # -- besu container image tag
  tag: latest
  # -- besu container pull policy
  pullPolicy: IfNotPresent

# -- Extra args for the besu container
extraArgs: []
  #- --network=holesky

# -- JWT secret used by client as a secret. Change this value.
jwt: ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a

# -- Template used for the default command
# @default -- See `values.yaml`
defaultCommandTemplate: |
  - sh
  - -ac
  - >
  {{- if .Values.p2pNodePort.enabled }}
    . /env/init-nodeport;
  {{- end }}
    exec besu
    --data-path=/data
    --nat-method=NONE
  {{- if .Values.p2pNodePort.enabled }}
    {{- if not (contains "--p2p-host=" (.Values.extraArgs | join ",")) }}
    --p2p-host=$EXTERNAL_IP
    {{- end }}
    {{- if not (contains "--p2p-port=" (.Values.extraArgs | join ",")) }}
    --p2p-port=$EXTERNAL_PORT
    {{- end }}
  {{- else }}
    {{- if not (contains "--p2p-host=" (.Values.extraArgs | join ",")) }}
    --p2p-host=$(POD_IP)
    {{- end }}
    {{- if not (contains "--p2p-port=" (.Values.extraArgs | join ",")) }}
    --p2p-port={{ include "besu.p2pPort" . }}
    {{- end }}
  {{- end }}
    --rpc-http-enabled
    --rpc-http-host=0.0.0.0
    --rpc-http-port={{ .Values.httpPort }}
    --rpc-http-cors-origins=*
    --rpc-ws-enabled
    --rpc-ws-host=0.0.0.0
    --rpc-ws-port={{ .Values.wsPort }}
    --host-allowlist=*
    --engine-jwt-secret=/data/jwt.hex
    --engine-rpc-port={{ .Values.authPort }}
    --engine-host-allowlist=*
    --metrics-enabled
    --metrics-host=0.0.0.0
    --metrics-port={{ .Values.metricsPort }}
  {{- range .Values.extraArgs }}
    {{ tpl . $ }}
  {{- end }}

# -- Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplate instead.
customCommand: []

# When p2pNodePort is enabled, your P2P port will be exposed via service type NodePort.
# This is useful if you want to expose and announce your node to the Internet.
# Limitation: You can only one have one replica when exposing via NodePort.
#             Check the chart README.md for more details
p2pNodePort:
  # -- Expose P2P port via NodePort
  enabled: false
  # -- NodePort to be used
  port: 31000
  initContainer:
    image:
      # -- Container image to fetch nodeport information
      repository: lachlanevenson/k8s-kubectl
      # -- Container tag
      tag: v1.25.4
      # -- Container pull policy
      pullPolicy: IfNotPresent
  portForwardContainer:
    image:
      # -- Container image for the port forwarder
      repository: alpine/socat
      # -- Container tag
      tag: latest
      # -- Container pull policy
      pullPolicy: IfNotPresent

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http-rpc
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http-rpc
  initialDelaySeconds: 10
  periodSeconds: 10

# -- P2P Port
p2pPort: 30303

# -- HTTP Port
httpPort: 8545

# -- WS Port
wsPort: 8546

# -- Engine Port (Auth Port)
authPort: 8551

# -- Metrics Port
metricsPort: 9545

# -- Node selector for pods
nodeSelector: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 20Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

rbac:
  # -- Specifies whether RBAC resources are to be created
  create: true
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  clusterRules:
     # Required to obtain the nodes external IP
    - apiGroups: [""]
      resources:
      - "nodes"
      verbs:
      - "get"
      - "list"
      - "watch"
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  rules:
    # Required to get information about the services nodePort.
    - apiGroups: [""]
      resources:
      - "services"
      verbs:
      - "get"
      - "list"
      - "watch"

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 300

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []
#- name: JAVA_OPTS
#  value: "-Xmx6000m -Xms6000m"

# -- Additional env variables injected via a created secret
secretEnv: {}
# MY_PASSWORD: supersecret

initChownData:
  # -- Init container to set the correct permissions to access data directories
  enabled: true
  image:
    # -- Container repository
    repository: busybox
    # -- Container tag
    tag: "1.34.0"
    # -- Container pull policy
    pullPolicy: IfNotPresent
  # -- Resource requests and limits
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/besu/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/besu/ci/default-values.yaml
================================================
# Leave empty so that CT tests with default values



================================================
FILE: charts/besu/templates/_cmd.tpl
================================================
{{/*
# Default command
*/}}
{{- define "besu.defaultCommand" -}}
{{- tpl .Values.defaultCommandTemplate . }}
{{- end }}



================================================
FILE: charts/besu/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "besu.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "besu.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "besu.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "besu.labels" -}}
helm.sh/chart: {{ include "besu.chart" . }}
{{ include "besu.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "besu.selectorLabels" -}}
app.kubernetes.io/name: {{ include "besu.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "besu.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "besu.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{/*
Create the name of the cluster role.
It needs to be namespace prefixed to avoid naming conflicts when using the same deployment name across namespaces.
*/}}
{{- define "besu.clusterRoleName" -}}
{{ .Release.Namespace }}-{{ include "besu.fullname" . }}
{{- end }}

{{- define "besu.p2pPort" -}}
{{- if .Values.p2pNodePort.enabled }}
{{- print .Values.p2pNodePort.port }}
{{- else }}
{{- print .Values.p2pPort }}
{{- end }}
{{- end -}}

{{- define "besu.replicas" -}}
{{- if and (.Values.p2pNodePort.enabled) (gt (int .Values.replicas)  1) }}
{{- print 1 }}
{{ else }}
{{- print .Values.replicas }}
{{- end }}
{{- end -}}



================================================
FILE: charts/besu/templates/clusterrole.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "besu.clusterRoleName" . }}
  labels:
    {{- include "besu.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.clusterRules | nindent 0 }}
{{- end }}



================================================
FILE: charts/besu/templates/clusterrolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "besu.clusterRoleName" . }}
  labels:
    {{- include "besu.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "besu.clusterRoleName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "besu.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/besu/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "besu.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "besu.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/besu/templates/NOTES.txt
================================================



================================================
FILE: charts/besu/templates/poddisruptionbudget.yaml
================================================
{{- if .Values.podDisruptionBudget }}
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ include "besu.fullname" . }}
  labels:
    {{- include "besu.labels" . | nindent 4 }}
spec:
{{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
{{- end }}
{{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
{{- end }}
  selector:
    matchLabels:
      {{- include "besu.selectorLabels" . | nindent 6 }}
{{- end }}



================================================
FILE: charts/besu/templates/role.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "besu.serviceAccountName" . }}
  labels:
    {{- include "besu.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.rules | nindent 0 }}
{{- end }}



================================================
FILE: charts/besu/templates/rolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "besu.serviceAccountName" . }}
  labels:
    {{- include "besu.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "besu.serviceAccountName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "besu.serviceAccountName" . }}
{{- end }}



================================================
FILE: charts/besu/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "besu.fullname" . }}-env
  labels:
    {{- include "besu.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "besu.fullname" . }}-jwt
type: Opaque
data:
  jwt.hex: {{ .Values.jwt | b64enc }}


================================================
FILE: charts/besu/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "besu.fullname" . }}-headless
  labels:
    {{- include "besu.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "besu.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "besu.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: {{ .Values.httpPort }}
      targetPort: http-rpc
      protocol: TCP
      name: http-rpc
    - port: {{ .Values.wsPort }}
      targetPort: ws-rpc
      protocol: TCP
      name: ws-rpc
    - port: {{ .Values.authPort }}
      targetPort: auth-rpc
      protocol: TCP
      name: auth-rpc    
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "besu.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/besu/templates/service.p2p.nodeport.yaml
================================================
{{- if .Values.p2pNodePort.enabled -}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "besu.fullname" $ }}-p2p-0
  labels:
    {{- include "besu.labels" $ | nindent 4 }}
    pod: {{ include "besu.fullname" $ }}-0
    type: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p-tcp
      port: {{ include "besu.p2pPort" $ }}
      protocol: TCP
      targetPort: p2p-tcp
      nodePort: {{ include "besu.p2pPort" $ }}
    - name: p2p-udp
      port: {{ include "besu.p2pPort" $ }}
      protocol: UDP
      targetPort: p2p-udp
      nodePort: {{ include "besu.p2pPort" $ }}
  selector:
    {{- include "besu.selectorLabels" $ | nindent 4 }}
    statefulset.kubernetes.io/pod-name: "{{ include "besu.fullname" $ }}-0"
{{- end }}



================================================
FILE: charts/besu/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "besu.fullname" . }}
  labels:
    {{- include "besu.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - port: {{ include "besu.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "besu.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: {{ .Values.httpPort }}
      targetPort: http-rpc
      protocol: TCP
      name: http-rpc
    - port: {{ .Values.wsPort }}
      targetPort: ws-rpc
      protocol: TCP
      name: ws-rpc
    - port: {{ .Values.authPort }}
      targetPort: auth-rpc
      protocol: TCP
      name: auth-rpc   
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "besu.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/besu/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "besu.serviceAccountName" . }}
  labels:
    {{- include "besu.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/besu/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "besu.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "besu.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "besu.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/besu/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "besu.fullname" . }}
  labels:
    {{- include "besu.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ include "besu.replicas" . }}
  selector:
    matchLabels:
      {{- include "besu.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "besu.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "besu.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "besu.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- tpl (toYaml .Values.initContainers | nindent 8) $ }}
      {{- end }}
      {{- if .Values.p2pNodePort.enabled }}
        - name: init-nodeport
          image: "{{ .Values.p2pNodePort.initContainer.image.repository }}:{{ .Values.p2pNodePort.initContainer.image.tag }}"
          imagePullPolicy: {{.Values.p2pNodePort.initContainer.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - sh
            - -c
            - >
              export EXTERNAL_PORT=$(kubectl get services -l "pod in (${POD_NAME}), type in (p2p)" -o jsonpath='{.items[0].spec.ports[0].nodePort}');
              export EXTERNAL_IP=$(kubectl get nodes "${NODE_NAME}" -o jsonpath='{.status.addresses[?(@.type=="ExternalIP")].address}');
              echo "EXTERNAL_PORT=$EXTERNAL_PORT" >  /env/init-nodeport;
              echo "EXTERNAL_IP=$EXTERNAL_IP"     >> /env/init-nodeport;
              cat /env/init-nodeport;
          volumeMounts:
            - name: env-nodeport
              mountPath: /env
      {{- end }}
      {{- if .Values.initChownData.enabled }}
        - name: init-chown-data
          image: "{{ .Values.initChownData.image.repository }}:{{ .Values.initChownData.image.tag }}"
          imagePullPolicy: {{ .Values.initChownData.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }}", "/data"]
          resources:
      {{ toYaml .Values.initChownData.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: "/data"
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
            {{- include "besu.defaultCommand" . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            {{- if .Values.p2pNodePort.enabled }}
            - name: env-nodeport
              mountPath: /env
            {{- end }}
            - name: storage
              mountPath: "/data"
            - name: jwt
              mountPath: "/data/jwt.hex"
              subPath: jwt.hex
              readOnly: true
          ports:
            - name: p2p-tcp
              containerPort: {{ include "besu.p2pPort" . }}
              protocol: TCP
            - name: p2p-udp
              containerPort: {{ include "besu.p2pPort" . }}
              protocol: UDP
            - name: http-rpc
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
            - name: ws-rpc
              containerPort: {{ .Values.wsPort }}
              protocol: TCP
            - name: auth-rpc
              containerPort: {{ .Values.authPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "besu.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ tpl (toYaml .Values.extraContainers | nindent 8) $ }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: jwt
          secret:
            secretName: {{ include "besu.fullname" . }}-jwt
      {{- if .Values.p2pNodePort.enabled }}
        - name: env-nodeport
          emptyDir: {}
      {{- end }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/besu/templates/tests/test-connection.yaml
================================================

apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "besu.fullname" . }}-test-connection"
  labels:
    {{- include "besu.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
        - --location
        - --request
        - POST
        - '{{ include "besu.fullname" . }}:{{ .Values.httpPort }}/'
        - --header
        - 'Content-Type: application/json'
        - --data-raw
        - '{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":67}'
  restartPolicy: Never



================================================
FILE: charts/blob-me-baby/README.md
================================================

# blob-me-baby

![Version: 0.1.2](https://img.shields.io/badge/Version-0.1.2-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Send arbitrary blob data in well-formatted blobs

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the blob-me-baby container |
| customCommand | list | `[]` | Command replacement for the blob-me-baby container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPodPorts | list | `[]` | Extra Pod ports |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `8080` | HTTP Port |
| image.pullPolicy | string | `"IfNotPresent"` | blob-me-baby container pull policy |
| image.repository | string | `"ethpandaops/blob-me-baby"` | blob-me-baby container image repository |
| image.tag | string | `"latest"` | blob-me-baby container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/blob-me-baby/Chart.yaml
================================================
apiVersion: v2
name: blob-me-baby
description: Send arbitrary blob data in well-formatted blobs
type: application
version: 0.1.2
maintainers:
  - name: barnabasbusa
    email: busa.barnabas@gmail.com



================================================
FILE: charts/blob-me-baby/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/blob-me-baby/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- blob-me-baby container image repository
  repository: ethpandaops/blob-me-baby
  # -- blob-me-baby container image tag
  tag: latest
  # -- blob-me-baby container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Custom args for the blob-me-baby container
customArgs: []

# -- Command replacement for the blob-me-baby container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- HTTP Port
httpPort: 8080

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  httpGet:
    path: /encode/0xdeadbeef
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  httpGet:
    path: /encode/0xdeadbeef
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Extra Pod ports
extraPodPorts: []

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []



================================================
FILE: charts/blob-me-baby/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/blob-me-baby/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "blob-me-baby.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "blob-me-baby.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "blob-me-baby.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "blob-me-baby.labels" -}}
helm.sh/chart: {{ include "blob-me-baby.chart" . }}
{{ include "blob-me-baby.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "blob-me-baby.selectorLabels" -}}
app.kubernetes.io/name: {{ include "blob-me-baby.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "blob-me-baby.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "blob-me-baby.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}



================================================
FILE: charts/blob-me-baby/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "blob-me-baby.fullname" . }}
  labels:
    {{- include "blob-me-baby.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "blob-me-baby.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "blob-me-baby.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "blob-me-baby.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if gt (len .Values.customCommand) 0 }}
        command:
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
        ports:
          - name: http
            containerPort: {{ .Values.httpPort }}
            protocol: TCP
          {{- if .Values.extraPodPorts }}
            {{ toYaml .Values.extraPodPorts | nindent 10 }}
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}



================================================
FILE: charts/blob-me-baby/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "blob-me-baby.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "blob-me-baby.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/blob-me-baby/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "blob-me-baby.fullname" . }}
  labels:
    {{- include "blob-me-baby.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.httpPort }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "blob-me-baby.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/blob-me-baby/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "blob-me-baby.serviceAccountName" . }}
  labels:
    {{- include "blob-me-baby.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}



================================================
FILE: charts/blob-me-baby/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "blob-me-baby.fullname" . }}-test-connection"
  labels:
    {{- include "blob-me-baby.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": blob-me-baby
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['{{ include "blob-me-baby.fullname" . }}:{{ .Values.httpPort }}/encode/0xdeadbeef']
  restartPolicy: Never



================================================
FILE: charts/blobscan/README.md
================================================

# blobscan

![Version: 0.1.1](https://img.shields.io/badge/Version-0.1.1-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Blobscan is the first blockchain explorer that helps to navigate and visualize those EIP-4844 blobs

**Homepage:** <https://github.com/blobscan/blobscan>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the blobscan container |
| customCommand | list | `[]` | Command replacement for the blobscan container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[{"name":"MONGODB_URI","value":"mongodb://mongodb:27017"},{"name":"MONGODB_DB","value":"blobscan"}]` | Additional env variables |
| extraPodPorts | list | `[]` | Extra Pod ports |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `3000` | Ports |
| image.pullPolicy | string | `"IfNotPresent"` | blobscan container pull policy |
| image.repository | string | `"ethpandaops/blobscan"` | blobscan container image repository |
| image.tag | string | `"latest"` | blobscan container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/blobscan/Chart.yaml
================================================
apiVersion: v2
name: blobscan
description: Blobscan is the first blockchain explorer that helps to navigate and visualize those EIP-4844 blobs
home: https://github.com/blobscan/blobscan
type: application
version: 0.1.1
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org



================================================
FILE: charts/blobscan/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/blobscan/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- blobscan container image repository
  repository: ethpandaops/blobscan
  # -- blobscan container image tag
  tag: latest
  # -- blobscan container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Ports
httpPort: 3000

# -- Command arguments
args: []

# -- Additional env variables
extraEnv:
  - name: MONGODB_URI
    value: "mongodb://mongodb:27017"
  - name: MONGODB_DB
    value: "blobscan"

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Custom args for the blobscan container
customArgs: []

# -- Command replacement for the blobscan container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Extra Pod ports
extraPodPorts: []

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/blobscan/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/blobscan/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "blobscan.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "blobscan.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "blobscan.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "blobscan.labels" -}}
helm.sh/chart: {{ include "blobscan.chart" . }}
{{ include "blobscan.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "blobscan.selectorLabels" -}}
app.kubernetes.io/name: {{ include "blobscan.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "blobscan.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "blobscan.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "blobscan.httpPort" -}}
{{ .Values.httpPort | default "3000" }}
{{- end }}



================================================
FILE: charts/blobscan/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "blobscan.fullname" . }}
  labels:
    {{- include "blobscan.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "blobscan.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "blobscan.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "blobscan.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
        ports:
          - name: http
            containerPort: {{ include "blobscan.httpPort" . }}
            protocol: TCP
          {{- if .Values.extraPodPorts }}
            {{ toYaml .Values.extraPodPorts | nindent 10 }}
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "blobscan.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}



================================================
FILE: charts/blobscan/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "blobscan.fullname" . -}}
{{- $svcPort := include "blobscan.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "blobscan.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/blobscan/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "blobscan.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "blobscan.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "blobscan.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "blobscan.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "blobscan.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/blobscan/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "blobscan.fullname" . }}-env
  labels:
    {{- include "blobscan.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/blobscan/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "blobscan.fullname" . }}
  labels:
    {{- include "blobscan.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "blobscan.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "blobscan.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/blobscan/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "blobscan.serviceAccountName" . }}
  labels:
    {{- include "blobscan.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/blobscan/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "blobscan.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "blobscan.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "blobscan.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/blobscan-indexer/README.md
================================================

# blobscan-indexer

![Version: 0.1.1](https://img.shields.io/badge/Version-0.1.1-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Blobscan-indexer indexes blobs in MongoDB for use with Blobscan.

**Homepage:** <https://github.com/blobscan/blobscan-indexer>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the blobscan-indexer container |
| customCommand | list | `[]` | Command replacement for the blobscan-indexer container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[{"name":"MONGODB_URI","value":"mongodb://mongodb:27017"},{"name":"MONGODB_DB","value":"blobscan"},{"name":"EXECUTION_NODE_RPC","value":"http://your-execution-node:8545"},{"name":"BEACON_NODE_RPC","value":"http://your-beacon-node:5052"}]` | Additional env variables |
| extraPodPorts | list | `[]` | Extra Pod ports |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | blobscan-indexer container pull policy |
| image.repository | string | `"ethpandaops/blobscan-indexer"` | blobscan-indexer container image repository |
| image.tag | string | `"latest"` | blobscan-indexer container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/blobscan-indexer/Chart.yaml
================================================
apiVersion: v2
name: blobscan-indexer
description: Blobscan-indexer indexes blobs in MongoDB for use with Blobscan.
home: https://github.com/blobscan/blobscan-indexer
type: application
version: 0.1.1
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org



================================================
FILE: charts/blobscan-indexer/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/blobscan-indexer/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- blobscan-indexer container image repository
  repository: ethpandaops/blobscan-indexer
  # -- blobscan-indexer container image tag
  tag: latest
  # -- blobscan-indexer container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

# -- Additional env variables
extraEnv:
  - name: MONGODB_URI
    value: "mongodb://mongodb:27017"
  - name: MONGODB_DB
    value: "blobscan"
  - name: EXECUTION_NODE_RPC
    value: "http://your-execution-node:8545"
  - name: BEACON_NODE_RPC
    value: "http://your-beacon-node:5052"

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Custom args for the blobscan-indexer container
customArgs: []

# -- Command replacement for the blobscan-indexer container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Extra Pod ports
extraPodPorts: []

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/blobscan-indexer/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/blobscan-indexer/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "blobscan-indexer.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "blobscan-indexer.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "blobscan-indexer.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "blobscan-indexer.labels" -}}
helm.sh/chart: {{ include "blobscan-indexer.chart" . }}
{{ include "blobscan-indexer.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "blobscan-indexer.selectorLabels" -}}
app.kubernetes.io/name: {{ include "blobscan-indexer.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "blobscan-indexer.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "blobscan-indexer.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}



================================================
FILE: charts/blobscan-indexer/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "blobscan-indexer.fullname" . }}
  labels:
    {{- include "blobscan-indexer.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "blobscan-indexer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "blobscan-indexer.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "blobscan-indexer.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
        ports:
          {{- if .Values.extraPodPorts }}
            {{ toYaml .Values.extraPodPorts | nindent 10 }}
          {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "blobscan-indexer.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}



================================================
FILE: charts/blobscan-indexer/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "blobscan-indexer.fullname" . -}}
{{- $svcPort := include "blobscan-indexer.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "blobscan-indexer.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/blobscan-indexer/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "blobscan-indexer.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "blobscan-indexer.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "blobscan-indexer.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "blobscan-indexer.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "blobscan-indexer.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/blobscan-indexer/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "blobscan-indexer.fullname" . }}-env
  labels:
    {{- include "blobscan-indexer.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/blobscan-indexer/templates/service.yaml
================================================

{{- if gt (len .Values.extraPorts) 0 }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "blobscan-indexer.fullname" . }}
  labels:
    {{- include "blobscan-indexer.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    {{ toYaml .Values.extraPorts | nindent 4}}
  selector:
    {{- include "blobscan-indexer.selectorLabels" . | nindent 4 }}
{{- end }}


================================================
FILE: charts/blobscan-indexer/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "blobscan-indexer.serviceAccountName" . }}
  labels:
    {{- include "blobscan-indexer.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/blobscan-indexer/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "blobscan-indexer.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "blobscan-indexer.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "blobscan-indexer.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/blockscout/README.md
================================================

# blockscout

![Version: 0.2.3](https://img.shields.io/badge/Version-0.2.3-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

BlockScout provides a comprehensive, easy-to-use interface for users to view, confirm, and inspect transactions on EVM (Ethereum Virtual Machine) blockchains

**Homepage:** <https://docs.blockscout.com/>

## Source Code

* <https://github.com/blockscout/blockscout/>

## Requirements

| Repository | Name | Version |
|------------|------|---------|
| https://charts.bitnami.com/bitnami | postgresql | 12.x.x |
| https://charts.bitnami.com/bitnami | redis | 17.x.x |
| https://ethpandaops.github.io/ethereum-helm-charts | smart-contract-verifier-http | 0.1.2 |

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| config | object | See `values.yaml` | Config file https://docs.blockscout.com/for-developers/information-and-settings/env-variables |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the blockscout container |
| customCommand | list | `[]` | Command replacement for the blockscout container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | blockscout container pull policy |
| image.repository | string | `"blockscout/blockscout"` | blockscout container image repository |
| image.tag | string | `"5.1.5"` | blockscout container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| postgresql.auth.enablePostgresUser | bool | `true` |  |
| postgresql.auth.password | string | `"postgres"` |  |
| postgresql.auth.postgresPassword | string | `"postgres"` |  |
| postgresql.auth.username | string | `"postgres"` |  |
| postgresql.enabled | bool | `true` | If enabled a postgres chart will be deployed as a dependency |
| postgresql.image.registry | string | `"docker.io"` |  |
| postgresql.image.repository | string | `"bitnami/postgresql"` |  |
| postgresql.image.tag | string | `"15.3.0-debian-11-r7"` |  |
| postgresql.primary.extendedConfiguration | string | `"max_connections = 1024\n"` |  |
| postgresql.primary.persistence.enabled | bool | `true` |  |
| postgresql.primary.persistence.size | string | `"8Gi"` |  |
| postgresql.pullPolicy | string | `"IfNotPresent"` |  |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| redis.enabled | bool | `false` |  |
| redis.replica.replicaCount | int | `1` |  |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| smart-contract-verifier-http.enabled | bool | `false` |  |
| terminationGracePeriodSeconds | int | `60` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |

# Examples

## Connecting to an existing PostgreSQL database

```yaml
# Disable the postgres deployment
postgresql:
  enabled: false

config:
  # Some existing internal postgresdb
  DATABASE_URL: postgresql://postgres:postgres@postgresql:5432/explorer?ssl=false
```

## Connecting to an existing Redis database

```yaml
# Disable the redis deployment
redis:
  enabled: false

config:
  ACCOUNT_ENABLED: "true"
  ACCOUNT_REDIS_URL: redis://blockscout-redis:6379/0
```

## Enabling the Smart-contract Verifier
Smart-contract verification service is a stateless http server for verifying smart contracts.
You can read more about it from [blockscout/blockscout-rs](https://github.com/blockscout/blockscout-rs/blob/9e06ddb8ad3c944b0937b99e192d41f33725d129/smart-contract-verifier-http/README.md)

```yaml
verifier:
  enabled: true

config:
  ENABLE_RUST_VERIFICATION_SERVICE: "true" # If set to true, you should also deploy smart-contract-verifier-http
  RUST_VERIFICATION_SERVICE_URL: http://blockscout-smart-contract-verifier-http:8043
```



================================================
FILE: charts/blockscout/Chart.lock
================================================
dependencies:
- name: postgresql
  repository: https://charts.bitnami.com/bitnami
  version: 12.5.6
- name: redis
  repository: https://charts.bitnami.com/bitnami
  version: 17.11.3
- name: smart-contract-verifier-http
  repository: https://ethpandaops.github.io/ethereum-helm-charts
  version: 0.1.2
digest: sha256:76c59ac321a39d44e2dff36f0385a93fd9537c827d94061f569e066ec8769d03
generated: "2023-06-01T15:12:29.07154+02:00"



================================================
FILE: charts/blockscout/Chart.yaml
================================================
apiVersion: v2
name: blockscout
description: >
  BlockScout provides a comprehensive, easy-to-use interface for users to view, confirm,
  and inspect transactions on EVM (Ethereum Virtual Machine) blockchains
home: https://docs.blockscout.com/
icon: https://github.com/blockscout/blockscout/raw/master/apps/block_scout_web/assets/static/apple-touch-icon.png
sources:
  - https://github.com/blockscout/blockscout/
type: application
version: 0.2.3
maintainers:
  - name: skylenet
    email: rafael@skyle.net
dependencies:
  - name: postgresql
    version: "12.x.x"
    repository: "https://charts.bitnami.com/bitnami"
    condition: postgresql.enabled
  - name: redis
    version: "17.x.x"
    repository: "https://charts.bitnami.com/bitnami"
    condition: redis.enabled
  - name: smart-contract-verifier-http
    version: "0.1.2"
    repository: "https://ethpandaops.github.io/ethereum-helm-charts"
    condition: smart-contract-verifier-http.enabled



================================================
FILE: charts/blockscout/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Connecting to an existing PostgreSQL database

```yaml
# Disable the postgres deployment
postgresql:
  enabled: false

config:
  # Some existing internal postgresdb
  DATABASE_URL: postgresql://postgres:postgres@postgresql:5432/explorer?ssl=false
```

## Connecting to an existing Redis database

```yaml
# Disable the redis deployment
redis:
  enabled: false

config:
  ACCOUNT_ENABLED: "true"
  ACCOUNT_REDIS_URL: redis://blockscout-redis:6379/0
```

## Enabling the Smart-contract Verifier
Smart-contract verification service is a stateless http server for verifying smart contracts.
You can read more about it from [blockscout/blockscout-rs](https://github.com/blockscout/blockscout-rs/blob/9e06ddb8ad3c944b0937b99e192d41f33725d129/smart-contract-verifier-http/README.md)

```yaml
verifier:
  enabled: true

config:
  ENABLE_RUST_VERIFICATION_SERVICE: "true" # If set to true, you should also deploy smart-contract-verifier-http
  RUST_VERIFICATION_SERVICE_URL: http://blockscout-smart-contract-verifier-http:8043
```



================================================
FILE: charts/blockscout/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- blockscout container image repository
  repository: blockscout/blockscout
  # -- blockscout container image tag
  tag: "5.1.5"
  # -- blockscout container pull policy
  pullPolicy: IfNotPresent

# -- Number of replicas
replicas: 1

# -- Custom args for the blockscout container
customArgs: []
  #- -config-file=/somewhere-else.yaml
  #- -output-dir=public

# -- Command replacement for the blockscout container
customCommand: [] # Only change this if you need to change the default command

# -- Config file
# @default -- See `values.yaml`
# https://docs.blockscout.com/for-developers/information-and-settings/env-variables
config:
  MIX_ENV: prod
  PORT: '{{ include "blockscout.httpPort" . }}'
  DATABASE_URL: postgresql://postgres:postgres@{{ .Release.Name }}-postgresql:5432/blockscout?ssl=false
  SECRET_KEY_BASE: RMgI4C1HSkxsEjdhtGMfwAHfyT6CKWXOgzCboJflfSm4jeAlic52io05KB6mqzc5
  ECTO_USE_SSL: "false"
  ETHEREUM_JSONRPC_VARIANT: geth
  ETHEREUM_JSONRPC_HTTP_URL: http://geth:8545
  #ETHEREUM_JSONRPC_WS_URL: ws://geth:8546
  #ETHEREUM_JSONRPC_TRACE_URL: http://geth:8545
  NETWORK: Ethereum
  #SUBNETWORK: Testnet

  # Branding related configs
  LOGO: /images/blockscout_logo.svg
  FOOTER_LOGO: /images/blockscout_logo.svg

  # Rate limiting
  #API_RATE_LIMIT_DISABLED=true
  API_RATE_LIMIT_TIME_INTERVAL: 1s
  API_RATE_LIMIT_BY_IP_TIME_INTERVAL: 5m
  API_RATE_LIMIT: "50"
  API_RATE_LIMIT_BY_KEY: "50"
  API_RATE_LIMIT_BY_WHITELISTED_IP: "50"
  API_RATE_LIMIT_WHITELISTED_IPS: ""
  API_RATE_LIMIT_STATIC_API_KEY: ""
  API_RATE_LIMIT_UI_V2_WITH_TOKEN: "5"
  API_RATE_LIMIT_BY_IP: "3000"
  # API_RATE_LIMIT_HAMMER_REDIS_URL: redis://{{ .Release.Name }}-redis:6379/1
  # API_RATE_LIMIT_IS_BLOCKSCOUT_BEHIND_PROXY: false
  API_RATE_LIMIT_UI_V2_TOKEN_TTL_IN_SECONDS: "18000"

  # Smart contract verification related configs
  MICROSERVICE_SC_VERIFIER_ENABLED: '{{ (index .Values "smart-contract-verifier-http").enabled }}'
  MICROSERVICE_SC_VERIFIER_URL: http://{{ .Release.Name }}-smart-contract-verifier-http:8050
  MICROSERVICE_SC_VERIFIER_TYPE: sc_verifier

  # Account related configs: https://docs.blockscout.com/for-developers/configuration-options/my-account-settings
  ACCOUNT_ENABLED: "false"
  #ACCOUNT_REDIS_URL: redis://{{ .Release.Name }}-redis:6379/0
  #ACCOUNT_AUTH0_DOMAIN: login.blockscout.com
  #ACCOUNT_AUTH0_CLIENT_ID: ...
  #ACCOUNT_AUTH0_CLIENT_SECRET: ...
  #ACCOUNT_SENDGRID_API_KEY: ...
  #ACCOUNT_SENDGRID_SENDER: noreply@blockscout.com
  #ACCOUNT_SENDGRID_TEMPLATE: d-...
  #ACCOUNT_PUBLIC_TAGS_AIRTABLE_URL: https://api.airtable.com/v0/.../Public%20Tags
  #ACCOUNT_PUBLIC_TAGS_AIRTABLE_API_KEY: key...
  #ACCOUNT_CLOAK_KEY: ...
  #ACCOUNT_DATABASE_URL: postgresql://user:pass@host:port/db

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 0
  runAsGroup: 0
  runAsNonRoot: false
  runAsUser: 0

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 60

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

# -- Additional env variables injected via a created secret
secretEnv: {}

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []

postgresql:
  # -- If enabled a postgres chart will be deployed as a dependency
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 15.3.0-debian-11-r7
  pullPolicy: IfNotPresent
  auth:
    enablePostgresUser: true
    postgresPassword: postgres
    username: postgres
    password: postgres
  primary:
    extendedConfiguration: |
      max_connections = 1024
    persistence:
      enabled: true
      size: 8Gi

redis:
  enabled: false
  replica:
    replicaCount: 1

smart-contract-verifier-http:
  enabled: false



================================================
FILE: charts/blockscout/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/blockscout/ci/all-dependencies-values.yaml
================================================
smart-contract-verifier-http:
  enabled: true
redis:
  enabled: true



================================================
FILE: charts/blockscout/ci/default-values.yaml
================================================
# Leave empty so that CT tests with default values



================================================
FILE: charts/blockscout/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "blockscout.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "blockscout.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "blockscout.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "blockscout.labels" -}}
helm.sh/chart: {{ include "blockscout.chart" . }}
{{ include "blockscout.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "blockscout.selectorLabels" -}}
app.kubernetes.io/name: {{ include "blockscout.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "blockscout.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "blockscout.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "blockscout.httpPort" -}}
{{- printf "4000" -}}
{{- end -}}



================================================
FILE: charts/blockscout/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "blockscout.fullname" . }}-env
  labels:
    {{- include "blockscout.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.config }}
  {{ $key | quote }}: {{ tpl $value $ | quote }}
{{- end }}



================================================
FILE: charts/blockscout/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "blockscout.fullname" . -}}
{{- $svcPort := include "blockscout.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "blockscout.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/blockscout/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "blockscout.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "blockscout.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "blockscout.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "blockscout.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "blockscout.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/blockscout/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "blockscout.fullname" . }}-env
  labels:
    {{- include "blockscout.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/blockscout/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "blockscout.fullname" . }}-headless
  labels:
    {{- include "blockscout.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "blockscout.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "blockscout.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/blockscout/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "blockscout.fullname" . }}
  labels:
    {{- include "blockscout.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "blockscout.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "blockscout.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/blockscout/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "blockscout.serviceAccountName" . }}
  labels:
    {{- include "blockscout.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/blockscout/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "blockscout.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "blockscout.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: http
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "blockscout.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/blockscout/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "blockscout.fullname" . }}
  labels:
    {{- include "blockscout.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "blockscout.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "blockscout.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "blockscout.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "blockscout.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if gt (len .Values.customCommand) 0 }}
          command:
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
          command:
            - /bin/sh
            - -ace
            - >
              bin/blockscout eval "Elixir.Explorer.ReleaseTasks.create_and_migrate()";
              exec bin/blockscout start;
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ include "blockscout.httpPort" . }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
          - configMapRef:
              name: {{ include "blockscout.fullname" . }}-env
          env:
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "blockscout.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}



================================================
FILE: charts/blockscout/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "blockscout.fullname" . }}-test-connection"
  labels:
    {{- include "blockscout.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - --location
       - --request
       - GET
       - '{{ include "blockscout.fullname" . }}:{{ include "blockscout.httpPort" . }}/'
  restartPolicy: Never



================================================
FILE: charts/blutgang/README.md
================================================

# blutgang

![Version: 0.0.12](https://img.shields.io/badge/Version-0.0.12-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Blutgang is a blazing fast, caching, minimalistic load balancer designed with Ethereum's JSON-RPC in mind. Historical RPC queries are cached in a local database, bypassing the need for slow, repeating calls to your node.

**Homepage:** <https://github.com/rainshowerLabs/blutgang>

## Source Code

* <https://github.com/rainshowerLabs/blutgang>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| adminNamespace | object | See `values.yaml` | Admin Namespace |
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| blutgangNamespace | object | See `values.yaml` | Bluethang Namespace |
| config | string | See `values.yaml` | Config file |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the blutgang container |
| customCommand | list | `[]` | Command replacement for the blutgang container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[{"name":"RUST_BACKTRACE","value":"1"}]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | See `values.yaml` | HTTP Port |
| image.pullPolicy | string | `"IfNotPresent"` | blutgang container pull policy |
| image.repository | string | `"makemake1337/blutgang"` | blutgang container image repository |
| image.tag | string | `"latest"` | blutgang container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"1Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| rpcList | list | `[]` | RPC list for the blutgang container  CSV list of rpcs [default: ] |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |

# Examples
## TODO



================================================
FILE: charts/blutgang/Chart.yaml
================================================
apiVersion: v2
name: blutgang
description: >
  Blutgang is a blazing fast, caching, minimalistic load balancer designed with Ethereum's JSON-RPC in mind. Historical RPC queries are cached in a local database, bypassing the need for slow, repeating calls to your node.
home: https://github.com/rainshowerLabs/blutgang
icon: https://github.com/rainshowerLabs/blutgang/assets/55022497/ec668c7a-5f56-4b26-8386-f112c2f176ce
sources:
  - https://github.com/rainshowerLabs/blutgang
type: application
version: 0.0.12
maintainers:
  - name: barnabasbusa
    email: busa.barnabas@gmail.com



================================================
FILE: charts/blutgang/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples
## TODO



================================================
FILE: charts/blutgang/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- blutgang container image repository
  repository: makemake1337/blutgang
  # -- blutgang container image tag
  tag: latest
  # -- blutgang container pull policy
  pullPolicy: IfNotPresent

# -- Custom args for the blutgang container
customArgs: []
  #- -config-file=/somewhere-else.yaml
  #- -output-dir=public

# -- Command replacement for the blutgang container
customCommand: [] # Only change this if you need to change the default command

# -- RPC list for the blutgang container
#  CSV list of rpcs [default: ]
rpcList: []
  # - name: holesky-geth-teku
  #   url: http://holesky-geth-teku:8545
  #   ws_url: ws://holesky-geth-teku:8545 # Optional
  #   max_consecutive: 150 # Optional
  #   max_per_second: 200 # Optional

# -- Config file
# @default -- See `values.yaml`
config: |
  # To use the config file, use the -c/--config option pointing to the path of a config file

  # Config for blutgang goes here
  [blutgang]
  # Clear the cache DB on startup
  do_clear = {{ .Values.blutgangNamespace.do_clear | default false }}
  # Where to bind blutgang to
  address = "0.0.0.0:{{ .Values.httpPort }}"
  # Moving average length for the latency
  ma_length = {{ .Values.blutgangNamespace.ma_length | default 100 }}
  # Sort RPCs by latency on startup. Recommended to leave on.
  sort_on_startup = {{ .Values.blutgangNamespace.sort_on_startup | default true }}
  # Enable health checking
  health_check = {{ .Values.blutgangNamespace.health_check | default true }}
  # Enable content type header checking. Set this to `true` if you want
  # Blutgang to be JSON-RPC compliant.
  header_check = {{ .Values.blutgangNamespace.header_check | default true}}
  # Acceptable time to wait for a response in ms
  ttl = {{ .Values.blutgangNamespace.ttl | default 300 }}
  # How many times to retry a request before giving up
  max_retries = {{ .Values.blutgangNamespace.max_retries | default 32 }}
  # Block time in ms, used as a sanity check when not receiving subscriptions
  expected_block_time = {{ .Values.blutgangNamespace.expected_block_time | default 13000 }}
  # Time between health checks in ms
  health_check_ttl = {{ .Values.blutgangNamespace.health_check_ttl | default 2000 }}
  # Suppress the health check running info messages
  supress_rpc_check = {{ .Values.blutgangNamespace.supress_rpc_check | default false }}

  # Note: the admin namespace contains volatile functions and
  # should not be exposed publicly.
  [admin]
  # Enable the admin namespace
  enabled = {{ .Values.adminNamespace.enabled | default true }}
  # Address for the admin RPC
  address = "0.0.0.0:{{ .Values.adminNamespace.adminPort | default 5715 }}"
  # Only allow read-only methods
  # Recommended `true` unless you 100% need write methods
  readonly = {{ .Values.adminNamespace.readOnly | default true }}
  # Enable the use of JWT for auth
  # Should be on if exposing to the internet
  jwt = {{ .Values.adminNamespace.jwt_enabled | default false }}
  # jwt token
  key = {{ .Values.adminNamespace.jwt_key | quote | default "" }}

  # Sled config
  # Sled is the database we use for our cache, for more info check their docs
  [sled]
  # Path to db
  db_path = "/data/blutgang-cache"
  # sled mode. Can be HighThroughput/LowSpace
  mode = "HighThroughput"
  # Cache size in bytes.
  cache_capacity = 1000000000
  # Use zstd compression. Reduces size 60-70%,
  # and increases CPU and latency by around 10% for db writes and 2% for reads.
  # If storage constrained, it's fine to have it be on.
  compression = false
  # Print DB profile when dropped. Doesn't do anything for now.
  print_profile = false
  # Frequency of flushes in ms
  flush_every_ms = 240

  # Add separate RPCs as TOML tables
  # DO NOT name an rpc `blutgang`, `admin`, or `sled`
  {{- range .Values.rpcList }}
  [{{ .name }}]
  url = {{ .url | quote }}
  {{- if .ws_url }}
  ws_url = {{ .ws_url | quote }}
  {{- end }}
  # The maximum amount of time we can use this rpc in a row.
  max_consecutive = {{ .max_consecutive | default 150 }}
  # Max amount of queries per second.
  max_per_second = {{ .max_per_second | default 200 }}
  {{- end }}

# -- Bluethang Namespace
# @default -- See `values.yaml`
blutgangNamespace:
  do_clear: false
  ma_length: 100
  sort_on_startup: true
  health_check: true
  header_check: true
  ttl: 300
  max_retries: 32
  expected_block_time: 13000
  health_check_ttl: 2000
  supress_rpc_check: false

# -- Admin Namespace
# @default -- See `values.yaml`
adminNamespace:
  enabled: true
  adminPort: 5715
  jwt_enabled: false
  jwt_key: ""
  readOnly: true

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- HTTP Port
# @default -- See `values.yaml`
httpPort: 3000


# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  httpGet:
    path: /health
    port: admin
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  httpGet:
    path: /ready
    port: admin
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv:
  - name: RUST_BACKTRACE
    value: "1"

# -- Additional env variables injected via a created secret
secretEnv: {}

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 1Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something



================================================
FILE: charts/blutgang/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/blutgang/ci/default-values.yaml
================================================
config: |
  # To use the config file, use the -c/--config option pointing to the path of a config file

  # Config for blutgang goes here
  [blutgang]
  # Clear the cache DB on startup
  do_clear = false
  # Where to bind blutgang to
  address = "0.0.0.0:3000"
  # Moving average length for the latency
  ma_length = 100
  # Sort RPCs by latency on startup. Recommended to leave on.
  sort_on_startup = true
  # Enable health checking
  health_check = true
  # Enable content type header checking. Set this to `true` if you want
  # Blutgang to be JSON-RPC compliant.
  header_check = true
  # Acceptable time to wait for a response in ms
  ttl = 300
  # How many times to retry a request before giving up
  max_retries = 32
  # Block time in ms, used as a sanity check when not receiving subscriptions
  expected_block_time = 13000
  # Time between health checks in ms
  health_check_ttl = 2000
  # Suppress the health check running info messages
  supress_rpc_check = false

  # Note: the admin namespace contains volatile functions and
  # should not be exposed publicly.
  [admin]
  # Enable the admin namespace
  enabled = true
  # Address for the admin RPC
  address = "0.0.0.0:5715"
  # Only allow read-only methods
  # Recommended `true` unless you 100% need write methods
  readonly = true
  # Enable the use of JWT for auth
  # Should be on if exposing to the internet
  jwt = false
  # jwt token
  key = ""

  # Sled config
  # Sled is the database we use for our cache, for more info check their docs
  [sled]
  # Path to db
  db_path = "/data/blutgang-cache"
  # sled mode. Can be HighThroughput/LowSpace
  mode = "HighThroughput"
  # Cache size in bytes.
  cache_capacity = 1000000000
  # Use zstd compression. Reduces size 60-70%,
  # and increases CPU and latency by around 10% for db writes and 2% for reads.
  # If storage constrained, it's fine to have it be on.
  compression = false
  # Print DB profile when dropped. Doesn't do anything for now.
  print_profile = false
  # Frequency of flushes in ms
  flush_every_ms = 24000

  [merkle]
  url = "https://eth.merkle.io"
  ws_url = "wss://eth.merkle.io"
  # The maximum amount of time we can use this rpc in a row.
  max_consecutive = 150
  # Max amount of queries per second.
  max_per_second = 200



================================================
FILE: charts/blutgang/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "blutgang.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "blutgang.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "blutgang.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "blutgang.labels" -}}
helm.sh/chart: {{ include "blutgang.chart" . }}
{{ include "blutgang.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "blutgang.selectorLabels" -}}
app.kubernetes.io/name: {{ include "blutgang.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "blutgang.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "blutgang.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}



================================================
FILE: charts/blutgang/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "blutgang.fullname" . }}
  labels:
    {{- include "blutgang.labels" . | nindent 4 }}
data:
  config.toml: |
    {{- tpl .Values.config . | nindent 4 }}


================================================
FILE: charts/blutgang/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "blutgang.fullname" . }}
  labels:
    {{- include "blutgang.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "blutgang.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "blutgang.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "blutgang.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if gt (len .Values.customCommand) 0 }}
          command:
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: config
              mountPath: "/app/config.toml"
              subPath: config.toml
              readOnly: true
            - name: storage
              mountPath: "/data"
          ports:
            - name: http
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
            {{- if .Values.adminNamespace.enabled }}
            - name: admin
              containerPort: {{ .Values.adminNamespace.adminPort }}
              protocol: TCP
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "blutgang.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "blutgang.fullname" . }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir:
            medium: Memory
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/blutgang/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "blutgang.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "blutgang.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/blutgang/templates/poddisruptionbudget.yaml
================================================
{{- if .Values.podDisruptionBudget }}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "blutgang.fullname" . }}
  labels:
    {{- include "blutgang.labels" . | nindent 4 }}
spec:
{{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
{{- end }}
{{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
{{- end }}
  selector:
    matchLabels:
      {{- include "blutgang.selectorLabels" . | nindent 6 }}
{{- end }}



================================================
FILE: charts/blutgang/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "blutgang.fullname" . }}-env
  labels:
    {{- include "blutgang.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/blutgang/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "blutgang.fullname" . }}-headless
  labels:
    {{- include "blutgang.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ .Values.httpPort }}
      targetPort: http
      protocol: TCP
      name: http
    {{- if .Values.adminNamespace.enabled }}
    - port: {{ .Values.adminNamespace.adminPort }}
      targetPort: admin
      protocol: TCP
      name: admin
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "blutgang.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/blutgang/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "blutgang.fullname" . }}
  labels:
    {{- include "blutgang.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.httpPort }}
      targetPort: http
      protocol: TCP
      name: http
    {{- if eq .Values.service.type "NodePort" }}
      nodePort: {{ .Values.service.nodePort }}
    {{- end }}
    {{- if .Values.adminNamespace.enabled }}
    - port: {{ .Values.adminNamespace.adminPort }}
      targetPort: admin
      protocol: TCP
      name: admin
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "blutgang.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/blutgang/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "blutgang.serviceAccountName" . }}
  labels:
    {{- include "blutgang.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/blutgang/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "blutgang.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "blutgang.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "blutgang.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/blutgang/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "blutgang.fullname" . }}-test-connection"
  labels:
    {{- include "blutgang.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - --location
       - --request
       - GET
       - '{{ include "blutgang.fullname" . }}:{{ .Values.httpPort }}/'
  restartPolicy: Never



================================================
FILE: charts/checkpointz/README.md
================================================

# checkpointz

![Version: 0.1.3](https://img.shields.io/badge/Version-0.1.3-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

A beacon chain Checkpoint Sync provider

**Homepage:** <https://github.com/samcm/checkpointz>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| config.beacon.upstreams[0].address | string | `"http://192.168.0.100:5052"` |  |
| config.beacon.upstreams[0].dataProvider | bool | `true` |  |
| config.beacon.upstreams[0].name | string | `"upstream1"` |  |
| config.checkpointz.caches.blocks.max_items | int | `100` |  |
| config.checkpointz.caches.states.max_items | int | `5` |  |
| config.checkpointz.historical_epoch_count | int | `20` |  |
| config.global.listenAddr | string | `":5555"` |  |
| config.global.logging | string | `"info"` |  |
| config.global.metricsAddr | string | `":9090"` |  |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the checkpointz container |
| customCommand | list | `[]` | Command replacement for the checkpointz container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPodPorts | list | `[]` | Extra Pod ports |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | checkpointz container pull policy |
| image.repository | string | `"samcm/checkpointz"` | checkpointz container image repository |
| image.tag | string | `"latest"` | checkpointz container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/checkpointz/Chart.yaml
================================================
apiVersion: v2
name: checkpointz
description: A beacon chain Checkpoint Sync provider
home: https://github.com/samcm/checkpointz
type: application
version: 0.1.3
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org



================================================
FILE: charts/checkpointz/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/checkpointz/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- checkpointz container image repository
  repository: samcm/checkpointz
  # -- checkpointz container image tag
  tag: latest
  # -- checkpointz container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

config:
  global:
    listenAddr: ":5555"
    logging: "info" # panic,fatal,warm,info,debug,trace
    metricsAddr: ":9090"

  checkpointz:
    caches:
      blocks:
        max_items: 100
      states:
        max_items: 5
    historical_epoch_count: 20

  beacon:
    upstreams:
    - name: upstream1
      address: http://192.168.0.100:5052 # Replace me with your beacon node address
      dataProvider: true

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Custom args for the checkpointz container
customArgs: []

# -- Command replacement for the checkpointz container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Extra Pod ports
extraPodPorts: []

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/checkpointz/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/checkpointz/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "checkpointz.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "checkpointz.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "checkpointz.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "checkpointz.labels" -}}
helm.sh/chart: {{ include "checkpointz.chart" . }}
{{ include "checkpointz.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "checkpointz.selectorLabels" -}}
app.kubernetes.io/name: {{ include "checkpointz.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "checkpointz.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "checkpointz.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "checkpointz.httpPort" -}}
{{ (split ":" .Values.config.global.listenAddr)._1 | default ":5555" }}
{{- end }}

{{- define "checkpointz.metricsPort" -}}
{{ (split ":" .Values.config.global.metricsAddr)._1 | default ":9090" }}
{{- end -}}



================================================
FILE: charts/checkpointz/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "checkpointz.fullname" . }}
  labels:
    {{- include "checkpointz.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{ toYaml .Values.config | nindent 4 }}



================================================
FILE: charts/checkpointz/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "checkpointz.fullname" . }}
  labels:
    {{- include "checkpointz.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "checkpointz.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "checkpointz.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "checkpointz.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/checkpointz"
          - --config=/config.yaml
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
        ports:
          - name: http
            containerPort: {{ include "checkpointz.httpPort" . }}
            protocol: TCP
          - name: metrics
            containerPort: {{ include "checkpointz.metricsPort" . }}
            protocol: TCP
          {{- if .Values.extraPodPorts }}
            {{ toYaml .Values.extraPodPorts | nindent 10 }}
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "checkpointz.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "checkpointz.fullname" . }}



================================================
FILE: charts/checkpointz/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "checkpointz.fullname" . -}}
{{- $svcPort := include "checkpointz.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "checkpointz.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/checkpointz/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "checkpointz.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "checkpointz.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "checkpointz.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "checkpointz.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "checkpointz.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/checkpointz/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "checkpointz.fullname" . }}-env
  labels:
    {{- include "checkpointz.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/checkpointz/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "checkpointz.fullname" . }}
  labels:
    {{- include "checkpointz.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "checkpointz.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ include "checkpointz.metricsPort" . }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "checkpointz.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/checkpointz/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "checkpointz.serviceAccountName" . }}
  labels:
    {{- include "checkpointz.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/checkpointz/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "checkpointz.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "checkpointz.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "checkpointz.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/consensus-monitor/README.md
================================================

# consensus-monitor

![Version: 0.1.3](https://img.shields.io/badge/Version-0.1.3-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Web UI to monitor the ethereum consensus nodes via their beaconchain APIs.

**Homepage:** <https://github.com/ralexstokes/ethereum_consensus_monitor/>

## Source Code

* <https://github.com/ralexstokes/ethereum_consensus_monitor/>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| config | string | See `values.yaml` | Config file |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the consensus-monitor container |
| customCommand | list | `[]` | Command replacement for the consensus-monitor container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | consensus-monitor container pull policy |
| image.repository | string | `"ralexstokes/ethereum_consensus_monitor"` | consensus-monitor container image repository |
| image.tag | string | `"latest"` | consensus-monitor container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |

# Examples

## Setting the configuration file

```yaml
config: |
  [network]
  name = "pithos"
  etherscan_api_key = "some-etherscan-api-key"

  [consensus_chain]
  seconds_per_slot = 12
  slots_per_epoch = 32
  genesis_time = 1634213100

  [weak_subjectivity]
  provider_endpoint = "http://eth2-ws-provider_eth2_ws_server_1:80"

  [monitor]
  output_dir = "public"
  port = 8080

  [[monitor.endpoints]]
  consensus = "http://beacon-node:4000"
  execution = "Geth"

  [[monitor.endpoints]]
  consensus = "http://beacon-node2:4000"
  execution = "Nethermind"

```



================================================
FILE: charts/consensus-monitor/Chart.yaml
================================================
apiVersion: v2
name: consensus-monitor
description: >
  Web UI to monitor the ethereum consensus nodes via their beaconchain APIs.
home: https://github.com/ralexstokes/ethereum_consensus_monitor/
icon: https://ethereum.org/static/c48a5f760c34dfadcf05a208dab137cc/31987/eth-diamond-rainbow.png
sources:
  - https://github.com/ralexstokes/ethereum_consensus_monitor/
type: application
version: 0.1.3
maintainers:
  - name: skylenet
    email: rafael@skyle.net



================================================
FILE: charts/consensus-monitor/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Setting the configuration file

```yaml
config: |
  [network]
  name = "pithos"
  etherscan_api_key = "some-etherscan-api-key"

  [consensus_chain]
  seconds_per_slot = 12
  slots_per_epoch = 32
  genesis_time = 1634213100

  [weak_subjectivity]
  provider_endpoint = "http://eth2-ws-provider_eth2_ws_server_1:80"

  [monitor]
  output_dir = "public"
  port = 8080

  [[monitor.endpoints]]
  consensus = "http://beacon-node:4000"
  execution = "Geth"

  [[monitor.endpoints]]
  consensus = "http://beacon-node2:4000"
  execution = "Nethermind"

```



================================================
FILE: charts/consensus-monitor/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- consensus-monitor container image repository
  repository: ralexstokes/ethereum_consensus_monitor
  # -- consensus-monitor container image tag
  tag: latest
  # -- consensus-monitor container pull policy
  pullPolicy: IfNotPresent

# -- Custom args for the consensus-monitor container
customArgs: []
  #- -config-file=/somewhere-else.yaml
  #- -output-dir=public

# -- Command replacement for the consensus-monitor container
customCommand: [] # Only change this if you need to change the default command

# -- Config file
# @default -- See `values.yaml`
config: |
  [network]
  name = "pithos"
  etherscan_api_key = "some-etherscan-api-key"

  [consensus_chain]
  seconds_per_slot = 12
  slots_per_epoch = 32
  genesis_time = 1634213100

  [weak_subjectivity]
  provider_endpoint = "http://eth2-ws-provider_eth2_ws_server_1:80"

  [monitor]
  output_dir = "public"
  port = 8080

  [[monitor.endpoints]]
  consensus = "http://$BEACON_HTTP_API:$PORT"
  execution = "Geth"

  [[monitor.endpoints]]
  consensus = "http://$ANOTHER_BEACON_HTTP_API:$PORT"
  execution = "Nethermind"

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

# -- Additional env variables injected via a created secret
secretEnv: {}



================================================
FILE: charts/consensus-monitor/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/consensus-monitor/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "consensus-monitor.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "consensus-monitor.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "consensus-monitor.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "consensus-monitor.labels" -}}
helm.sh/chart: {{ include "consensus-monitor.chart" . }}
{{ include "consensus-monitor.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "consensus-monitor.selectorLabels" -}}
app.kubernetes.io/name: {{ include "consensus-monitor.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "consensus-monitor.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "consensus-monitor.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "consensus-monitor.httpPort" -}}
{{- printf "8080" -}}
{{- end -}}



================================================
FILE: charts/consensus-monitor/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "consensus-monitor.fullname" . }}
  labels:
    {{- include "consensus-monitor.labels" . | nindent 4 }}
data:
  config.toml: |
    {{- .Values.config | nindent 4}}



================================================
FILE: charts/consensus-monitor/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "consensus-monitor.fullname" . -}}
{{- $svcPort := include "consensus-monitor.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "consensus-monitor.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/consensus-monitor/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "consensus-monitor.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "consensus-monitor.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "consensus-monitor.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "consensus-monitor.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "consensus-monitor.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/consensus-monitor/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "consensus-monitor.fullname" . }}-env
  labels:
    {{- include "consensus-monitor.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/consensus-monitor/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "consensus-monitor.fullname" . }}-headless
  labels:
    {{- include "consensus-monitor.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "consensus-monitor.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "consensus-monitor.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/consensus-monitor/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "consensus-monitor.fullname" . }}
  labels:
    {{- include "consensus-monitor.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "consensus-monitor.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "consensus-monitor.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/consensus-monitor/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "consensus-monitor.serviceAccountName" . }}
  labels:
    {{- include "consensus-monitor.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/consensus-monitor/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "consensus-monitor.fullname" . }}
  labels:
    {{- include "consensus-monitor.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "consensus-monitor.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "consensus-monitor.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "consensus-monitor.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "consensus-monitor.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if gt (len .Values.customCommand) 0 }}
          command:
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: config
              mountPath: "/config.toml"
              subPath: config.toml
              readOnly: true
          ports:
            - name: http
              containerPort: {{ include "consensus-monitor.httpPort" . }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "consensus-monitor.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "consensus-monitor.fullname" . }}



================================================
FILE: charts/consensus-monitor/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "consensus-monitor.fullname" . }}-test-connection"
  labels:
    {{- include "consensus-monitor.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - --location
       - --request
       - GET
       - '{{ include "consensus-monitor.fullname" . }}:{{ include "consensus-monitor.httpPort" . }}/'
  restartPolicy: Never



================================================
FILE: charts/contributoor/README.md
================================================

# contributoor

![Version: 0.0.2](https://img.shields.io/badge/Version-0.0.2-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

A lightweight sidecar that runs alongside an Ethereum consensus client and collects data.

**Homepage:** <https://github.com/ethpandaops/contributoor>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| beaconNode | object | `{"address":"http://localhost:5052"}` | Beacon node configuration |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| credentials | object | `{"password":"FILL_ME","username":"FILL_ME"}` | Credentials configuration |
| customArgs | list | `[]` | Custom args for the contributoor container |
| customCommand | list | `[]` | Command replacement for the contributoor container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPodPorts | list | `[]` | Extra Pod ports |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| healthCheck.enabled | bool | `true` |  |
| healthCheck.port | int | `9191` |  |
| image.pullPolicy | string | `"IfNotPresent"` | contributoor container pull policy |
| image.repository | string | `"ethpandaops/contributoor"` | contributoor container image repository |
| image.tag | string | `"latest"` | contributoor container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| initContainers | list | `[]` | Additional init containers |
| lifecycle | object | See `values.yaml` | Lifecycle hooks |
| livenessProbe | object | `{"httpGet":{"path":"/healthz","port":"health"},"initialDelaySeconds":60,"periodSeconds":120}` | Liveness probe |
| logLevel | string | `"info"` | Log level |
| metrics.enabled | bool | `true` |  |
| metrics.port | int | `9090` |  |
| nameOverride | string | `""` | Overrides the chart's name |
| network | string | `"mainnet"` | Network name (mainnet, holesky, sepolia) |
| nodeSelector | object | `{}` | Node selector for pods |
| outputServer | object | `{"address":"xatu.primary.production.platform.ethpandaops.io:443","tls":true}` | Output server configuration to send the data to |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | `{"httpGet":{"path":"/healthz","port":"health"},"initialDelaySeconds":10,"periodSeconds":10}` | Readiness probe |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `90` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/contributoor/Chart.yaml
================================================
apiVersion: v2
name: contributoor
description: A lightweight sidecar that runs alongside an Ethereum consensus client and collects data.
home: https://github.com/ethpandaops/contributoor
type: application
version: 0.0.2
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org
  - name: savid
    email: andrew.davis@ethereum.org
  - name: matty
    email: matt.evans@ethereum.org



================================================
FILE: charts/contributoor/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/contributoor/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- contributoor container image repository
  repository: ethpandaops/contributoor
  # -- contributoor container image tag
  tag: latest
  # -- contributoor container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

# -- Beacon node configuration
beaconNode:
  address: http://localhost:5052

# -- Log level
logLevel: info # debug, info, warn, error

# -- Network name (mainnet, holesky, sepolia)
network: mainnet

# -- Output server configuration to send the data to
outputServer:
  address: xatu.primary.production.platform.ethpandaops.io:443
  tls: true

# -- Credentials configuration
credentials:
  username: "FILL_ME"
  password: "FILL_ME"
  # Use existing secret
  # existingSecret: ""
  # username: username
  # password: password

# -- Custom args for the contributoor container
customArgs: []

# -- Command replacement for the contributoor container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

metrics:
  enabled: true
  port: 9090
healthCheck:
  enabled: true
  port: 9191

# -- Liveness probe
livenessProbe:
  httpGet:
    path: /healthz
    port: health
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
readinessProbe:
  httpGet:
    path: /healthz
    port: health
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Extra Pod ports
extraPodPorts: []

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Lifecycle hooks
# @default -- See `values.yaml`
lifecycle:
  preStop:
    exec:
      command:
      - /bin/sleep
      - "30"

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 90

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/contributoor/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/contributoor/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "contributoor.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "contributoor.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "contributoor.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "contributoor.labels" -}}
helm.sh/chart: {{ include "contributoor.chart" . }}
{{ include "contributoor.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "contributoor.selectorLabels" -}}
app.kubernetes.io/name: {{ include "contributoor.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "contributoor.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "contributoor.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}



================================================
FILE: charts/contributoor/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "contributoor.fullname" . }}
  labels:
    {{- include "contributoor.labels" . | nindent 4 }}
data:
  config.yaml: |
    beaconNodeAddress: {{ .Values.beaconNode.address }}
    {{- if .Values.metrics.enabled }}
    metricsAddress: ":{{ .Values.metrics.port }}"
    {{- end }}
    {{- if .Values.healthCheck.enabled }}
    healthCheckAddress: ":{{ .Values.healthCheck.port }}"
    {{- end }}
    logLevel: {{ .Values.logLevel }}
    networkName: {{ $network := .Values.network | default "mainnet" }}{{ printf "NETWORK_NAME_%s" ($network | upper) }}
    outputServer:
      address: {{ .Values.outputServer.address | default "xatu.primary.production.platform.ethpandaops.io:443" }}
      tls: {{ .Values.outputServer.tls | default "true" }}
    contributoorDirectory: "/config/.contributoor"
    runMethod: RUN_METHOD_DOCKER



================================================
FILE: charts/contributoor/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "contributoor.fullname" . }}
  labels:
    {{- include "contributoor.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "contributoor.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "contributoor.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "contributoor.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          []
        {{- end }}
        args:
        {{- if gt (len .Values.customArgs) 0 }}
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- else }}
           - --config=/config.yaml
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 10}}
          {{- end }}
        ports:
          {{- if .Values.healthCheck.enabled }}
          - name: health
            containerPort: {{ .Values.healthCheck.port }}
            protocol: TCP
          {{- end }}
          {{- if .Values.metrics.enabled }}
          - name: metrics
            containerPort: {{ .Values.metrics.port }}
            protocol: TCP
          {{- end }}
        {{- if .Values.livenessProbe }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 10 }}
        {{- end }}
        {{- if .Values.readinessProbe }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 10 }}
        {{- end }}
        lifecycle:
          {{- toYaml .Values.lifecycle | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
          - name: CONTRIBUTOOR_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.credentials.existingSecret | default (printf "%s-credentials" (include "contributoor.fullname" .)) }}
                key: {{ .Values.credentials.usernameKey | default "username" }}
          - name: CONTRIBUTOOR_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.credentials.existingSecret | default (printf "%s-credentials" (include "contributoor.fullname" .)) }}
                key: {{ .Values.credentials.passwordKey | default "password" }}
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "contributoor.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "contributoor.fullname" . }}



================================================
FILE: charts/contributoor/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "contributoor.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "contributoor.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "contributoor.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "contributoor.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "contributoor.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/contributoor/templates/pdb.yaml
================================================
{{- if or .Values.podDisruptionBudget.minAvailable .Values.podDisruptionBudget.maxUnavailable -}}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "contributoor.fullname" . }}
  labels:
    {{- include "contributoor.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "contributoor.selectorLabels" . | nindent 6 }}
  {{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
  {{- end  }}
  {{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
  {{- end  }}
{{- end -}}


================================================
FILE: charts/contributoor/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "contributoor.fullname" . }}-env
  labels:
    {{- include "contributoor.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}
---
{{- if not .Values.credentials.existingSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "contributoor.fullname" . }}-credentials
  labels:
    {{- include "contributoor.labels" . | nindent 4 }}
type: Opaque
data:
  {{- if .Values.credentials.username }}
  username: {{ .Values.credentials.username | b64enc | quote }}
  {{- end }}
  {{- if .Values.credentials.password }}
  password: {{ .Values.credentials.password | b64enc | quote }}
  {{- end }}
{{- end }}



================================================
FILE: charts/contributoor/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "contributoor.fullname" . }}
  labels:
    {{- include "contributoor.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    {{- if .Values.healthCheck.enabled }}
    - port: {{ .Values.healthCheck.port }}
      targetPort: health
      protocol: TCP
      name: health
    {{- end }}
    {{- if .Values.metrics.enabled }}
    - port: {{ .Values.metrics.port }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "contributoor.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/contributoor/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "contributoor.serviceAccountName" . }}
  labels:
    {{- include "contributoor.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/contributoor/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "contributoor.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "contributoor.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "contributoor.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/dora/README.md
================================================

# dora

![Version: 0.0.8](https://img.shields.io/badge/Version-0.0.8-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

A Beaconchain explorer is a tool that allows users to view and interact with the data on the Ethereum Beacon Chain. It is similar to a blockchain explorer, which allows users to view data on a blockchain such as the current state of transactions and blocks - but focussed on exploring the beaconchain.

**Homepage:** <https://github.com/pk910/dora>

## Requirements

| Repository | Name | Version |
|------------|------|---------|
| https://charts.bitnami.com/bitnami | postgresql | 12.x.x |

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| callRateBurst | int | `10` | Page call burst limit per user |
| callRateLimit | int | `2` | Page call limit per second per user |
| config | string | See `values.yaml` | Config file |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customCommand | list | `[]` | Command replacement for the dora container |
| endpoints | list | `[{"archive":false,"headers":{"X-Test":"test","Y-Test":"test2"},"name":"default-endpoint","priority":1,"url":"http://beacon-node:5052"}]` | An array of endpoints to use for the explorer -- url is the only required field |
| ethExplorerLink | string | `""` | Link to the el block explorer |
| executionEndpoints | list | `[]` | An array of execution endpoints to use for the explorer -- url is the only required field |
| extraArgs | list | `[]` | Extra args for the dora container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `8080` |  |
| image.pullPolicy | string | `"Always"` | dora container pull policy |
| image.repository | string | `"ethpandaops/dora"` | dora container image repository |
| image.tag | string | `"master"` | dora container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| maxInMemoryEpochs | int | `4` | Maximum number of epochs to keep in memory |
| mevRelays | list | `[]` | An array of mev relays to crawl mev data from (optional) -- index must be a unique id for the relay (0-62) -- {} |
| name | string | `"mainnet"` | Name of the network ("mainnet", "sepolia", "holesky") |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"1Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| postgresql.auth.database | string | `"dora"` |  |
| postgresql.auth.enablePostgresUser | bool | `true` |  |
| postgresql.auth.password | string | `"postgres"` |  |
| postgresql.auth.postgresPassword | string | `"postgres"` |  |
| postgresql.auth.username | string | `"postgres"` |  |
| postgresql.enabled | bool | `true` |  |
| postgresql.image.registry | string | `"docker.io"` |  |
| postgresql.image.repository | string | `"bitnami/postgresql"` |  |
| postgresql.image.tag | string | `"15.3.0-debian-11-r7"` |  |
| postgresql.name | string | `"{{ .Release.Name }}-postgresql"` | If enabled a postgres chart will be deployed as a dependency |
| postgresql.persistence.enabled | bool | `true` |  |
| postgresql.persistence.size | string | `"8Gi"` |  |
| postgresql.primary.extendedConfiguration | string | `"max_connections = 1024\n"` |  |
| postgresql.pullPolicy | string | `"IfNotPresent"` |  |
| priorityClassName | string | `nil` | Pod priority class |
| proxyCount | int | `1` | Number of proxy servers in front of the explorer |
| ranges | string | `"0-1: test\n"` |  |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |
| validatorNamesInventory | string | `""` | This can be a url here for example: -- "https://config.dencun-devnet-8.ethpandaops.io/api/v1/nodes/validator-ranges" -- If you want to use a local range file define it in the values.yaml ranges section |

# Example

Usage: dora-explorer -config config.yaml

Helper:
```shell
Usage of ./dora-explorer:
-config string
    Path to the config file, if empty string defaults will be used
```

In order to name validators based on ranges the following file format can be provided YAML:
```yaml
0-500: validator_set_A
500-1000: validator_set_B
1000-1500: validator_set_C
...
```

More details can be found [here](https://github.com/pk910/dora).



================================================
FILE: charts/dora/Chart.lock
================================================
dependencies:
- name: postgresql
  repository: https://charts.bitnami.com/bitnami
  version: 12.9.0
digest: sha256:c8d7952409e9d56a9a94c4afa112e5069f36558240d6abf6dba1353795b932cb
generated: "2023-08-23T13:32:23.010602+02:00"



================================================
FILE: charts/dora/Chart.yaml
================================================
apiVersion: v2
name: dora
description: A Beaconchain explorer is a tool that allows users to view and interact with the data on the Ethereum Beacon Chain. It is similar to a blockchain explorer, which allows users to view data on a blockchain such as the current state of transactions and blocks - but focussed on exploring the beaconchain.
home: https://github.com/pk910/dora
type: application
version: 0.0.8
maintainers:
  - name: barnabasbusa
    email: busa.barnabas@gmail.com
  - name: pk910
    email: pk910@pk910.de
dependencies:
  - name: postgresql
    version: "12.x.x"
    repository: "https://charts.bitnami.com/bitnami"
    condition: postgresql.enabled



================================================
FILE: charts/dora/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Example

Usage: dora-explorer -config config.yaml

Helper:
```shell
Usage of ./dora-explorer:
-config string
    Path to the config file, if empty string defaults will be used
```

In order to name validators based on ranges the following file format can be provided YAML:
```yaml
0-500: validator_set_A
500-1000: validator_set_B
1000-1500: validator_set_C
...
```

More details can be found [here](https://github.com/pk910/dora).



================================================
FILE: charts/dora/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- dora container image repository
  repository: ethpandaops/dora
  # -- dora container image tag
  tag: master
  # -- dora container pull policy
  pullPolicy: Always

# -- An array of endpoints to use for the explorer
# -- url is the only required field
endpoints:
  - name: default-endpoint
    url: "http://beacon-node:5052"
    priority: 1
    archive: false
    headers:
      "X-Test": "test"
      "Y-Test": "test2"

# -- An array of execution endpoints to use for the explorer
# -- url is the only required field
executionEndpoints: []
  #- name: default-endpoint
  #  url: "http://execution-node:8545"
  #  priority: 1
  #  archive: false
  #  headers:
  #    "X-Test": "test"
  #    "Y-Test": "test2"

# -- An array of mev relays to crawl mev data from (optional)
# -- index must be a unique id for the relay (0-62)
# -- {}
mevRelays: []
  #- index: 0
  #  name: default-relay
  #  url: "http://mev-relay"
  #  blockLimit: 200

# -- Name of the network ("mainnet", "sepolia", "holesky")
name: mainnet

# -- This can be a url here for example:
# -- "https://config.dencun-devnet-8.ethpandaops.io/api/v1/nodes/validator-ranges"
# -- If you want to use a local range file define it in the values.yaml ranges section
validatorNamesInventory: ""

# -- Link to the el block explorer
ethExplorerLink: ""

# -- Number of proxy servers in front of the explorer
proxyCount: 1

# -- Page call limit per second per user
callRateLimit: 2

# -- Page call burst limit per user
callRateBurst: 10

# -- Maximum number of epochs to keep in memory
maxInMemoryEpochs: 4


# -- Config file
# @default -- See `values.yaml`
config: |
    logging:
      outputLevel: "info"
      #outputStderr: false

      #filePath: "explorer.log"
      #fileLevel: "warn"

    # Chain network configuration
    chain:
      displayName: "{{ .Values.name }}"

    # HTTP Server configuration
    server:
      host: "0.0.0.0" # Address to listen on
      port: "{{ .Values.httpPort }}" # Port to listen on

    frontend:
      enabled: true # Enable or disable to web frontend
      debug: false
      minimize: false # minimize html templates

      # Name of the site, displayed in the title tag
      siteName: "Dora the Explorer"
      siteSubtitle: "{{ .Values.name }}"

      # link to EL Explorer
      ethExplorerLink: "{{ .Values.ethExplorerLink }}"

      # file or inventory url to load validator names from
      {{- if ne .Values.validatorNamesInventory "" }}
      validatorNamesYaml: "/data/ranges.yaml"
      {{- else }}
      validatorNamesYaml: ""
      {{- end }}
      validatorNamesInventory: "{{ .Values.validatorNamesInventory }}"

    rateLimit:
      enabled: true
      proxyCount: {{ .Values.proxyCount }}
      rate: {{ .Values.callRateLimit }}
      burst: {{ .Values.callRateBurst }}

    beaconapi:
      # CL Client RPC
      endpoints:
        {{- range .Values.endpoints }}
        - url: {{ .url | quote }}
          {{- if .name }}
          name: {{ .name | quote }}
          {{- end }}
          {{- if .priority }}
          priority: {{ .priority }}
          {{- end }}
          {{- if .archive }}
          archive: {{ .archive }}
          {{- end }}
          {{- if .headers }}
          headers:
          {{- range $key, $value := .headers }}
            {{ $key | quote | default "" }}: {{ $value | quote | default ""}}
          {{- end }}
          {{- end }}
        {{- end }}

      # local cache for page models
      localCacheSize: 100 # 100MB

      # remote cache for page models
      redisCacheAddr: ""
      redisCachePrefix: ""

    executionapi:
      # CL Client RPC
      endpoints: {{ if not .Values.executionEndpoints }}[]{{ end }}
        {{- range .Values.executionEndpoints }}
        - url: {{ .url | quote }}
          {{- if .name }}
          name: {{ .name | quote }}
          {{- end }}
          {{- if .priority }}
          priority: {{ .priority }}
          {{- end }}
          {{- if .archive }}
          archive: {{ .archive }}
          {{- end }}
          {{- if .headers }}
          headers:
          {{- range $key, $value := .headers }}
            {{ $key | quote | default "" }}: {{ $value | quote | default ""}}
          {{- end }}
          {{- end }}
        {{- end }}
      depositLogBatchSize: 1000

    mevIndexer:
      # list of mev relays to crawl mev blocks from
      relays: {{ if not .Values.mevRelays }}[]{{ end }}
        {{- range .Values.mevRelays }}
        - index: {{ .index }}
          name: {{ .name | quote }}
          url: {{ .url | quote }}
          blockLimit: {{ .blockLimit }}
        {{- end }}
      refreshInterval: 5m

    # indexer keeps track of the latest epochs in memory.
    indexer:
      # max number of epochs to keep in memory
      inMemoryEpochs: {{ .Values.maxInMemoryEpochs }}

      # number of seconds to wait between each epoch (don't overload CL client)
      syncEpochCooldown: 2

      # max number of parallel state requests to make to the CL clients
      maxParallelValidatorSetRequests: 2

    database:
      engine: "pgsql"
      pgsql:
        host: "{{ tpl .Values.postgresql.name $ }}"
        port: 5432
        user: "{{ .Values.postgresql.auth.username }}"
        password: "{{ .Values.postgresql.auth.password }}"
        name: "{{ .Values.postgresql.auth.database }}"

ranges: |
  0-1: test

# - HTTP port for dora interface
httpPort: 8080

# -- Extra args for the dora container
extraArgs: []

# -- Command replacement for the dora container
customCommand: []

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

# -- Additional env variables injected via a created secret
secretEnv: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 1Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []

postgresql:
  # -- If enabled a postgres chart will be deployed as a dependency
  name: "{{ .Release.Name }}-postgresql"
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 15.3.0-debian-11-r7
  pullPolicy: IfNotPresent
  auth:
    enablePostgresUser: true
    postgresPassword: postgres
    database: dora
    username: postgres
    password: postgres
  primary:
    extendedConfiguration: |
      max_connections = 1024
  persistence:
    enabled: true
    size: 8Gi



================================================
FILE: charts/dora/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/dora/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "dora.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "dora.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "dora.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "dora.labels" -}}
helm.sh/chart: {{ include "dora.chart" . }}
{{ include "dora.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "dora.selectorLabels" -}}
app.kubernetes.io/name: {{ include "dora.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "dora.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "dora.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}



================================================
FILE: charts/dora/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "dora.fullname" . }}-ranges
  labels:
    {{- include "dora.labels" . | nindent 4 }}
data:
  ranges.yaml: |
    {{- .Values.ranges | nindent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "dora.fullname" . }}-config
  labels:
    {{- include "dora.labels" . | nindent 4 }}
data:
  config.yaml: |
    {{- tpl .Values.config . | nindent 4 }}


================================================
FILE: charts/dora/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dora.fullname" . }}
  labels:
    {{- include "dora.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "dora.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "dora.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "dora.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
              - ./dora-explorer
              - -config
              - /data/config.yaml
          {{- end }}
          {{- if gt (len .Values.extraArgs) 0 }}
          args:
            {{- toYaml .Values.extraArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: "/data/config.yaml"
              subPath: config.yaml
              readOnly: true
            - name: ranges
              mountPath: "/data/ranges.yaml"
              subPath: ranges.yaml
              readOnly: true
            {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
            {{- if .Values.extraPodPorts }}
            {{ toYaml .Values.extraPodPorts | nindent 12 }}
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
        {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
        {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "dora.fullname" . }}-config
        - name: ranges
          configMap: 
            name: {{ include "dora.fullname" . }}-ranges



================================================
FILE: charts/dora/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "dora.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "dora.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/dora/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "dora.fullname" . }}
  labels:
    {{- include "dora.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.httpPort }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "dora.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/dora/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "dora.serviceAccountName" . }}
  labels:
    {{- include "dora.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/dora/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "dora.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "dora.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: http
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "dora.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/dora/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "dora.fullname" . }}-test-connection"
  labels:
    {{- include "dora.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['{{ include "dora.fullname" . }}:{{ .Values.httpPort }}']
  restartPolicy: Never



================================================
FILE: charts/dshackle/README.md
================================================

# dshackle

![Version: 0.1.9](https://img.shields.io/badge/Version-0.1.9-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Emerald Dshackle is a Fault Tolerant Load Balancer for Blockchain API. Support for standard Bitcoin and Ethereum JSON RPC API over HTTP and WebSocket.

**Homepage:** <https://github.com/emeraldpay/dshackle>

## Source Code

* <https://github.com/emeraldpay/dshackle>

## Requirements

| Repository | Name | Version |
|------------|------|---------|
| https://charts.bitnami.com/bitnami | redis | 16.x.x |

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| config | string | See `values.yaml` | Config file |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the dshackle container |
| customCommand | list | `[]` | Command replacement for the dshackle container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| gRPCPort | int | See `values.yaml` | gRPC Port |
| healthPort | int | See `values.yaml` | Health Port |
| httpPort | int | See `values.yaml` | HTTP Port |
| image.pullPolicy | string | `"IfNotPresent"` | dshackle container pull policy |
| image.repository | string | `"emeraldpay/dshackle"` | dshackle container image repository |
| image.tag | string | `"0.14.0"` | dshackle container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| metricsPort | int | See `values.yaml` | Metrics Port |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| redis.auth.password | string | `"yourRedisSecret"` |  |
| redis.enabled | bool | `true` | If enabled a redis chart will be deployed as a dependency |
| redis.image.pullPolicy | string | `"IfNotPresent"` |  |
| redis.image.registry | string | `"docker.io"` |  |
| redis.image.repository | string | `"bitnami/redis"` |  |
| redis.image.tag | string | `"6.2.6-debian-10-r21"` |  |
| redis.master.persistence.enabled | bool | `true` |  |
| redis.master.persistence.size | string | `"8Gi"` |  |
| redis.replica.persistence.enabled | bool | `false` |  |
| redis.replica.persistence.size | string | `"8Gi"` |  |
| redis.replica.replicaCount | int | `0` |  |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{"INFURA_USER":"your-infura-secret","REDIS_PASSWORD":"yourRedisSecret"}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.annotations | object | `{}` | Annotations for the Service |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |

# Examples

## Connecting to an external Redis instance

```yaml
# Disable the redis deployment
redis:
  enabled: false
config: |
  ...
  cache:
    redis:
      enabled: true
      host: your-external-redis-host.somewhere
      port: 6379
      db: 0
      password: ${REDIS_PASSWORD}

secretEnv:
  REDIS_PASSWORD: yourRedisSecret
```



================================================
FILE: charts/dshackle/Chart.lock
================================================
dependencies:
- name: redis
  repository: https://charts.bitnami.com/bitnami
  version: 16.13.2
digest: sha256:66dcce3f4e621b9d644aee4d3cb1845b158f9ed20e45eb2801c5462607e4b845
generated: "2023-05-10T13:22:49.733709+02:00"



================================================
FILE: charts/dshackle/Chart.yaml
================================================
apiVersion: v2
name: dshackle
description: >
  Emerald Dshackle is a Fault Tolerant Load Balancer for Blockchain API.
  Support for standard Bitcoin and Ethereum JSON RPC API over HTTP and WebSocket.
home: https://github.com/emeraldpay/dshackle
icon: https://avatars.githubusercontent.com/u/49622339?s=200&v=4
sources:
  - https://github.com/emeraldpay/dshackle
type: application
version: 0.1.9
maintainers:
  - name: skylenet
    email: rafael@skyle.net
dependencies:
- name: redis
  version: "16.x.x"
  repository: "https://charts.bitnami.com/bitnami"
  condition: redis.enabled



================================================
FILE: charts/dshackle/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Connecting to an external Redis instance

```yaml
# Disable the redis deployment
redis:
  enabled: false
config: |
  ...
  cache:
    redis:
      enabled: true
      host: your-external-redis-host.somewhere
      port: 6379
      db: 0
      password: ${REDIS_PASSWORD}

secretEnv:
  REDIS_PASSWORD: yourRedisSecret
```



================================================
FILE: charts/dshackle/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- dshackle container image repository
  repository: emeraldpay/dshackle
  # -- dshackle container image tag
  tag: "0.14.0"
  # -- dshackle container pull policy
  pullPolicy: IfNotPresent

# -- Custom args for the dshackle container
customArgs: []
  #- -config-file=/somewhere-else.yaml
  #- -output-dir=public

# -- Command replacement for the dshackle container
customCommand: [] # Only change this if you need to change the default command

# -- Config file
# @default -- See `values.yaml`
config: |
  version: v1
  port: {{ .Values.gRPCPort }}
  tls:
    enabled: false

  proxy:
    host: 0.0.0.0
    port: {{ .Values.httpPort }}
    routes:
      - id: eth
        blockchain: ethereum

  cluster:
    upstreams:
      - id: infura-eth
        chain: ethereum
        connection:
          ethereum:
            rpc:
              url: "https://mainnet.infura.io/v3/${INFURA_USER}"
            ws:
              url: "wss://mainnet.infura.io/ws/v3/${INFURA_USER}"

  monitoring:
    enabled: true
    jvm: false
    extended: false
    prometheus:
      enabled: true
      bind: 0.0.0.0
      port: {{ .Values.metricsPort }}
      path: /metrics

  health:
    port: {{ .Values.healthPort }}
    host: 0.0.0.0
    path: /health
    blockchains:
      - chain: ethereum-mainnet
        min-available: 1

  cache:
    redis:
      enabled: true
      host: {{ .Release.Name }}-redis-master
      port: 6379
      db: 0
      password: ${REDIS_PASSWORD}

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP
  # -- Annotations for the Service
  annotations: {}

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- gRPC Port
# @default -- See `values.yaml`
gRPCPort: 2449

# -- HTTP Port
# @default -- See `values.yaml`
httpPort: 8545

# -- Metrics Port
# @default -- See `values.yaml`
metricsPort: 8081

# -- Health Port
# @default -- See `values.yaml`
healthPort: 8082

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 30

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []
#- name: JAVA_OPTS
#  value: "-Xmx3000m -Xms3000m"

# -- Additional env variables injected via a created secret
secretEnv:
  INFURA_USER: your-infura-secret # Used in config file
  REDIS_PASSWORD: yourRedisSecret # Used in config file

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []

redis:
  # -- If enabled a redis chart will be deployed as a dependency
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/redis
    tag: 6.2.6-debian-10-r21
    pullPolicy: IfNotPresent
  auth:
    password: yourRedisSecret
  master:
    persistence:
      enabled: true
      size: 8Gi
  replica:
    replicaCount: 0
    persistence:
      enabled: false
      size: 8Gi



================================================
FILE: charts/dshackle/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/dshackle/ci/default-values.yaml
================================================
config: |
  version: v1
  port: 2449
  tls:
    enabled: false

  proxy:
    host: 0.0.0.0
    port: 8545
    routes:
      - id: eth
        blockchain: ethereum

  cluster:
    upstreams:
      - id: infura-eth
        chain: ethereum
        connection:
          ethereum:
            rpc:
              url: "https://mainnet.infura.io/v3/${INFURA_USER}"
            ws:
              url: "wss://mainnet.infura.io/ws/v3/${INFURA_USER}"

  monitoring:
    enabled: true
    jvm: false
    extended: false
    prometheus:
      enabled: true
      bind: 0.0.0.0
      port: 8081
      path: /metrics

  health:
    port: 8082
    host: 0.0.0.0
    path: /health
    blockchains:
      - chain: ethereum-mainnet
        min-available: 1

  cache:
    redis:
      enabled: false



================================================
FILE: charts/dshackle/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "dshackle.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "dshackle.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "dshackle.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "dshackle.labels" -}}
helm.sh/chart: {{ include "dshackle.chart" . }}
{{ include "dshackle.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "dshackle.selectorLabels" -}}
app.kubernetes.io/name: {{ include "dshackle.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "dshackle.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "dshackle.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{/*
HTTP port
*/}}
{{- define "dshackle.httpPort" -}}
{{- default 8545 .Values.httpPort }}
{{- end }}



================================================
FILE: charts/dshackle/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "dshackle.fullname" . }}
  labels:
    {{- include "dshackle.labels" . | nindent 4 }}
data:
  dshackle.yaml: |
    {{- tpl .Values.config . | nindent 4 }}



================================================
FILE: charts/dshackle/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "dshackle.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "dshackle.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/dshackle/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "dshackle.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "dshackle.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "dshackle.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "dshackle.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "dshackle.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/dshackle/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "dshackle.fullname" . }}-env
  labels:
    {{- include "dshackle.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/dshackle/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "dshackle.fullname" . }}-headless
  labels:
    {{- include "dshackle.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ .Values.httpPort }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ .Values.gRPCPort }}
      targetPort: grpc
      protocol: TCP
      name: grpc
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "dshackle.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/dshackle/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "dshackle.fullname" . }}
  labels:
    {{- include "dshackle.labels" . | nindent 4 }}
  annotations:
    {{ toYaml .Values.service.annotations | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.httpPort }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ .Values.gRPCPort }}
      targetPort: grpc
      protocol: TCP
      name: grpc
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    - port: {{ .Values.healthPort }}
      targetPort: health
      protocol: TCP
      name: health
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "dshackle.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/dshackle/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "dshackle.serviceAccountName" . }}
  labels:
    {{- include "dshackle.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/dshackle/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "dshackle.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "dshackle.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "dshackle.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/dshackle/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "dshackle.fullname" . }}
  labels:
    {{- include "dshackle.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "dshackle.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "dshackle.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "dshackle.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "dshackle.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if gt (len .Values.customCommand) 0 }}
          command:
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: config
              mountPath: "/etc/dshackle/dshackle.yaml"
              subPath: dshackle.yaml
              readOnly: true
          ports:
            - name: http
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.gRPCPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
              protocol: TCP
            - name: health
              containerPort: {{ .Values.healthPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "dshackle.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "dshackle.fullname" . }}



================================================
FILE: charts/dshackle/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "dshackle.fullname" . }}-test-connection"
  labels:
    {{- include "dshackle.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - --location
       - --request
       - GET
       - '{{ include "dshackle.fullname" . }}:{{ .Values.httpPort }}/'
  restartPolicy: Never



================================================
FILE: charts/dugtrio/README.md
================================================

# dugtrio

![Version: 0.0.7](https://img.shields.io/badge/Version-0.0.7-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Fault tolerant load balancer for beacon chain RPC apis

**Homepage:** <https://github.com/ethpandaops/dugtrio>

## Source Code

* <https://github.com/ethpandaops/dugtrio>

# Usage

Usage: dugtrio-proxy -config config.yaml

Helper:
```shell
Usage of ./dugtrio-proxy:
-config string
    Path to the dugtrio config file
```

Example Configuration:
```yaml
endpoints:
  - name: node1
    url: "http://beacon-node1:5052"
  - name: node2
    url: "http://beacon-node2:5052"
```

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| config | string | See `values.yaml` | Config file |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `["-config=dugtrio-config.yaml"]` | Custom args for the dugtrio container |
| customCommand | list | `[]` | Command replacement for the dugtrio container |
| dugtrioFrontendEnabled | bool | `true` | Enable dugtrio UI |
| dugtrioFrontendTitle | string | `"Dugtrio"` | Dugtrio UI title |
| dugtrioMetricsEnabled | bool | `true` | Enable dugtrio metrics endpoint |
| dugtrioPoolFollowDistance | int | `10` | number of blocks to keep in dugtrio cache to sort out forks |
| dugtrioPoolMaxHeadDistance | int | `2` | max head distance for endpoints before not using them anymore |
| dugtrioPoolScheduler | string | `"rr"` | dugtrio pool scheduler mode |
| dugtrioProxyBlockedPaths | list | `[]` | blocked proxy paths (regular expressions, eg. "^/eth/v[0-9]+/debug/.*") |
| dugtrioProxyCallRateBurst | int | `1000` | dugtrio call rate burst (burst number of calls per ip) |
| dugtrioProxyCallRateLimit | int | `100` | dugtrio call rate limit (number of calls per second per ip) |
| dugtrioProxyCallTimeout | string | `"10m"` | timeout for dugtrio proxy calls |
| dugtrioProxyCount | int | `1` | number of HTTP proxies in front of dugtrio |
| dugtrioProxySessionTimeout | string | `"10m"` | timeout for dugtrio sessions (used for rate limiting & endpoint stickiness) |
| dugtrioProxyStickyEndpoint | bool | `true` | reuse the same endpoint for sessions as long as available |
| endpoints | list | `[{"headers":{"X-Test":"test","Y-Test":"test2"},"name":"default-endpoint","url":"http://beacon-node:5052"}]` | An array of endpoints to use for dugtrio -- url is the only required field |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `8080` | HTTP port for dugtrio interface |
| image.pullPolicy | string | `"IfNotPresent"` | dugtrio container pull policy |
| image.repository | string | `"ethpandaops/dugtrio"` | dugtrio container image repository |
| image.tag | string | `"1.0.0"` | dugtrio container image tag |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| resources | object | `{}` | Resource requests and limits |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"2s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |



================================================
FILE: charts/dugtrio/Chart.yaml
================================================
apiVersion: v2
name: dugtrio
description: >
  Fault tolerant load balancer for beacon chain RPC apis
home: https://github.com/ethpandaops/dugtrio
sources:
  - https://github.com/ethpandaops/dugtrio
type: application
version: 0.0.7
appVersion: "1.0.0"
maintainers:
  - name: pk910
    email: philipp@pk910.de



================================================
FILE: charts/dugtrio/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}


{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}


# Usage

Usage: dugtrio-proxy -config config.yaml

Helper:
```shell
Usage of ./dugtrio-proxy:
-config string
    Path to the dugtrio config file
```

Example Configuration:
```yaml
endpoints:
  - name: node1
    url: "http://beacon-node1:5052"
  - name: node2
    url: "http://beacon-node2:5052"
```

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/dugtrio/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- dugtrio container image repository
  repository: ethpandaops/dugtrio
  # -- dugtrio container image tag
  tag: "1.0.0"
  # -- dugtrio container pull policy
  pullPolicy: IfNotPresent

# -- Custom args for the dugtrio container
customArgs:
  - -config=dugtrio-config.yaml

# -- Command replacement for the dugtrio container
customCommand: [] # Only change this if you need to change the default command

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Annotations for the StatefulSet
annotations: {}

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 2s
  # -- ServiceMonitor relabelings
  relabelings: []

# -- HTTP port for dugtrio interface
httpPort: 8080

# -- An array of endpoints to use for dugtrio
# -- url is the only required field
endpoints:
  - name: default-endpoint
    url: "http://beacon-node:5052"
    headers:
      "X-Test": "test"
      "Y-Test": "test2"

# -- dugtrio pool scheduler mode
dugtrioPoolScheduler: "rr"

# -- number of blocks to keep in dugtrio cache to sort out forks
dugtrioPoolFollowDistance: 10

# -- max head distance for endpoints before not using them anymore
dugtrioPoolMaxHeadDistance: 2

# -- number of HTTP proxies in front of dugtrio
dugtrioProxyCount: 1

# -- timeout for dugtrio proxy calls
dugtrioProxyCallTimeout: 10m

# -- timeout for dugtrio sessions (used for rate limiting & endpoint stickiness)
dugtrioProxySessionTimeout: 10m

# -- reuse the same endpoint for sessions as long as available
dugtrioProxyStickyEndpoint: true

# -- dugtrio call rate limit (number of calls per second per ip)
dugtrioProxyCallRateLimit: 100

# -- dugtrio call rate burst (burst number of calls per ip)
dugtrioProxyCallRateBurst: 1000

# -- blocked proxy paths (regular expressions, eg. "^/eth/v[0-9]+/debug/.*")
dugtrioProxyBlockedPaths: []

# -- Enable dugtrio UI
dugtrioFrontendEnabled: true

# -- Dugtrio UI title
dugtrioFrontendTitle: "Dugtrio"

# -- Enable dugtrio metrics endpoint
dugtrioMetricsEnabled: true

# -- Config file
# @default -- See `values.yaml`
config: |
  logging:
    #outputLevel: "debug"
    #filePath: "dugtrio.log"
    #fileLevel: "warn"

  # HTTP Server configuration
  server:
    host: "0.0.0.0"
    port: "{{ .Values.httpPort }}"

  # Beacon Node Endpoints
  endpoints:
    {{- range .Values.endpoints }}
    - url: {{ .url | quote }}
      {{- if .name }}
      name: {{ .name | quote }}
      {{- end }}
      {{- if .headers }}
      headers:
      {{- range $key, $value := .headers }}
        {{ $key | quote | default "" }}: {{ $value | quote | default ""}}
      {{- end }}
      {{- end }}
    {{- end }}

  # Pool configuration
  pool:
    schedulerMode: "{{ .Values.dugtrioPoolScheduler }}"
    followDistance: {{ .Values.dugtrioPoolFollowDistance }}
    maxHeadDistance: {{ .Values.dugtrioPoolMaxHeadDistance }}

  # Proxy configuration
  proxy:
    # number of proxies in front of dugtrio
    proxyCount: {{ .Values.dugtrioProxyCount }}

    # proxy call timeout
    callTimeout: {{ .Values.dugtrioProxyCallTimeout }}

    # proxy session timeout
    sessionTimeout: {{ .Values.dugtrioProxySessionTimeout }}

    # reuse the same endpoint when possible
    stickyEndpoint: {{ .Values.dugtrioProxyStickyEndpoint }}

    # call rate limit (calls per second)
    callRateLimit: {{ .Values.dugtrioProxyCallRateLimit }}

    # call rate burst limit
    callRateBurst: {{ .Values.dugtrioProxyCallRateBurst }}

    {{- if .dugtrioProxyBlockedPaths }}
    # blocked api paths (regex patterns)
    blockedPaths:
      {{- range $i, $value := .dugtrioProxyBlockedPaths }}
      - {{ $value | quote }}
      {{- end }}
    {{- end }}

  # Frontend configuration
  frontend:
    # Enable or disable to web frontend
    enabled: {{ .Values.dugtrioFrontendEnabled }}
    minify: true
    siteName: "{{ .Values.dugtrioFrontendTitle }}"

  metrics:
    enabled: {{ .Values.dugtrioMetricsEnabled }}



================================================
FILE: charts/dugtrio/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/dugtrio/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "dugtrio.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "dugtrio.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "dugtrio.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "dugtrio.labels" -}}
helm.sh/chart: {{ include "dugtrio.chart" . }}
{{ include "dugtrio.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "dugtrio.selectorLabels" -}}
app.kubernetes.io/name: {{ include "dugtrio.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "dugtrio.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "dugtrio.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "dugtrio.httpPort" -}}
{{- printf "8080" -}}
{{- end -}}



================================================
FILE: charts/dugtrio/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "dugtrio.fullname" . }}
  labels:
    {{- include "dugtrio.labels" . | nindent 4 }}
data:
  dugtrio-config.yaml: |
    {{- tpl .Values.config . | nindent 4 }}





================================================
FILE: charts/dugtrio/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "dugtrio.fullname" . -}}
{{- $svcPort := include "dugtrio.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "dugtrio.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/dugtrio/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "dugtrio.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "dugtrio.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "dugtrio.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "dugtrio.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "dugtrio.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/dugtrio/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "dugtrio.fullname" . }}-headless
  labels:
    {{- include "dugtrio.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "dugtrio.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "dugtrio.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/dugtrio/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "dugtrio.fullname" . }}
  labels:
    {{- include "dugtrio.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "dugtrio.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
    {{- if eq .Values.service.type "NodePort" }}
      nodePort: {{ .Values.service.nodePort }}
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "dugtrio.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/dugtrio/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "dugtrio.serviceAccountName" . }}
  labels:
    {{- include "dugtrio.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/dugtrio/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "dugtrio.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "dugtrio.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: http
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "dugtrio.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/dugtrio/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "dugtrio.fullname" . }}
  labels:
    {{- include "dugtrio.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "dugtrio.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "dugtrio.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "dugtrio.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "dugtrio.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if gt (len .Values.customCommand) 0 }}
          command:
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: config
              mountPath: "/app/dugtrio-config.yaml"
              subPath: dugtrio-config.yaml
              readOnly: true
          ports:
            - name: http
              containerPort: {{ include "dugtrio.httpPort" . }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: config
          configMap:
            name: {{ include "dugtrio.fullname" . }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}



================================================
FILE: charts/dugtrio/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "dugtrio.fullname" . }}-test-connection"
  labels:
    {{- include "dugtrio.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - --location
       - --request
       - GET
       - '{{ include "dugtrio.fullname" . }}:{{ include "dugtrio.httpPort" . }}/'
  restartPolicy: Never



================================================
FILE: charts/eleel/README.md
================================================

# eleel

![Version: 0.1.6](https://img.shields.io/badge/Version-0.1.6-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

A multiplexer for Ethereum execution clients

**Homepage:** <https://github.com/sigp/eleel>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| clientJWTSecrets | object | `{}` | Client JWT secrets map |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| controllerJWTSecret | string | `""` | Controller JWT secret |
| customArgs | list | `[]` | Custom args for the eleel container |
| customCommand | list | `[]` | Command replacement for the eleel container |
| eeJWTSecret | string | `""` | Execution Engine JWT secret |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPodPorts | list | `[]` | Extra Pod ports |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | eleel container pull policy |
| image.repository | string | `"ethpandaops/eleel"` | eleel container image repository |
| image.tag | string | `"main"` | eleel container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/eleel/Chart.yaml
================================================
apiVersion: v2
name: eleel
description: A multiplexer for Ethereum execution clients
home: https://github.com/sigp/eleel
type: application
version: 0.1.6
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org
  - name: savid
    email: andrew.davis@ethereum.org



================================================
FILE: charts/eleel/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/eleel/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- eleel container image repository
  repository: ethpandaops/eleel
  # -- eleel container image tag
  tag: main
  # -- eleel container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []
  ## Example
  #- --network=holesky
  #- --ee-url=http://your-eth1-node:8551

# -- Execution Engine JWT secret
eeJWTSecret: ""
# -- Controller JWT secret
controllerJWTSecret: ""
# -- Client JWT secrets map
clientJWTSecrets: {}
  ## Example
  # node1: c259fb249f7fa1882b1d4150ace73c1023aba4f6267b29a871ad5c9adc7a543a
  # node2: fb6073f77160f9a7ce11190d3612e841daea2e7319a59e1d82a8804e9fa193ee

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Custom args for the eleel container
customArgs: []

# -- Command replacement for the eleel container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Extra Pod ports
extraPodPorts: []

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []



================================================
FILE: charts/eleel/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/eleel/ci/ct-values.yaml
================================================
eeJWTSecret: ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a
controllerJWTSecret: ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a
clientJWTSecrets:
  node1: c259fb249f7fa1882b1d4150ace73c1023aba4f6267b29a871ad5c9adc7a543a
  node2: fb6073f77160f9a7ce11190d3612e841daea2e7319a59e1d82a8804e9fa193ee



================================================
FILE: charts/eleel/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "eleel.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "eleel.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "eleel.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "eleel.labels" -}}
helm.sh/chart: {{ include "eleel.chart" . }}
{{ include "eleel.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "eleel.selectorLabels" -}}
app.kubernetes.io/name: {{ include "eleel.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "eleel.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "eleel.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "eleel.httpPort" -}}
{{ default 8552 }}
{{- end }}

{{/*
Generate TOML format for client JWT secrets
*/}}
{{- define "eleel.clientJWTSecretsToToml" -}}
[secrets]
{{- range $key, $value := .Values.clientJWTSecrets }}
{{ $key }} = "{{ $value }}"
{{- end }}
{{- end -}}


================================================
FILE: charts/eleel/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "eleel.fullname" . }}
  labels:
    {{- include "eleel.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "eleel.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "eleel.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "eleel.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "eleel"
          - --listen-address=0.0.0.0
          - --listen-port={{ include "eleel.httpPort" . }}
          - --ee-jwt-secret=/config/execution.jwt
          - --controller-jwt-secret=/config/controller.jwt
          - --client-jwt-secrets=/config/client-secrets.toml
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 10}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: jwt
            mountPath: "/config"
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
        ports:
          - name: http
            containerPort: {{ include "eleel.httpPort" . }}
            protocol: TCP
          {{- if .Values.extraPodPorts }}
            {{ toYaml .Values.extraPodPorts | nindent 10 }}
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "eleel.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: jwt
          secret:
            secretName: {{ include "eleel.fullname" . }}-jwt



================================================
FILE: charts/eleel/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "eleel.fullname" . -}}
{{- $svcPort := include "eleel.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "eleel.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/eleel/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "eleel.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "eleel.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "eleel.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "eleel.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "eleel.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/eleel/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "eleel.fullname" . }}-env
  labels:
    {{- include "eleel.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "eleel.fullname" . }}-jwt
type: Opaque  
data:
  execution.jwt: {{ .Values.eeJWTSecret | b64enc }}
  controller.jwt: {{ .Values.controllerJWTSecret | b64enc }}
  client-secrets.toml: {{ include "eleel.clientJWTSecretsToToml" . | b64enc }}



================================================
FILE: charts/eleel/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "eleel.fullname" . }}
  labels:
    {{- include "eleel.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "eleel.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "eleel.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/eleel/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "eleel.serviceAccountName" . }}
  labels:
    {{- include "eleel.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/erigon/README.md
================================================

# erigon

![Version: 1.0.12](https://img.shields.io/badge/Version-1.0.12-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Erigon, formerly known as Turbo‐Geth, is a fork of Go Ethereum (geth) oriented toward speed and disk‐space efficiency. Erigon is a completely re-architected implementation of Ethereum, currently written in Go but with implementations in other languages planned. Erigon's goal is to provide a faster, more modular, and more optimized implementation of Ethereum.

**Homepage:** <https://twitter.com/ErigonEth>

## Source Code

* <https://github.com/ledgerwatch/erigon>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| authPort | int | `8551` | Engine Port (Auth Port) |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customCommand | list | `[]` | Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplate instead. |
| customCommandRPCDaemon | list | `[]` | Legacy way of overwriting the default command. You may prefer to change defaultCommandRPCDaemonTemplate instead. |
| defaultCommandRPCDaemonTemplate | string | See `values.yaml` | Template used for the default command |
| defaultCommandTemplate | string | See `values.yaml` | Template used for the default command |
| extraArgs | list | `[]` | Extra args for the erigon container |
| extraArgsRPCDaemon | list | `[]` | Extra args for the rpcdaemon container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables for erigon container |
| extraEnvRPCDaemon | list | `[]` | Additional env variables for RPCDaemon container |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `8545` | HTTP Port |
| image.pullPolicy | string | `"IfNotPresent"` | erigon container pull policy |
| image.repository | string | `"erigontech/erigon"` | erigon container image repository |
| image.tag | string | `"latest"` | erigon container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initChownData.enabled | bool | `true` | Init container to set the correct permissions to access data directories |
| initChownData.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| initChownData.image.repository | string | `"busybox"` | Container repository |
| initChownData.image.tag | string | `"1.34.0"` | Container tag |
| initChownData.resources | object | `{}` | Resource requests and limits |
| initContainers | list | `[]` | Additional init containers |
| jwt | string | `"ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a"` | JWT secret used by client as a secret. Change this value. |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| livenessProbeRPCDaemon | object | See `values.yaml` | Liveness probe |
| metricsPort | int | `6060` | Metrics Port |
| metricsPortRPCDaemon | int | `6061` | RPC Daemon Port |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| p2pNodePort.enabled | bool | `false` | Expose P2P port via NodePort |
| p2pNodePort.initContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.initContainer.image.repository | string | `"lachlanevenson/k8s-kubectl"` | Container image to fetch nodeport information |
| p2pNodePort.initContainer.image.tag | string | `"v1.25.4"` | Container tag |
| p2pNodePort.port | int | `31000` | NodePort to be used |
| p2pNodePort.portForwardContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.portForwardContainer.image.repository | string | `"alpine/socat"` | Container image for the port forwarder |
| p2pNodePort.portForwardContainer.image.tag | string | `"latest"` | Container tag |
| p2pPort | int | `30303` | P2P Port |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"20Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| rbac.clusterRules | list | See `values.yaml` | Required ClusterRole rules |
| rbac.create | bool | `true` | Specifies whether RBAC resources are to be created |
| rbac.rules | list | See `values.yaml` | Required ClusterRole rules |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| readinessProbeRPCDaemon | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits for the erigon container |
| resourcesRPCDaemon | object | `{}` | Resource requests and limits for the RPC daemon container |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/debug/metrics/prometheus"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `300` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |

# Examples

## Connecting to the holesky test network

```yaml
extraArgs:
  - --chain=holesky
  - --maxpeers=60
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.
Currently erigon doesn't allow you to announce a a different discovery port, which would be a requirement to run multiple replicas within the same chart.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```

## Exposing more APIs via the RPC Daemon

```yaml
extraArgsRPCDaemon:
  - --http.corsdomain=yourdomain.tld
  - --http.api=eth,erigon,web3,net,debug,trace,txpool,db
```



================================================
FILE: charts/erigon/Chart.yaml
================================================
apiVersion: v2
name: erigon
description: Erigon, formerly known as Turbo‐Geth, is a fork of Go Ethereum (geth) oriented toward speed and disk‐space efficiency. Erigon is a completely re-architected implementation of Ethereum, currently written in Go but with implementations in other languages planned. Erigon's goal is to provide a faster, more modular, and more optimized implementation of Ethereum.
home: https://twitter.com/ErigonEth
icon: https://pbs.twimg.com/profile_images/1420080204148576274/-4OFIs2x_400x400.jpg
sources:
  - https://github.com/ledgerwatch/erigon
type: application
version: 1.0.12
maintainers:
  - name: skylenet
    email: rafael@skyle.net
  - name: barnabasbusa
    email: busa.barnabas@gmail.com



================================================
FILE: charts/erigon/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Connecting to the holesky test network

```yaml
extraArgs:
  - --chain=holesky
  - --maxpeers=60
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.
Currently erigon doesn't allow you to announce a a different discovery port, which would be a requirement to run multiple replicas within the same chart.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```


## Exposing more APIs via the RPC Daemon

```yaml
extraArgsRPCDaemon:
  - --http.corsdomain=yourdomain.tld
  - --http.api=eth,erigon,web3,net,debug,trace,txpool,db
```



================================================
FILE: charts/erigon/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- erigon container image repository
  repository: erigontech/erigon
  # -- erigon container image tag
  tag: latest
  # -- erigon container pull policy
  pullPolicy: IfNotPresent

# -- Extra args for the erigon container
extraArgs: []
  #- --holesky

# -- JWT secret used by client as a secret. Change this value.
jwt: ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a

# -- Extra args for the rpcdaemon container
extraArgsRPCDaemon: []
  #- --http.corsdomain=yourdomain.tld
  #- --http.api=eth,erigon,web3,net,debug,trace,txpool,db

# -- Template used for the default command
# @default -- See `values.yaml`
defaultCommandTemplate: |
  - sh
  - -ac
  - >
  {{- if .Values.p2pNodePort.enabled }}
    . /env/init-nodeport;
  {{- end }}
    exec erigon
    --datadir=/data
  {{- if .Values.p2pNodePort.enabled }}
    {{- if not (contains "--nat=" (.Values.extraArgs | join ",")) }}
    --nat=extip:$EXTERNAL_IP
    {{- end }}
    {{- if not (contains "--port=" (.Values.extraArgs | join ",")) }}
    --port=$EXTERNAL_PORT
    {{- end }}
  {{- else }}
    {{- if not (contains "--nat=" (.Values.extraArgs | join ",")) }}
    --nat=extip:$(POD_IP)
    {{- end }}
    {{- if not (contains "--port=" (.Values.extraArgs | join ",")) }}
    --port={{ include "erigon.p2pPort" . }}
    {{- end }}
  {{- end }}
    --http=false
    --private.api.addr=127.0.0.1:9090
    --authrpc.jwtsecret=/data/jwt.hex
    --authrpc.addr=0.0.0.0
    --authrpc.port={{ .Values.authPort }}
    --authrpc.vhosts=*
    --ws
    --metrics
    --metrics.addr=0.0.0.0
    --metrics.port={{ .Values.metricsPort }}
  {{- range .Values.extraArgs }}
    {{ tpl . $ }}
  {{- end }}

# -- Template used for the default command
# @default -- See `values.yaml`
defaultCommandRPCDaemonTemplate: |
  - sh
  - -ac
  - >
    until timeout 1 bash -c ">/dev/tcp/127.0.0.1/9090" 2>/dev/null; do echo "Waiting for erigon..."; sleep 1; done;
    exec rpcdaemon
    --datadir=/data
    --private.api.addr=127.0.0.1:9090
    --txpool.api.addr=127.0.0.1:9090
    --http.addr=0.0.0.0
    --http.port={{ .Values.httpPort }}
    --http.vhosts=*
    --ws
    --metrics
    --metrics.addr=0.0.0.0
    --metrics.port={{ .Values.metricsPortRPCDaemon }}
  {{- range .Values.extraArgsRPCDaemon }}
    {{ tpl . $ }}
  {{- end }}

# -- Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplate instead.
customCommand: []

# -- Legacy way of overwriting the default command. You may prefer to change defaultCommandRPCDaemonTemplate instead.
customCommandRPCDaemon: [] # Only change this if you need to change the default command

# When p2pNodePort is enabled, your P2P port will be exposed via service type NodePort.
# This is useful if you want to expose and announce your node to the Internet.
# Limitation: You can only one have one replica when exposing via NodePort.
#             Check the chart README.md for more details
p2pNodePort:
  # -- Expose P2P port via NodePort
  enabled: false
  # -- NodePort to be used
  port: 31000
  initContainer:
    image:
      # -- Container image to fetch nodeport information
      repository: lachlanevenson/k8s-kubectl
      # -- Container tag
      tag: v1.25.4
      # -- Container pull policy
      pullPolicy: IfNotPresent
  portForwardContainer:
    image:
      # -- Container image for the port forwarder
      repository: alpine/socat
      # -- Container tag
      tag: latest
      # -- Container pull policy
      pullPolicy: IfNotPresent

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbeRPCDaemon:
  tcpSocket:
    port: http-rpc
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbeRPCDaemon:
  tcpSocket:
    port: http-rpc
  initialDelaySeconds: 10
  periodSeconds: 10

# -- P2P Port
p2pPort: 30303

# -- HTTP Port
httpPort: 8545

# -- Engine Port (Auth Port)
authPort: 8551

# -- Metrics Port
metricsPort: 6060

# -- RPC Daemon Port
metricsPortRPCDaemon: 6061

# -- Node selector for pods
nodeSelector: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 20Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

rbac:
  # -- Specifies whether RBAC resources are to be created
  create: true
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  clusterRules:
     # Required to obtain the nodes external IP
    - apiGroups: [""]
      resources:
      - "nodes"
      verbs:
      - "get"
      - "list"
      - "watch"
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  rules:
    # Required to get information about the services nodePort.
    - apiGroups: [""]
      resources:
      - "services"
      verbs:
      - "get"
      - "list"
      - "watch"

# -- Resource requests and limits for the erigon container
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- Resource requests and limits for the RPC daemon container
resourcesRPCDaemon: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 300

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables for erigon container
extraEnv: []

# -- Additional env variables for RPCDaemon container
extraEnvRPCDaemon: []

# -- Additional env variables injected via a created secret
secretEnv: {}
# MY_PASSWORD: supersecret

initChownData:
  # -- Init container to set the correct permissions to access data directories
  enabled: true
  image:
    # -- Container repository
    repository: busybox
    # -- Container tag
    tag: "1.34.0"
    # -- Container pull policy
    pullPolicy: IfNotPresent
  # -- Resource requests and limits
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /debug/metrics/prometheus
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/erigon/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/erigon/ci/default-values.yaml
================================================



================================================
FILE: charts/erigon/templates/_cmd.tpl
================================================
{{/*
# Default command
*/}}
{{- define "erigon.defaultCommand" -}}
{{- tpl .Values.defaultCommandTemplate . }}
{{- end }}


{{/*
# Default command
*/}}
{{- define "erigon.defaultCommandRPCDaemon" -}}
{{- tpl .Values.defaultCommandRPCDaemonTemplate . }}
{{- end }}



================================================
FILE: charts/erigon/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "erigon.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "erigon.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "erigon.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "erigon.labels" -}}
helm.sh/chart: {{ include "erigon.chart" . }}
{{ include "erigon.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "erigon.selectorLabels" -}}
app.kubernetes.io/name: {{ include "erigon.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "erigon.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "erigon.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{/*
Create the name of the cluster role.
It needs to be namespace prefixed to avoid naming conflicts when using the same deployment name across namespaces.
*/}}
{{- define "erigon.clusterRoleName" -}}
{{ .Release.Namespace }}-{{ include "erigon.fullname" . }}
{{- end }}

{{- define "erigon.p2pPort" -}}
{{- if .Values.p2pNodePort.enabled }}
{{- print .Values.p2pNodePort.port }}
{{- else }}
{{- print .Values.p2pPort }}
{{- end }}
{{- end -}}

{{- define "erigon.replicas" -}}
{{- if and (.Values.p2pNodePort.enabled) (gt (int .Values.replicas)  1) }}
{{- print 1 }}
{{ else }}
{{- print .Values.replicas }}
{{- end }}
{{- end -}}



================================================
FILE: charts/erigon/templates/clusterrole.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "erigon.clusterRoleName" . }}
  labels:
    {{- include "erigon.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.clusterRules | nindent 0 }}
{{- end }}



================================================
FILE: charts/erigon/templates/clusterrolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "erigon.clusterRoleName" . }}
  labels:
    {{- include "erigon.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "erigon.clusterRoleName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "erigon.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/erigon/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "erigon.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "erigon.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/erigon/templates/NOTES.txt
================================================



================================================
FILE: charts/erigon/templates/poddisruptionbudget.yaml
================================================
{{- if .Values.podDisruptionBudget }}
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ include "erigon.fullname" . }}
  labels:
    {{- include "erigon.labels" . | nindent 4 }}
spec:
{{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
{{- end }}
{{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
{{- end }}
  selector:
    matchLabels:
      {{- include "erigon.selectorLabels" . | nindent 6 }}
{{- end }}



================================================
FILE: charts/erigon/templates/role.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "erigon.serviceAccountName" . }}
  labels:
    {{- include "erigon.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.rules | nindent 0 }}
{{- end }}



================================================
FILE: charts/erigon/templates/rolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "erigon.serviceAccountName" . }}
  labels:
    {{- include "erigon.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "erigon.serviceAccountName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "erigon.serviceAccountName" . }}
{{- end }}



================================================
FILE: charts/erigon/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "erigon.fullname" . }}-env
  labels:
    {{- include "erigon.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "erigon.fullname" . }}-jwt
type: Opaque
data:
  jwt.hex: {{ .Values.jwt | b64enc }}


================================================
FILE: charts/erigon/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "erigon.fullname" . }}-headless
  labels:
    {{- include "erigon.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "erigon.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "erigon.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: {{ .Values.httpPort }}
      targetPort: http-rpc
      protocol: TCP
      name: http-rpc
    - port: {{ .Values.authPort }}
      targetPort: auth-rpc
      protocol: TCP
      name: auth-rpc     
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "erigon.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/erigon/templates/service.p2p.nodeport.yaml
================================================
{{- if .Values.p2pNodePort.enabled -}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "erigon.fullname" $ }}-p2p-0
  labels:
    {{- include "erigon.labels" $ | nindent 4 }}
    pod: {{ include "erigon.fullname" $ }}-0
    type: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p-tcp
      port: {{ include "erigon.p2pPort" $ }}
      protocol: TCP
      targetPort: p2p-tcp
      nodePort: {{ include "erigon.p2pPort" $ }}
    - name: p2p-udp
      port: {{ include "erigon.p2pPort" $ }}
      protocol: UDP
      targetPort: p2p-udp
      nodePort: {{ include "erigon.p2pPort" $ }}
  selector:
    {{- include "erigon.selectorLabels" $ | nindent 4 }}
    statefulset.kubernetes.io/pod-name: "{{ include "erigon.fullname" $ }}-0"
{{- end }}



================================================
FILE: charts/erigon/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "erigon.fullname" . }}
  labels:
    {{- include "erigon.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - port: {{ include "erigon.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "erigon.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: {{ .Values.httpPort }}
      targetPort: http-rpc
      protocol: TCP
      name: http-rpc
    - port: {{ .Values.authPort }}
      targetPort: auth-rpc
      protocol: TCP
      name: auth-rpc    
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "erigon.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/erigon/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "erigon.serviceAccountName" . }}
  labels:
    {{- include "erigon.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/erigon/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "erigon.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "erigon.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics-rpcd
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "erigon.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/erigon/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "erigon.fullname" . }}
  labels:
    {{- include "erigon.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ include "erigon.replicas" . }}
  selector:
    matchLabels:
      {{- include "erigon.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "erigon.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "erigon.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      shareProcessNamespace: true
      serviceAccountName: {{ include "erigon.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- tpl (toYaml .Values.initContainers | nindent 8) $ }}
      {{- end }}
      {{- if .Values.p2pNodePort.enabled }}
        - name: init-nodeport
          image: "{{ .Values.p2pNodePort.initContainer.image.repository }}:{{ .Values.p2pNodePort.initContainer.image.tag }}"
          imagePullPolicy: {{.Values.p2pNodePort.initContainer.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - sh
            - -c
            - >
              export EXTERNAL_PORT=$(kubectl get services -l "pod in (${POD_NAME}), type in (p2p)" -o jsonpath='{.items[0].spec.ports[0].nodePort}');
              export EXTERNAL_IP=$(kubectl get nodes "${NODE_NAME}" -o jsonpath='{.status.addresses[?(@.type=="ExternalIP")].address}');
              echo "EXTERNAL_PORT=$EXTERNAL_PORT" >  /env/init-nodeport;
              echo "EXTERNAL_IP=$EXTERNAL_IP"     >> /env/init-nodeport;
              cat /env/init-nodeport;
          volumeMounts:
            - name: env-nodeport
              mountPath: /env
      {{- end }}
      {{- if .Values.initChownData.enabled }}
        - name: init-chown-data
          image: "{{ .Values.initChownData.image.repository }}:{{ .Values.initChownData.image.tag }}"
          imagePullPolicy: {{ .Values.initChownData.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }}", "/data"]
          resources:
      {{ toYaml .Values.initChownData.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: "/data"
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
            {{- include "erigon.defaultCommand" . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            {{- if .Values.p2pNodePort.enabled }}
            - name: env-nodeport
              mountPath: /env
            {{- end }}
            - name: storage
              mountPath: "/data"
            - name: jwt
              mountPath: "/data/jwt.hex"
              subPath: jwt.hex
              readOnly: true
          ports:
            - name: p2p-tcp
              containerPort: {{ include "erigon.p2pPort" . }}
              protocol: TCP
            - name: p2p-udp
              containerPort: {{ include "erigon.p2pPort" . }}
              protocol: UDP
            - name: http-rpc
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
            - name: auth-rpc
              containerPort: {{ .Values.authPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "erigon.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
        - name: {{ .Chart.Name }}-rpcd
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommandRPCDaemon) 0 }}
            {{- toYaml .Values.customCommandRPCDaemon | nindent 12}}
          {{- else }}
            {{- include "erigon.defaultCommandRPCDaemon" . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: storage
              mountPath: "/data"
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
          ports:
            - name: http-rpc
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
            - name: metrics-rpcd
              containerPort: {{ .Values.metricsPortRPCDaemon }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbeRPCDaemon | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbeRPCDaemon | nindent 12 }}
          resources:
            {{- toYaml (.Values.resourcesRPCDaemon | default .Values.resources) | nindent 12 }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "erigon.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnvRPCDaemon }}
            {{- toYaml .Values.extraEnvRPCDaemon | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ tpl (toYaml .Values.extraContainers | nindent 8) $ }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: jwt
          secret:
            secretName: {{ include "erigon.fullname" . }}-jwt
      {{- if .Values.p2pNodePort.enabled }}
        - name: env-nodeport
          emptyDir: {}
      {{- end }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/erigon/templates/tests/test-connection.yaml
================================================

apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "erigon.fullname" . }}-test-connection"
  labels:
    {{- include "erigon.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
        - --location
        - --request
        - POST
        - '{{ include "erigon.fullname" . }}:{{ .Values.httpPort }}/'
        - --header
        - 'Content-Type: application/json'
        - --data-raw
        - '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":83}'
  restartPolicy: Never



================================================
FILE: charts/erpc/README.md
================================================

# erpc

![Version: 0.0.3](https://img.shields.io/badge/Version-0.0.3-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

eRPC is a fault-tolerant EVM RPC proxy and re-org aware permanent caching solution. It is built with read-heavy use-cases in mind such as data indexing and high-load frontend usage.

**Homepage:** <https://github.com/erpc/erpc>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| config | string | See `values.yaml` | Config file |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customCommand | list | `[]` | Command replacement for the erpc container |
| extraArgs | list | `[]` | Extra args for the erpc container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `4000` |  |
| image.pullPolicy | string | `"IfNotPresent"` | erpc container pull policy |
| image.repository | string | `"ghcr.io/erpc/erpc"` | erpc container image repository |
| image.tag | string | `"0.0.26"` | erpc container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| metricsPort | int | `4001` |  |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"1Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{"ALCHEMY_API_KEY":"XXXXXXXXXX"}` | Secret env variables injected via a created secret These env variables can be used to populate the erpc config file with sensitive data such as RPC API keys |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |

# Getting Started

Update the `config` field to configure the various upstreams that you want to proxy with eRPC.

The `secretEnv` field can be used to securely add API keys to your configuration.

For more information, check out the [eRPC repository](https://github.com/erpc/erpc).


================================================
FILE: charts/erpc/Chart.yaml
================================================
apiVersion: v2
name: erpc
description: eRPC is a fault-tolerant EVM RPC proxy and re-org aware permanent caching solution. It is built with read-heavy use-cases in mind such as data indexing and high-load frontend usage.
home: https://github.com/erpc/erpc
type: application
version: 0.0.3
maintainers:
  - name: barnabasbusa
    email: busa.barnabas@gmail.com
  - name: pk910
    email: pk910@pk910.de



================================================
FILE: charts/erpc/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Getting Started

Update the `config` field to configure the various upstreams that you want to proxy with eRPC.

The `secretEnv` field can be used to securely add API keys to your configuration.

For more information, check out the [eRPC repository](https://github.com/erpc/erpc).


================================================
FILE: charts/erpc/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- erpc container image repository
  repository: ghcr.io/erpc/erpc
  # -- erpc container image tag
  tag: 0.0.26
  # -- erpc container pull policy
  pullPolicy: IfNotPresent

# -- Config file
# @default -- See `values.yaml`
config: |
    logLevel: debug

    database:
      evmJsonRpcCache:
        driver: memory

    server:
      httpHostV4: "0.0.0.0"
      listenV6: true
      httpHostV6: "[::]"
      httpPort: {{ .Values.httpPort }}

    metrics:
      enabled: true
      hostV4: "0.0.0.0"
      hostV6: "[::]"
      port: {{ .Values.metricsPort }}

    projects:
      - id: main
        upstreams:
          - endpoint: alchemy://${ALCHEMY_API_KEY}

# -- Secret env variables injected via a created secret
# These env variables can be used to populate the erpc config file with sensitive data such as RPC API keys
secretEnv:
  ALCHEMY_API_KEY: XXXXXXXXXX

# - HTTP port for erpc
httpPort: 4000

# - Metrics port for erpc
metricsPort: 4001

# -- Extra args for the erpc container
extraArgs: []

# -- Command replacement for the erpc container
customCommand: []

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  httpGet:
    path: /healthcheck
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  httpGet:
    path: /healthcheck
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 1Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/erpc/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/erpc/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "erpc.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "erpc.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "erpc.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "erpc.labels" -}}
helm.sh/chart: {{ include "erpc.chart" . }}
{{ include "erpc.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "erpc.selectorLabels" -}}
app.kubernetes.io/name: {{ include "erpc.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "erpc.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "erpc.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{/*
Get the HTTP port from values or default to 4000
*/}}
{{- define "erpc.http" -}}
{{- default 4000 .Values.httpPort }}
{{- end }}



================================================
FILE: charts/erpc/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "erpc.fullname" . }}-config
  labels:
    {{- include "erpc.labels" . | nindent 4 }}
data:
  erpc.yaml: |
    {{- tpl .Values.config . | nindent 4 }}


================================================
FILE: charts/erpc/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "erpc.fullname" . }}
  labels:
    {{- include "erpc.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "erpc.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "erpc.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "erpc.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
              - ./erpc-server
              - /erpc.yaml
          {{- end }}
          {{- if gt (len .Values.extraArgs) 0 }}
          args:
            {{- toYaml .Values.extraArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          envFrom:
          - secretRef:
              name: {{ include "erpc.fullname" . }}-envs
          volumeMounts:
            - name: config
              mountPath: /erpc.yaml
              subPath: erpc.yaml
              readOnly: true
            {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
              protocol: TCP
            {{- if .Values.extraPodPorts }}
            {{ toYaml .Values.extraPodPorts | nindent 12 }}
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
        {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
        {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "erpc.fullname" . }}-config



================================================
FILE: charts/erpc/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "erpc.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "erpc.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/erpc/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "erpc.fullname" . }}-envs
  labels:
    {{- include "erpc.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/erpc/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "erpc.fullname" . }}
  labels:
    {{- include "erpc.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.httpPort }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "erpc.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/erpc/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "erpc.serviceAccountName" . }}
  labels:
    {{- include "erpc.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/erpc/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "erpc.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "erpc.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{.Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "erpc.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/erpc/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "erpc.fullname" . }}-test-connection"
  labels:
    {{- include "erpc.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['{{ include "erpc.fullname" . }}:{{ .Values.httpPort }}/healthcheck']
  restartPolicy: Never



================================================
FILE: charts/eth-faucet/README.md
================================================

# eth-faucet

![Version: 0.1.1](https://img.shields.io/badge/Version-0.1.1-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Ether faucet server built with Go and Svelte.

**Homepage:** <https://github.com/chainflag/eth-faucet>

## Example Configuration

[Upstream docs](https://github.com/chainflag/eth-faucet#configuration)

```yaml
secretEnv:
  PRIVATE_KEY: "your_private_key"

extraEnv:
  - name: WEB3_PROVIDER
    value: "http://your-rpc-provider:8545"

## Optional flags
extraArgs:
  - -faucet.amount=32.05
```

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the eth-faucet container |
| customCommand | list | `[]` | Command replacement for the eth-faucet container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[{"name":"WEB3_PROVIDER","value":"http://rpc-provider:8545"}]` | Additional env variables |
| extraPodPorts | list | `[]` | Extra Pod ports |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `8080` | Ports |
| image.pullPolicy | string | `"IfNotPresent"` | eth-faucet container pull policy |
| image.repository | string | `"chainflag/eth-faucet"` | eth-faucet container image repository |
| image.tag | string | `"latest"` | eth-faucet container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{"PRIVATE_KEY":"52f81d18fd7c51ec151a72b7dfd13cddc39e01ef75b724ce0092c34962e59d5b"}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/eth-faucet/Chart.yaml
================================================
apiVersion: v2
name: eth-faucet
description: Ether faucet server built with Go and Svelte.
home: https://github.com/chainflag/eth-faucet
type: application
version: 0.1.1
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org



================================================
FILE: charts/eth-faucet/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}


{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}


## Example Configuration

[Upstream docs](https://github.com/chainflag/eth-faucet#configuration)

```yaml
secretEnv:
  PRIVATE_KEY: "your_private_key"

extraEnv:
  - name: WEB3_PROVIDER
    value: "http://your-rpc-provider:8545"

## Optional flags
extraArgs:
  - -faucet.amount=32.05
```

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/eth-faucet/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- eth-faucet container image repository
  repository: chainflag/eth-faucet
  # -- eth-faucet container image tag
  tag: latest
  # -- eth-faucet container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv:
  PRIVATE_KEY: "52f81d18fd7c51ec151a72b7dfd13cddc39e01ef75b724ce0092c34962e59d5b"

# -- Ports
httpPort: 8080

# -- Command arguments
args: []

# -- Additional env variables
extraEnv:
  - name: WEB3_PROVIDER
    value: "http://rpc-provider:8545"

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Custom args for the eth-faucet container
customArgs: []

# -- Command replacement for the eth-faucet container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Extra Pod ports
extraPodPorts: []

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []



================================================
FILE: charts/eth-faucet/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/eth-faucet/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "eth-faucet.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "eth-faucet.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "eth-faucet.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "eth-faucet.labels" -}}
helm.sh/chart: {{ include "eth-faucet.chart" . }}
{{ include "eth-faucet.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "eth-faucet.selectorLabels" -}}
app.kubernetes.io/name: {{ include "eth-faucet.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "eth-faucet.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "eth-faucet.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "eth-faucet.httpPort" -}}
{{ .Values.httpPort | default "8080" }}
{{- end }}



================================================
FILE: charts/eth-faucet/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "eth-faucet.fullname" . }}
  labels:
    {{- include "eth-faucet.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "eth-faucet.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "eth-faucet.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "eth-faucet.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
            - /app/eth-faucet
            - -httpport={{ include "eth-faucet.httpPort" . }}
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
        ports:
          - name: http
            containerPort: {{ include "eth-faucet.httpPort" . }}
            protocol: TCP
          {{- if .Values.extraPodPorts }}
            {{ toYaml .Values.extraPodPorts | nindent 10 }}
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "eth-faucet.fullname" $ }}-env
                  key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}



================================================
FILE: charts/eth-faucet/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "eth-faucet.fullname" . -}}
{{- $svcPort := include "eth-faucet.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "eth-faucet.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/eth-faucet/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "eth-faucet.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "eth-faucet.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "eth-faucet.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "eth-faucet.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "eth-faucet.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/eth-faucet/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "eth-faucet.fullname" . }}-env
  labels:
    {{- include "eth-faucet.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/eth-faucet/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "eth-faucet.fullname" . }}
  labels:
    {{- include "eth-faucet.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "eth-faucet.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "eth-faucet.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/eth-faucet/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "eth-faucet.serviceAccountName" . }}
  labels:
    {{- include "eth-faucet.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/eth2-fork-mon/README.md
================================================

# eth2-fork-mon

![Version: 0.1.3](https://img.shields.io/badge/Version-0.1.3-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Simple client/server to track the (real-time) status of a (configurable) set of eth2 beacon nodes.

**Homepage:** <https://github.com/ralexstokes/eth2-fork-mon>

## Source Code

* <https://github.com/ralexstokes/eth2-fork-mon>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| config | object | See `values.yaml` | Config file |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the eth2-fork-mon container |
| customCommand | list | `[]` | Command replacement for the eth2-fork-mon container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | eth2-fork-mon container pull policy |
| image.repository | string | `"ralexstokes/eth2-fork-mon"` | eth2-fork-mon container image repository |
| image.tag | string | `"latest"` | eth2-fork-mon container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |

# Examples

## Setting the configuration file

```yaml
config:
  endpoints:
    - addr: http://beacon-node:4000
      eth1: ""
  http_timeout_milliseconds: 0
  eth2:
    network: mainnet
    seconds_per_slot: 12
    genesis_time: 1606824023
    slots_per_epoch: 32
```



================================================
FILE: charts/eth2-fork-mon/Chart.yaml
================================================
apiVersion: v2
name: eth2-fork-mon
description: >
  Simple client/server to track the (real-time) status of a (configurable) set of eth2 beacon nodes.
home: https://github.com/ralexstokes/eth2-fork-mon
icon: https://ethereum.org/static/c48a5f760c34dfadcf05a208dab137cc/31987/eth-diamond-rainbow.png
sources:
  - https://github.com/ralexstokes/eth2-fork-mon
type: application
version: 0.1.3
maintainers:
  - name: skylenet
    email: rafael@skyle.net



================================================
FILE: charts/eth2-fork-mon/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Setting the configuration file

```yaml
config:
  endpoints:
    - addr: http://beacon-node:4000
      eth1: ""
  http_timeout_milliseconds: 0
  eth2:
    network: mainnet
    seconds_per_slot: 12
    genesis_time: 1606824023
    slots_per_epoch: 32
```



================================================
FILE: charts/eth2-fork-mon/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- eth2-fork-mon container image repository
  repository: ralexstokes/eth2-fork-mon
  # -- eth2-fork-mon container image tag
  tag: latest
  # -- eth2-fork-mon container pull policy
  pullPolicy: IfNotPresent

# -- Custom args for the eth2-fork-mon container
customArgs: []
  #- -config-file=/somewhere-else.yaml
  #- -output-dir=public

# -- Command replacement for the eth2-fork-mon container
customCommand: [] # Only change this if you need to change the default command

# -- Config file
# @default -- See `values.yaml`
config:
  endpoints:
    - addr: http://beacon-node:4000
      eth1: ""
  http_timeout_milliseconds: 0
  eth2:
    network: mainnet
    seconds_per_slot: 12
    genesis_time: 1606824023
    slots_per_epoch: 32

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

# -- Additional env variables injected via a created secret
secretEnv: {}



================================================
FILE: charts/eth2-fork-mon/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/eth2-fork-mon/ci/ct-values.yaml
================================================
config:
  endpoints:
    - addr: http://beacon-node-there:4000
      eth1: ""
  http_timeout_milliseconds: 0
  eth2:
    network: mainnet
    seconds_per_slot: 12
    genesis_time: 1606824023
    slots_per_epoch: 32



================================================
FILE: charts/eth2-fork-mon/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "eth2-fork-mon.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "eth2-fork-mon.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "eth2-fork-mon.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "eth2-fork-mon.labels" -}}
helm.sh/chart: {{ include "eth2-fork-mon.chart" . }}
{{ include "eth2-fork-mon.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "eth2-fork-mon.selectorLabels" -}}
app.kubernetes.io/name: {{ include "eth2-fork-mon.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "eth2-fork-mon.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "eth2-fork-mon.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "eth2-fork-mon.httpPort" -}}
{{- printf "8080" -}}
{{- end -}}



================================================
FILE: charts/eth2-fork-mon/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "eth2-fork-mon.fullname" . }}
  labels:
    {{- include "eth2-fork-mon.labels" . | nindent 4 }}
data:
  config.yaml: |
    {{- toYaml .Values.config | nindent 4}}



================================================
FILE: charts/eth2-fork-mon/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "eth2-fork-mon.fullname" . -}}
{{- $svcPort := include "eth2-fork-mon.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "eth2-fork-mon.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/eth2-fork-mon/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "eth2-fork-mon.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "eth2-fork-mon.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "eth2-fork-mon.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "eth2-fork-mon.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "eth2-fork-mon.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/eth2-fork-mon/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "eth2-fork-mon.fullname" . }}-env
  labels:
    {{- include "eth2-fork-mon.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/eth2-fork-mon/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "eth2-fork-mon.fullname" . }}-headless
  labels:
    {{- include "eth2-fork-mon.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "eth2-fork-mon.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "eth2-fork-mon.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/eth2-fork-mon/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "eth2-fork-mon.fullname" . }}
  labels:
    {{- include "eth2-fork-mon.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "eth2-fork-mon.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "eth2-fork-mon.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/eth2-fork-mon/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "eth2-fork-mon.serviceAccountName" . }}
  labels:
    {{- include "eth2-fork-mon.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/eth2-fork-mon/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "eth2-fork-mon.fullname" . }}
  labels:
    {{- include "eth2-fork-mon.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "eth2-fork-mon.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "eth2-fork-mon.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "eth2-fork-mon.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "eth2-fork-mon.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if gt (len .Values.customCommand) 0 }}
          command:
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: config
              mountPath: "/config.yaml"
              subPath: config.yaml
              readOnly: true
          ports:
            - name: http
              containerPort: {{ include "eth2-fork-mon.httpPort" . }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "eth2-fork-mon.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "eth2-fork-mon.fullname" . }}



================================================
FILE: charts/eth2-fork-mon/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "eth2-fork-mon.fullname" . }}-test-connection"
  labels:
    {{- include "eth2-fork-mon.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - --location
       - --request
       - GET
       - '{{ include "eth2-fork-mon.fullname" . }}:{{ include "eth2-fork-mon.httpPort" . }}/'
  restartPolicy: Never



================================================
FILE: charts/ethereum-address-metrics-exporter/README.md
================================================

# ethereum-address-metrics-exporter

![Version: 0.1.5](https://img.shields.io/badge/Version-0.1.5-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

A prometheus exporter for Ethereum externally owned account and contract addresses

**Homepage:** <https://github.com/ethpandaops/ethereum-address-metrics-exporter>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| config.execution.url | string | `"http://localhost:8545"` |  |
| config.global.logging | string | `"info"` |  |
| config.global.metricsAddr | string | `":9090"` |  |
| config.global.namespace | string | `"eth_address"` |  |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the ethereum-address-metrics-exporter container |
| customCommand | list | `[]` | Command replacement for the ethereum-address-metrics-exporter container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | ethereum-address-metrics-exporter container pull policy |
| image.repository | string | `"ethpandaops/ethereum-address-metrics-exporter"` | ethereum-address-metrics-exporter container image repository |
| image.tag | string | `"latest"` | ethereum-address-metrics-exporter container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/ethereum-address-metrics-exporter/Chart.yaml
================================================
apiVersion: v2
name: ethereum-address-metrics-exporter
description: A prometheus exporter for Ethereum externally owned account and contract addresses
home: https://github.com/ethpandaops/ethereum-address-metrics-exporter
type: application
version: 0.1.5
maintainers:
  - name: savid
    email: andrew.davis@ethereum.org



================================================
FILE: charts/ethereum-address-metrics-exporter/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/ethereum-address-metrics-exporter/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- ethereum-address-metrics-exporter container image repository
  repository: ethpandaops/ethereum-address-metrics-exporter
  # -- ethereum-address-metrics-exporter container image tag
  tag: latest
  # -- ethereum-address-metrics-exporter container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

config:
  global:
    logging: "info" # panic,fatal,warm,info,debug,trace
    metricsAddr: ":9090"
    namespace: eth_address
  execution:
    url: "http://localhost:8545"

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Custom args for the ethereum-address-metrics-exporter container
customArgs: []

# -- Command replacement for the ethereum-address-metrics-exporter container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/ethereum-address-metrics-exporter/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/ethereum-address-metrics-exporter/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "ethereum-address-metrics-exporter.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "ethereum-address-metrics-exporter.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "ethereum-address-metrics-exporter.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "ethereum-address-metrics-exporter.labels" -}}
helm.sh/chart: {{ include "ethereum-address-metrics-exporter.chart" . }}
{{ include "ethereum-address-metrics-exporter.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "ethereum-address-metrics-exporter.selectorLabels" -}}
app.kubernetes.io/name: {{ include "ethereum-address-metrics-exporter.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "ethereum-address-metrics-exporter.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "ethereum-address-metrics-exporter.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "ethereum-address-metrics-exporter.http" -}}
{{ (split ":" .Values.config.global.metricsAddr)._1 | default ":9090" }}
{{- end -}}



================================================
FILE: charts/ethereum-address-metrics-exporter/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "ethereum-address-metrics-exporter.fullname" . }}
  labels:
    {{- include "ethereum-address-metrics-exporter.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{ toYaml .Values.config | nindent 4 }}



================================================
FILE: charts/ethereum-address-metrics-exporter/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ethereum-address-metrics-exporter.fullname" . }}
  labels:
    {{- include "ethereum-address-metrics-exporter.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "ethereum-address-metrics-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ethereum-address-metrics-exporter.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "ethereum-address-metrics-exporter.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/ethereum-address-metrics-exporter"
          - --config=/config.yaml
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12}}
          {{- end }}
        ports:
          - name: http
            containerPort: {{ include "ethereum-address-metrics-exporter.http" . }}
            protocol: TCP
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "ethereum-address-metrics-exporter.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "ethereum-address-metrics-exporter.fullname" . }}



================================================
FILE: charts/ethereum-address-metrics-exporter/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "ethereum-address-metrics-exporter.fullname" . -}}
{{- $svcPort := include "ethereum-address-metrics-exporter.http" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "ethereum-address-metrics-exporter.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/ethereum-address-metrics-exporter/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "ethereum-address-metrics-exporter.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "ethereum-address-metrics-exporter.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "ethereum-address-metrics-exporter.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "ethereum-address-metrics-exporter.metricsPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "ethereum-address-metrics-exporter.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:9090 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 9090:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/ethereum-address-metrics-exporter/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ethereum-address-metrics-exporter.fullname" . }}-env
  labels:
    {{- include "ethereum-address-metrics-exporter.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/ethereum-address-metrics-exporter/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "ethereum-address-metrics-exporter.fullname" . }}
  labels:
    {{- include "ethereum-address-metrics-exporter.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "ethereum-address-metrics-exporter.http" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "ethereum-address-metrics-exporter.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/ethereum-address-metrics-exporter/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ethereum-address-metrics-exporter.serviceAccountName" . }}
  labels:
    {{- include "ethereum-address-metrics-exporter.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/ethereum-address-metrics-exporter/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "ethereum-address-metrics-exporter.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "ethereum-address-metrics-exporter.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: http
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "ethereum-address-metrics-exporter.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/ethereum-metrics-exporter/README.md
================================================

# ethereum-metrics-exporter

![Version: 0.2.0](https://img.shields.io/badge/Version-0.2.0-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

A Prometheus metrics exporter for Ethereum consensus & execution nodes

**Homepage:** <https://github.com/samcm/ethereum-metrics-exporter>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| config.consensus.enabled | bool | `true` |  |
| config.consensus.name | string | `"consensus-client"` |  |
| config.consensus.url | string | `"http://localhost:5053"` |  |
| config.execution.enabled | bool | `true` |  |
| config.execution.modules[0] | string | `"eth"` |  |
| config.execution.modules[1] | string | `"net"` |  |
| config.execution.modules[2] | string | `"web3"` |  |
| config.execution.modules[3] | string | `"txpool"` |  |
| config.execution.name | string | `"execution-client"` |  |
| config.execution.url | string | `"http://localhost:8545"` |  |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the ethereum-metrics-exporter container |
| customCommand | list | `[]` | Command replacement for the ethereum-metrics-exporter container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | ethereum-metrics-exporter container pull policy |
| image.repository | string | `"samcm/ethereum-metrics-exporter"` | ethereum-metrics-exporter container image repository |
| image.tag | string | `"latest"` | ethereum-metrics-exporter container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"30s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"15s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/ethereum-metrics-exporter/Chart.yaml
================================================
apiVersion: v2
name: ethereum-metrics-exporter
description: A Prometheus metrics exporter for Ethereum consensus & execution nodes
home: https://github.com/samcm/ethereum-metrics-exporter
type: application
version: 0.2.0
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org



================================================
FILE: charts/ethereum-metrics-exporter/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/ethereum-metrics-exporter/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- ethereum-metrics-exporter container image repository
  repository: samcm/ethereum-metrics-exporter
  # -- ethereum-metrics-exporter container image tag
  tag: latest
  # -- ethereum-metrics-exporter container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

config:
  consensus:
    enabled: true
    url: "http://localhost:5053"
    name: "consensus-client"
  execution:
    enabled: true
    url: "http://localhost:8545"
    name: "execution-client"
    modules:
      - "eth"
      - "net"
      - "web3"
      - "txpool"

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Custom args for the ethereum-metrics-exporter container
customArgs: []

# -- Command replacement for the ethereum-metrics-exporter container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 30s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 15s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/ethereum-metrics-exporter/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/ethereum-metrics-exporter/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "ethereum-metrics-exporter.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "ethereum-metrics-exporter.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "ethereum-metrics-exporter.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "ethereum-metrics-exporter.labels" -}}
helm.sh/chart: {{ include "ethereum-metrics-exporter.chart" . }}
{{ include "ethereum-metrics-exporter.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "ethereum-metrics-exporter.selectorLabels" -}}
app.kubernetes.io/name: {{ include "ethereum-metrics-exporter.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "ethereum-metrics-exporter.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "ethereum-metrics-exporter.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "ethereum-metrics-exporter.httpPort" -}}
{{- printf "9090" -}}
{{- end -}}



================================================
FILE: charts/ethereum-metrics-exporter/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "ethereum-metrics-exporter.fullname" . }}
  labels:
    {{- include "ethereum-metrics-exporter.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{ tpl (toYaml .Values.config | nindent 4) $ }}



================================================
FILE: charts/ethereum-metrics-exporter/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ethereum-metrics-exporter.fullname" . }}
  labels:
    {{- include "ethereum-metrics-exporter.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "ethereum-metrics-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ethereum-metrics-exporter.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "ethereum-metrics-exporter.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/ethereum-metrics-exporter"
          - --config=/config.yaml
          - --metrics-port={{ include "ethereum-metrics-exporter.httpPort" . }}
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
        - name: config
          mountPath: "/config.yaml"
          subPath: config.yaml
          readOnly: true
        {{- if .Values.extraVolumeMounts }}
          {{ toYaml .Values.extraVolumeMounts | nindent 8}}
        {{- end }}
        ports:
          - name: http
            containerPort: {{ include "ethereum-metrics-exporter.httpPort" . }}
            protocol: TCP
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "ethereum-metrics-exporter.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 6}}
      {{- end }}
      - name: config
        configMap:
          name: {{ include "ethereum-metrics-exporter.fullname" . }}



================================================
FILE: charts/ethereum-metrics-exporter/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "ethereum-metrics-exporter.fullname" . -}}
{{- $svcPort := include "ethereum-metrics-exporter.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "ethereum-metrics-exporter.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/ethereum-metrics-exporter/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "ethereum-metrics-exporter.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "ethereum-metrics-exporter.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "ethereum-metrics-exporter.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "ethereum-metrics-exporter.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "ethereum-metrics-exporter.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/ethereum-metrics-exporter/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ethereum-metrics-exporter.fullname" . }}-env
  labels:
    {{- include "ethereum-metrics-exporter.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/ethereum-metrics-exporter/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "ethereum-metrics-exporter.fullname" . }}
  labels:
    {{- include "ethereum-metrics-exporter.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "ethereum-metrics-exporter.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "ethereum-metrics-exporter.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/ethereum-metrics-exporter/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ethereum-metrics-exporter.serviceAccountName" . }}
  labels:
    {{- include "ethereum-metrics-exporter.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/ethereum-metrics-exporter/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "ethereum-metrics-exporter.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "ethereum-metrics-exporter.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: http
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "ethereum-metrics-exporter.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/ethereum-node/README.md
================================================

# ethereum-node

![Version: 0.1.0](https://img.shields.io/badge/Version-0.1.0-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

This chart acts as an umbrella chart and allows to run a ethereum execution and consensus layer client. It's also able to deploy optional monitoring applications.

**Homepage:** <https://ethereum.org>

## Source Code

* <https://github.com/ethpandaops/ethereum-helm-charts>

## Subcharts
| Repository | Name | Version |
|------------|------|---------|
| https://ethpandaops.github.io/ethereum-helm-charts | besu | 1.0.7 |
| https://ethpandaops.github.io/ethereum-helm-charts | erigon | 1.0.11 |
| https://ethpandaops.github.io/ethereum-helm-charts | ethereum-metrics-exporter | 0.2.0 |
| https://ethpandaops.github.io/ethereum-helm-charts | ethereumjs | 0.0.9 |
| https://ethpandaops.github.io/ethereum-helm-charts | geth | 1.0.8 |
| https://ethpandaops.github.io/ethereum-helm-charts | grandine | 0.1.2 |
| https://ethpandaops.github.io/ethereum-helm-charts | lighthouse | 1.1.4 |
| https://ethpandaops.github.io/ethereum-helm-charts | lodestar | 1.1.3 |
| https://ethpandaops.github.io/ethereum-helm-charts | nethermind | 1.0.13 |
| https://ethpandaops.github.io/ethereum-helm-charts | nimbus | 1.1.3 |
| https://ethpandaops.github.io/ethereum-helm-charts | prysm | 1.1.4 |
| https://ethpandaops.github.io/ethereum-helm-charts | reth | 0.0.14 |
| https://ethpandaops.github.io/ethereum-helm-charts | teku | 1.1.3 |
| https://ethpandaops.github.io/ethereum-helm-charts | tracoor-agent | 0.0.1 |
| https://ethpandaops.github.io/ethereum-helm-charts | xatu-sentry | 0.0.8 |

# Details

Ideally you should have a look at the default [values.yaml](values.yaml) to get a better understanding on how this chart works.

### Pre-defined networks

The following networks are built into the chart and can be configured by just setting the `global.main.network` variable:

- mainnet
- sepolia
- holesky

### Consensus layer checkpoint sync

The chart also has pre-defined checkpoint sync endpoints for each one of the built in networks. By default, the chart will be using these. You can disable this by setting `global.checkpointSync` to `false`.

```yaml
global:
  checkpointSync:
    enabled: true
    addresses:
      mainnet: https://mainnet-checkpoint-sync.attestant.io
      sepolia: https://checkpoint-sync.sepolia.ethpandaops.io
      holesky: https://checkpoint-sync.holesky.ethpandaops.io
```

### Choosing the execution and consensus layer software

For the consensus layer node, you can choose between lighthouse, lodestar, teku, prysm or lighthouse. To enable one of them, you'll need to set the clients `enabled` var to `true`. For example:

```yaml
lighthouse:
  enabled: true
```

For the execution layer node you can choose between besu, ,erigon, geth or nethermind. To enable one of them you follow the same approach as before:

```yaml
geth:
  enabled: true
```

*Note:* You should not enable multiple CL/EL nodes. The chart only works if you enable 1 EL and 1 CL node.

# Complete example

Run lighthouse/geth combo on the Sepolia network with metrics-exporter enabled:

```yaml
##
## $ helm install holesky-lighthouse-geth-0 ethereum-helm-charts/ethereum-node -f values.yaml
##

global:
  main:
    network: holesky
  checkpointSync:
    enabled: true

# Client pairs
geth:
  enabled: true
lighthouse:
  enabled: true

# Monitoring
ethereum-metrics-exporter:
  enabled: true
```



================================================
FILE: charts/ethereum-node/Chart.lock
================================================
dependencies:
- name: besu
  repository: https://ethpandaops.github.io/ethereum-helm-charts
  version: 1.0.7
- name: erigon
  repository: https://ethpandaops.github.io/ethereum-helm-charts
  version: 1.0.11
- name: ethereumjs
  repository: https://ethpandaops.github.io/ethereum-helm-charts
  version: 0.0.9
- name: geth
  repository: https://ethpandaops.github.io/ethereum-helm-charts
  version: 1.0.8
- name: nethermind
  repository: https://ethpandaops.github.io/ethereum-helm-charts
  version: 1.0.13
- name: reth
  repository: https://ethpandaops.github.io/ethereum-helm-charts
  version: 0.0.14
- name: grandine
  repository: https://ethpandaops.github.io/ethereum-helm-charts
  version: 0.1.2
- name: lighthouse
  repository: https://ethpandaops.github.io/ethereum-helm-charts
  version: 1.1.4
- name: lodestar
  repository: https://ethpandaops.github.io/ethereum-helm-charts
  version: 1.1.3
- name: nimbus
  repository: https://ethpandaops.github.io/ethereum-helm-charts
  version: 1.1.3
- name: prysm
  repository: https://ethpandaops.github.io/ethereum-helm-charts
  version: 1.1.4
- name: teku
  repository: https://ethpandaops.github.io/ethereum-helm-charts
  version: 1.1.3
- name: ethereum-metrics-exporter
  repository: https://ethpandaops.github.io/ethereum-helm-charts
  version: 0.2.0
- name: xatu-sentry
  repository: https://ethpandaops.github.io/ethereum-helm-charts
  version: 0.0.8
- name: tracoor-agent
  repository: https://ethpandaops.github.io/ethereum-helm-charts
  version: 0.0.1
digest: sha256:046a60e0ae6e89c716cfe03792f7c50ea36acd15ba46a3c54af43628fce849d2
generated: "2025-05-13T13:57:23.879552+10:00"



================================================
FILE: charts/ethereum-node/Chart.yaml
================================================
apiVersion: v2
name: ethereum-node
description: >
  This chart acts as an umbrella chart and allows to run a ethereum execution and
  consensus layer client. It's also able to deploy optional monitoring applications.
home: https://ethereum.org
icon: https://avatars.githubusercontent.com/u/6250754?s=200&v=4
sources:
  - https://github.com/ethpandaops/ethereum-helm-charts
type: application
version: 0.1.0
maintainers:
  - name: skylenet
    email: rafael@skyle.net

dependencies:
- name: besu
  version: "1.0.7"
  repository: "https://ethpandaops.github.io/ethereum-helm-charts"
  condition: besu.enabled
- name: erigon
  version: "1.0.11"
  repository: "https://ethpandaops.github.io/ethereum-helm-charts"
  condition: erigon.enabled
- name: ethereumjs
  version: "0.0.9"
  repository: "https://ethpandaops.github.io/ethereum-helm-charts"
  condition: ethereumjs.enabled
- name: geth
  version: "1.0.8"
  repository: "https://ethpandaops.github.io/ethereum-helm-charts"
  condition: geth.enabled
- name: nethermind
  version: "1.0.13"
  repository: "https://ethpandaops.github.io/ethereum-helm-charts"
  condition: nethermind.enabled
- name: reth
  version: "0.0.14"
  repository: "https://ethpandaops.github.io/ethereum-helm-charts"
  condition: reth.enabled

- name: grandine
  version: "0.1.2"
  repository: "https://ethpandaops.github.io/ethereum-helm-charts"
  condition: grandine.enabled
- name: lighthouse
  version: "1.1.4"
  repository: "https://ethpandaops.github.io/ethereum-helm-charts"
  condition: lighthouse.enabled
- name: lodestar
  version: "1.1.3"
  repository: "https://ethpandaops.github.io/ethereum-helm-charts"
  condition: lodestar.enabled
- name: nimbus
  version: "1.1.3"
  repository: "https://ethpandaops.github.io/ethereum-helm-charts"
  condition: nimbus.enabled
- name: prysm
  version: "1.1.4"
  repository: "https://ethpandaops.github.io/ethereum-helm-charts"
  condition: prysm.enabled
- name: teku
  version: "1.1.3"
  repository: "https://ethpandaops.github.io/ethereum-helm-charts"
  condition: teku.enabled

- name: ethereum-metrics-exporter
  version: "0.2.0"
  repository: "https://ethpandaops.github.io/ethereum-helm-charts"
  condition: ethereum-metrics-exporter.enabled
- name: xatu-sentry
  version: "0.0.8"
  repository: "https://ethpandaops.github.io/ethereum-helm-charts"
  condition: xatu-sentry.enabled
- name: tracoor-agent
  version: "0.0.1"
  repository: "https://ethpandaops.github.io/ethereum-helm-charts"
  condition: tracoor-agent.enabled



================================================
FILE: charts/ethereum-node/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

## Subcharts
{{ template "chart.requirementsTable" . }}

# Details

Ideally you should have a look at the default [values.yaml](values.yaml) to get a better understanding on how this chart works.

### Pre-defined networks

The following networks are built into the chart and can be configured by just setting the `global.main.network` variable:

- mainnet
- sepolia
- holesky

### Consensus layer checkpoint sync

The chart also has pre-defined checkpoint sync endpoints for each one of the built in networks. By default, the chart will be using these. You can disable this by setting `global.checkpointSync` to `false`.

```yaml
global:
  checkpointSync:
    enabled: true
    addresses:
      mainnet: https://mainnet-checkpoint-sync.attestant.io
      sepolia: https://checkpoint-sync.sepolia.ethpandaops.io
      holesky: https://checkpoint-sync.holesky.ethpandaops.io
```

### Choosing the execution and consensus layer software

For the consensus layer node, you can choose between lighthouse, lodestar, teku, prysm or lighthouse. To enable one of them, you'll need to set the clients `enabled` var to `true`. For example:

```yaml
lighthouse:
  enabled: true
```

For the execution layer node you can choose between besu, ,erigon, geth or nethermind. To enable one of them you follow the same approach as before:

```yaml
geth:
  enabled: true
```

*Note:* You should not enable multiple CL/EL nodes. The chart only works if you enable 1 EL and 1 CL node.

# Complete example

Run lighthouse/geth combo on the Sepolia network with metrics-exporter enabled:

```yaml
##
## $ helm install holesky-lighthouse-geth-0 ethereum-helm-charts/ethereum-node -f values.yaml
##

global:
  main:
    network: holesky
  checkpointSync:
    enabled: true

# Client pairs
geth:
  enabled: true
lighthouse:
  enabled: true

# Monitoring
ethereum-metrics-exporter:
  enabled: true
```



================================================
FILE: charts/ethereum-node/values.yaml
================================================
global:
  main:
    network: mainnet
    engineEndpoint: http://{{ .Release.Name }}-execution:8551
    rpcEndpoint: http://{{ .Release.Name }}-execution:8545
    wsEndpoint: ws://{{ .Release.Name }}-execution:8546
    beaconEndpoint: http://{{ .Release.Name }}-beacon:5052
  checkpointSync:
    enabled: true
    addresses:
      mainnet: https://mainnet-checkpoint-sync.attestant.io
      sepolia: https://checkpoint-sync.sepolia.ethpandaops.io
      holesky: https://checkpoint-sync.holesky.ethpandaops.io
      hoodi: https://checkpoint-sync.hoodi.ethpandaops.io
  clientArgs:
    networks:
      mainnet:
        execution:
          besu: []
          erigon: []
          ethereumjs: []
          geth: []
          nethermind: []
          reth: []
        consensus:
          grandine: []
          lighthouse: []
          lodestar: []
          nimbus: []
          prysm: []
          teku: []
      sepolia:
        execution:
          besu:
            - --network=sepolia
          erigon:
            - --chain=sepolia
          ethereumjs:
            - --network=sepolia
          geth:
            - --sepolia
          nethermind:
            - --config=sepolia
          reth:
            - --chain=sepolia
        consensus:
          grandine:
            - --network=sepolia
          lighthouse:
            - --network=sepolia
          lodestar:
            - --network=sepolia
          nimbus:
            - --network=sepolia
          prysm:
            - --sepolia
          teku:
            - --network=sepolia
      holesky:
        execution:
          besu:
            - --network=holesky
          erigon:
            - --chain=holesky
          ethereumjs:
            - --network=holesky
          geth:
            - --holesky
          nethermind:
            - --config=holesky
          reth:
            - --chain=holesky
        consensus:
          grandine:
            - --network=holesky
          lighthouse:
            - --network=holesky
          lodestar:
            - --network=holesky
          nimbus:
            - --network=holesky
          prysm:
            - --holesky
          teku:
            - --network=holesky
      hoodi:
        execution:
          besu:
            - --network=hoodi
          erigon:
            - --chain=hoodi
          ethereumjs:
            - --network=hoodi
          geth:
            - --hoodi
          nethermind:
            - --config=hoodi
          reth:
            - --chain=hoodi
        consensus:
          grandine:
            - --network=hoodi
          lighthouse:
            - --network=hoodi
          lodestar:
            - --network=hoodi
          nimbus:
            - --network=hoodi
          prysm:
            - --hoodi
          teku:
            - --network=hoodi


########################
###
###  Execution clients
###
########################

besu:
  enabled: false
  nameOverride: execution
  httpPort: 8545
  wsPort: 8546
  p2pPort: 30303
  extraArgs:
    - >-
      {{- with( index .Values.global.clientArgs.networks .Values.global.main.network ) }}
        {{- range $i, $v := .execution.besu }}
        {{- if (eq $i 0) }}
        {{- $v }}
        {{- else }}
        {{ $v }}
        {{- end }}
        {{- end -}}
      {{- end }}

erigon:
  enabled: false
  nameOverride: execution
  httpPort: 8545
  wsPort: 8546
  p2pPort: 30303
  extraArgs:
    - >-
      {{- with( index .Values.global.clientArgs.networks .Values.global.main.network ) }}
        {{- range $i, $v := .execution.erigon }}
        {{- if (eq $i 0) }}
        {{- $v }}
        {{- else }}
        {{ $v }}
        {{- end }}
        {{- end -}}
      {{- end }}

ethereumjs:
  enabled: false
  nameOverride: execution
  rpcPort: 8545
  wsPort: 8546
  p2pPort: 30303
  extraArgs:
    - >-
      {{- with( index .Values.global.clientArgs.networks .Values.global.main.network ) }}
        {{- range $i, $v := .execution.ethereumjs }}
        {{- if (eq $i 0) }}
        {{- $v }}
        {{- else }}
        {{ $v }}
        {{- end }}
        {{- end -}}
      {{- end }}

geth:
  enabled: false
  nameOverride: execution
  httpPort: 8545
  wsPort: 8546
  p2pPort: 30303
  extraArgs:
    - >-
      {{- with( index .Values.global.clientArgs.networks .Values.global.main.network ) }}
        {{- range $i, $v := .execution.geth }}
        {{- if (eq $i 0) }}
        {{- $v }}
        {{- else }}
        {{ $v }}
        {{- end }}
        {{- end -}}
      {{- end }}

nethermind:
  enabled: false
  nameOverride: execution
  httpPort: 8545
  wsPort: 8546
  p2pPort: 30303
  extraArgs:
    - >-
      {{- with( index .Values.global.clientArgs.networks .Values.global.main.network ) }}
        {{- range $i, $v := .execution.nethermind }}
        {{- if (eq $i 0) }}
        {{- $v }}
        {{- else }}
        {{ $v }}
        {{- end }}
        {{- end -}}
      {{- end }}

reth:
  enabled: false
  nameOverride: execution
  httpPort: 8545
  wsPort: 8546
  p2pPort: 30303
  extraArgs:
    - >-
      {{- with( index .Values.global.clientArgs.networks .Values.global.main.network ) }}
        {{- range $i, $v := .execution.reth }}
        {{- if (eq $i 0) }}
        {{- $v }}
        {{- else }}
        {{ $v }}
        {{- end }}
        {{- end -}}
      {{- end }}

########################
###
###  Consensus clients
###
########################

grandine:
  enabled: false
  nameOverride: beacon
  httpPort: 5052
  p2pPort: 9000
  checkpointSync:
    enabled: "{{ default .Values.global.checkpointSync.enabled false }}"
    url: "{{ index .Values.global.checkpointSync.addresses .Values.global.main.network }}"
  extraArgs:
    - >-
      --eth1-rpc-urls={{ tpl .Values.global.main.engineEndpoint . }}
      {{- with( index .Values.global.clientArgs.networks .Values.global.main.network ) }}
        {{- range .consensus.grandine }}
        {{ . }}
        {{- end -}}
      {{- end -}}

lighthouse:
  enabled: false
  nameOverride: beacon
  httpPort: 5052
  p2pPort: 9000
  checkpointSync:
    enabled: "{{ default .Values.global.checkpointSync.enabled false }}"
    url: "{{ index .Values.global.checkpointSync.addresses .Values.global.main.network }}"
  extraArgs:
    - >-
      --execution-endpoint={{ tpl .Values.global.main.engineEndpoint . }}
      {{- with( index .Values.global.clientArgs.networks .Values.global.main.network ) }}
        {{- range .consensus.lighthouse }}
        {{ . }}
        {{- end -}}
      {{- end -}}

teku:
  enabled: false
  nameOverride: beacon
  httpPort: 5052
  p2pPort: 9000
  checkpointSync:
    enabled: "{{ default .Values.global.checkpointSync.enabled false }}"
    url: "{{ index .Values.global.checkpointSync.addresses .Values.global.main.network }}"
  extraArgs:
    - >-
      --ee-endpoint={{ tpl .Values.global.main.engineEndpoint . }}
      {{- with( index .Values.global.clientArgs.networks .Values.global.main.network ) }}
        {{- range .consensus.teku }}
        {{ . }}
        {{- end -}}
      {{- end -}}

lodestar:
  enabled: false
  nameOverride: beacon
  httpPort: 5052
  p2pPort: 9000
  checkpointSync:
    enabled: "{{ default .Values.global.checkpointSync.enabled false }}"
    url: "{{ index .Values.global.checkpointSync.addresses .Values.global.main.network }}"
  extraArgs:
    - >-
      --execution.urls={{ tpl .Values.global.main.engineEndpoint . }}
      {{- with( index .Values.global.clientArgs.networks .Values.global.main.network ) }}
        {{- range .consensus.lodestar }}
        {{ . }}
        {{- end -}}
      {{- end -}}

prysm:
  enabled: false
  nameOverride: beacon
  httpPort: 5052
  p2pPort: 9000
  checkpointSync:
    enabled: "{{ default .Values.global.checkpointSync.enabled false }}"
    url: "{{ index .Values.global.checkpointSync.addresses .Values.global.main.network }}"
  extraArgs:
    - >-
      --execution-endpoint={{ tpl .Values.global.main.engineEndpoint . }}
      {{- with( index .Values.global.clientArgs.networks .Values.global.main.network ) }}
        {{- range .consensus.prysm }}
        {{ . }}
        {{- end -}}
      {{- end -}}

nimbus:
  enabled: false
  nameOverride: beacon
  httpPort: 5052
  p2pPort: 9000
  checkpointSync:
    enabled: "{{ default .Values.global.checkpointSync.enabled false }}"
    url: "{{ index .Values.global.checkpointSync.addresses .Values.global.main.network }}"
    network: "{{ .Values.global.main.network }}"
  extraArgs:
    - >-
      --web3-url={{ tpl .Values.global.main.engineEndpoint . }}
      {{- with( index .Values.global.clientArgs.networks .Values.global.main.network ) }}
        {{- range .consensus.nimbus }}
        {{ . }}
        {{- end -}}
      {{- end -}}

########################
###
###  Monitoring
###
########################

ethereum-metrics-exporter:
  enabled: false
  nameOverride: metrics-exporter
  config:
    consensus:
      enabled: true
      url: "{{ tpl  .Values.global.main.beaconEndpoint . }}"
      name: consensus-client
    execution:
      enabled: true
      url: "{{ tpl  .Values.global.main.rpcEndpoint . }}"
      name: execution-client
      modules:
        - eth
        - net
        - web3

xatu-sentry:
  enabled: false
  nameOverride: xatu-sentry
  config:
    logging: "info"
    metricsAddr: ":9090"
    name: "{{ .Release.Name }}"
    ethereum:
      beaconNodeAddress: "{{ tpl  .Values.global.main.beaconEndpoint . }}"
    execution:
      wsAddress: "{{ tpl  .Values.global.main.wsEndpoint . }}"
      rpcAddress: "{{ tpl  .Values.global.main.rpcEndpoint . }}"
    outputs:
    - name: basic
      type: http
      config:
        address: http://localhost:8080
        headers:
          authorization: Someb64Value

tracoor-agent:
  enabled: false
  nameOverride: tracoor-agent
  config:
    logging: "info"
    metricsAddr: ":9090"
    pprofAddr: ":6065"
    name: "{{ .Release.Name }}"
    ethereum:
      beacon:
        nodeAddress: "{{ tpl  .Values.global.main.beaconEndpoint . }}"
      execution:
        nodeAddress: "{{ tpl  .Values.global.main.rpcEndpoint . }}"

    indexer:
      address: localhost:8081 # GRPC port of tracoor-server

    store:
      type: s3
      config:
        region: "us-east-1"
        endpoint: http://localhost:9000
        bucket_name: tracoor



================================================
FILE: charts/ethereum-node/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/ethereum-node/ci/clients/consensus/grandine.yaml
================================================
grandine:
  enabled: true


================================================
FILE: charts/ethereum-node/ci/clients/consensus/lighthouse.yaml
================================================
lighthouse:
  enabled: true



================================================
FILE: charts/ethereum-node/ci/clients/consensus/lodestar.yaml
================================================
lodestar:
  enabled: true



================================================
FILE: charts/ethereum-node/ci/clients/consensus/nimbus.yaml
================================================
nimbus:
  enabled: true



================================================
FILE: charts/ethereum-node/ci/clients/consensus/prysm.yaml
================================================
prysm:
  enabled: true



================================================
FILE: charts/ethereum-node/ci/clients/consensus/teku.yaml
================================================
teku:
  enabled: true



================================================
FILE: charts/ethereum-node/ci/clients/execution/besu.yaml
================================================
besu:
  enabled: true



================================================
FILE: charts/ethereum-node/ci/clients/execution/erigon.yaml
================================================
erigon:
  enabled: true



================================================
FILE: charts/ethereum-node/ci/clients/execution/ethereumjs.yaml
================================================
ethereumjs:
  enabled: true



================================================
FILE: charts/ethereum-node/ci/clients/execution/geth.yaml
================================================
geth:
  enabled: true



================================================
FILE: charts/ethereum-node/ci/clients/execution/nethermind.yaml
================================================
nethermind:
  enabled: true



================================================
FILE: charts/ethereum-node/ci/clients/execution/reth.yaml
================================================
reth:
  enabled: true



================================================
FILE: charts/ethereum-node/ci/networks/goerli.yaml
================================================
global:
  main:
    network: "holesky"
  checkpointSync:
    enabled: true



================================================
FILE: charts/ethereum-node/ci/networks/holesky.yaml
================================================
global:
  main:
    network: "holesky"
  checkpointSync:
    enabled: true



================================================
FILE: charts/ethereum-node/ci/networks/mainnet.yaml
================================================
global:
  main:
    network: "mainnet"
  checkpointSync:
    enabled: true



================================================
FILE: charts/ethereum-node/ci/networks/sepolia.yaml
================================================
global:
  main:
    network: "sepolia"
  checkpointSync:
    enabled: true



================================================
FILE: charts/ethereum-node/templates/NOTES.txt
================================================
Thank you for installing {{ .Chart.Name }}.

Your release is named {{ .Release.Name }}.

To learn more about the release, try:

  $ helm status {{ .Release.Name }}
  $ helm get all {{ .Release.Name }}

====
{{- $elName := "" -}}
{{- $elCount := 0 | int -}}
{{- if .Values.geth.enabled -}}
{{ $elCount = add1 $elCount -}}
{{ $elName = "geth" -}}
{{- end -}}
{{- if .Values.erigon.enabled -}}
{{ $elCount = add1 $elCount -}}
{{ $elName = "erigon" -}}
{{- end -}}
{{- if .Values.ethereumjs.enabled -}}
{{ $elCount = add1 $elCount -}}
{{ $elName = "ethereumjs" -}}
{{- end -}}
{{- if .Values.besu.enabled -}}
{{ $elCount = add1 $elCount -}}
{{ $elName = "besu" -}}
{{- end -}}
{{- if .Values.nethermind.enabled -}}
{{ $elCount = add1 $elCount -}}
{{ $elName = "nethermind" -}}
{{- end -}}
{{- if .Values.reth.enabled -}}
{{ $elCount = add1 $elCount -}}
{{ $elName = "reth" -}}
{{- end -}}

{{- $clName := "" -}}
{{- $clCount := 0 | int -}}
{{- if .Values.grandine.enabled -}}
{{ $clCount = add1 $clCount -}}
{{ $clName = "grandine" -}}
{{- end -}}
{{- if .Values.lighthouse.enabled -}}
{{ $clCount = add1 $clCount -}}
{{ $clName = "lighthouse" -}}
{{- end -}}
{{- if .Values.teku.enabled -}}
{{ $clCount = add1 $clCount -}}
{{ $clName = "teku" -}}
{{- end }}
{{- if .Values.lodestar.enabled -}}
{{ $clCount = add1 $clCount -}}
{{ $clName = "lodestar" -}}
{{- end }}
{{- if .Values.nimbus.enabled -}}
{{ $clCount = add1 $clCount -}}
{{ $clName = "nimbus" -}}
{{- end -}}
{{- if .Values.prysm.enabled -}}
{{ $clCount = add1 $clCount -}}
{{ $clName = "prysm" -}}
{{- end -}}

{{- if gt $elCount 1 -}}
{{ fail "ERROR: You should only enable one execution layer client software" -}}
{{- end -}}
{{- if gt $clCount 1 -}}
{{ fail "ERROR: You should only enable one consensus layer client software" -}}
{{- end }}

Infos about your ethereum node installation:
- Network: {{ .Values.global.main.network }}
- Execution layer client: {{ printf "%s" $elName }}
- Consensus layer client: {{ printf "%s" $clName }}

=====



================================================
FILE: charts/ethereum-validator-metrics-exporter/README.md
================================================

# ethereum-validator-metrics-exporter

![Version: 0.0.1](https://img.shields.io/badge/Version-0.0.1-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

A prometheus exporter for Ethereum validators

**Homepage:** <https://github.com/ethpandaops/ethereum-validator-metrics-exporter>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| config.global.logging | string | `"info"` |  |
| config.global.metricsAddr | string | `":9090"` |  |
| config.global.namespace | string | `"eth_validator"` |  |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the ethereum-validator-metrics-exporter container |
| customCommand | list | `[]` | Command replacement for the ethereum-validator-metrics-exporter container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | ethereum-validator-metrics-exporter container pull policy |
| image.repository | string | `"ethpandaops/ethereum-validator-metrics-exporter"` | ethereum-validator-metrics-exporter container image repository |
| image.tag | string | `"latest"` | ethereum-validator-metrics-exporter container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/ethereum-validator-metrics-exporter/Chart.yaml
================================================
apiVersion: v2
name: ethereum-validator-metrics-exporter
description: A prometheus exporter for Ethereum validators
home: https://github.com/ethpandaops/ethereum-validator-metrics-exporter
type: application
version: 0.0.1
maintainers:
  - name: savid
    email: andrew.davis@ethereum.org



================================================
FILE: charts/ethereum-validator-metrics-exporter/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/ethereum-validator-metrics-exporter/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- ethereum-validator-metrics-exporter container image repository
  repository: ethpandaops/ethereum-validator-metrics-exporter
  # -- ethereum-validator-metrics-exporter container image tag
  tag: latest
  # -- ethereum-validator-metrics-exporter container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

config:
  global:
    logging: "info" # panic,fatal,warm,info,debug,trace
    metricsAddr: ":9090"
    namespace: eth_validator

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Custom args for the ethereum-validator-metrics-exporter container
customArgs: []

# -- Command replacement for the ethereum-validator-metrics-exporter container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/ethereum-validator-metrics-exporter/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/ethereum-validator-metrics-exporter/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "ethereum-validator-metrics-exporter.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "ethereum-validator-metrics-exporter.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "ethereum-validator-metrics-exporter.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "ethereum-validator-metrics-exporter.labels" -}}
helm.sh/chart: {{ include "ethereum-validator-metrics-exporter.chart" . }}
{{ include "ethereum-validator-metrics-exporter.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "ethereum-validator-metrics-exporter.selectorLabels" -}}
app.kubernetes.io/name: {{ include "ethereum-validator-metrics-exporter.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "ethereum-validator-metrics-exporter.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "ethereum-validator-metrics-exporter.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "ethereum-validator-metrics-exporter.http" -}}
{{ (split ":" .Values.config.global.metricsAddr)._1 | default ":9090" }}
{{- end -}}



================================================
FILE: charts/ethereum-validator-metrics-exporter/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "ethereum-validator-metrics-exporter.fullname" . }}
  labels:
    {{- include "ethereum-validator-metrics-exporter.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{ toYaml .Values.config | nindent 4 }}



================================================
FILE: charts/ethereum-validator-metrics-exporter/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ethereum-validator-metrics-exporter.fullname" . }}
  labels:
    {{- include "ethereum-validator-metrics-exporter.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "ethereum-validator-metrics-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ethereum-validator-metrics-exporter.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "ethereum-validator-metrics-exporter.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/ethereum-validator-metrics-exporter"
          - --config=/config.yaml
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12}}
          {{- end }}
        ports:
          - name: http
            containerPort: {{ include "ethereum-validator-metrics-exporter.http" . }}
            protocol: TCP
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "ethereum-validator-metrics-exporter.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "ethereum-validator-metrics-exporter.fullname" . }}



================================================
FILE: charts/ethereum-validator-metrics-exporter/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "ethereum-validator-metrics-exporter.fullname" . -}}
{{- $svcPort := include "ethereum-validator-metrics-exporter.http" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "ethereum-validator-metrics-exporter.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/ethereum-validator-metrics-exporter/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "ethereum-validator-metrics-exporter.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "ethereum-validator-metrics-exporter.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "ethereum-validator-metrics-exporter.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "ethereum-validator-metrics-exporter.metricsPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "ethereum-validator-metrics-exporter.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:9090 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 9090:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/ethereum-validator-metrics-exporter/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ethereum-validator-metrics-exporter.fullname" . }}-env
  labels:
    {{- include "ethereum-validator-metrics-exporter.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/ethereum-validator-metrics-exporter/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "ethereum-validator-metrics-exporter.fullname" . }}
  labels:
    {{- include "ethereum-validator-metrics-exporter.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "ethereum-validator-metrics-exporter.http" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "ethereum-validator-metrics-exporter.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/ethereum-validator-metrics-exporter/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ethereum-validator-metrics-exporter.serviceAccountName" . }}
  labels:
    {{- include "ethereum-validator-metrics-exporter.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/ethereum-validator-metrics-exporter/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "ethereum-validator-metrics-exporter.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "ethereum-validator-metrics-exporter.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: http
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "ethereum-validator-metrics-exporter.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/ethereumjs/README.md
================================================

# ethereumjs

![Version: 0.0.10](https://img.shields.io/badge/Version-0.0.10-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

The EthereumJS Client is an Ethereum Execution Client (similar to go-ethereum or Nethermind) written in TypeScript/JavaScript, the non-Smart-Contract language Ethereum dApp developers are most familiar with. It is targeted to be a client for research and development and not meant to be used in production on mainnet for the foreseeable future (out of resource and security considerations).

**Homepage:** <https://ethereumjs.readthedocs.io/en/latest/>

## Source Code

* <https://github.com/ethereumjs/ethereumjs-monorepo>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| authPort | int | `8551` | Engine Port (Auth Port) |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customCommand | list | `[]` | Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplate instead. |
| defaultBinaryPath | string | `"node /usr/app/packages/client/dist/esm/bin/cli.js"` | Path within the container to the beacon node binary |
| defaultCommandTemplate | string | See `values.yaml` | Template used for the default command |
| extraArgs | list | `[]` | Extra args for the ethereumjs container |
| extraContainerPorts | list | `[]` | Additional ports for the main container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers or extraContainerPorts |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | ethereumjs container pull policy |
| image.repository | string | `"ethpandaops/ethereumjs"` | ethereumjs container image repository |
| image.tag | string | `"master"` | ethereumjs container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initChownData.enabled | bool | `true` | Init container to set the correct permissions to access data directories |
| initChownData.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| initChownData.image.repository | string | `"busybox"` | Container repository |
| initChownData.image.tag | string | `"1.34.0"` | Container tag |
| initChownData.resources | object | `{}` | Resource requests and limits |
| initContainers | list | `[]` | Additional init containers |
| jwt | string | `"ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a"` | JWT secret is attached as a secret object. Change this value. |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| p2pNodePort.enabled | bool | `false` | Expose P2P port via NodePort |
| p2pNodePort.initContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.initContainer.image.repository | string | `"lachlanevenson/k8s-kubectl"` | Container image to fetch nodeport information |
| p2pNodePort.initContainer.image.tag | string | `"v1.25.4"` | Container tag |
| p2pNodePort.port | int | `31000` | NodePort to be used |
| p2pNodePort.portForwardContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.portForwardContainer.image.repository | string | `"alpine/socat"` | Container image for the port forwarder |
| p2pNodePort.portForwardContainer.image.tag | string | `"latest"` | Container tag |
| p2pPort | int | `30303` | P2P Port |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"20Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| rbac.clusterRules | list | See `values.yaml` | Required ClusterRole rules |
| rbac.create | bool | `true` | Specifies whether RBAC resources are to be created |
| rbac.rules | list | See `values.yaml` | Required ClusterRole rules |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| rpcPort | int | `8545` | HTTP Port |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/debug/metrics/prometheus"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `300` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |
| wsAuthPort | int | `8552` | WS Engine Auth Port |
| wsPort | int | `8546` | WS Port |

# Examples

## Connecting to the holesky test network

```yaml
extraArgs:
  - --network=holesky
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.
Currently ethereumjs doesn't allow you to announce a a different discovery port, which would be a requirement to run multiple replicas within the same chart.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```



================================================
FILE: charts/ethereumjs/Chart.yaml
================================================
apiVersion: v2
name: ethereumjs
description: >
  The EthereumJS Client is an Ethereum Execution Client (similar to go-ethereum or Nethermind) written in TypeScript/JavaScript, the non-Smart-Contract language Ethereum dApp developers are most familiar with. It is targeted to be a client for research and development and not meant to be used in production on mainnet for the foreseeable future (out of resource and security considerations).
home: https://ethereumjs.readthedocs.io/en/latest/
icon: https://user-images.githubusercontent.com/47108/78779352-d0839500-796a-11ea-9468-fd2a0b3fe1ef.png
sources:
  - https://github.com/ethereumjs/ethereumjs-monorepo
type: application
version: 0.0.10
maintainers:
  - name: barnabasbusa
    email: busa.barnabas@gmail.com



================================================
FILE: charts/ethereumjs/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Connecting to the holesky test network

```yaml
extraArgs:
  - --network=holesky
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.
Currently ethereumjs doesn't allow you to announce a a different discovery port, which would be a requirement to run multiple replicas within the same chart.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```



================================================
FILE: charts/ethereumjs/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- ethereumjs container image repository
  repository: ethpandaops/ethereumjs
  # -- ethereumjs container image tag
  tag: master
  # -- ethereumjs container pull policy
  pullPolicy: IfNotPresent

# -- Extra args for the ethereumjs container
extraArgs: []
  #- --network=holesky

# -- JWT secret is attached as a secret object. Change this value.
jwt: ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a

# -- Path within the container to the beacon node binary
defaultBinaryPath: node /usr/app/packages/client/dist/esm/bin/cli.js

# -- Template used for the default command
# @default -- See `values.yaml`
defaultCommandTemplate: |
  - sh
  - -ac
  - >
  {{- if .Values.p2pNodePort.enabled }}
    . /env/init-nodeport;
  {{- end }}
    {{ .Values.defaultBinaryPath }}
    --dataDir=/data
  {{- if .Values.p2pNodePort.enabled }}
    {{- if not (contains "--extIP=" (.Values.extraArgs | join ",")) }}
    --extIP=extip:$EXTERNAL_IP
    {{- end }}
    {{- if not (contains "--port=" (.Values.extraArgs | join ",")) }}
    --port=$EXTERNAL_PORT
    {{- end }}
  {{- else }}
    {{- if not (contains "--extIP=" (.Values.extraArgs | join ",")) }}
    --extIP=extip:$(POD_IP)
    {{- end }}
    {{- if not (contains "--port=" (.Values.extraArgs | join ",")) }}
    --port={{ include "ethereumjs.p2pPort" . }}
    {{- end }}
  {{- end }}
    --rpc
    --rpcAddr=0.0.0.0
    --rpcPort={{ .Values.rpcPort }}
    --rpcCors=*
    --ws
    --wsAddr=0.0.0.0
    --wsPort={{ .Values.wsPort }}
    --jwtSecret=/data/jwt.hex
    --rpcEngine
    --rpcEngineAddr=0.0.0.0
    --rpcEnginePort={{ .Values.authPort }}
    --wsEngineAddr=0.0.0.0
    --wsEnginePort={{ .Values.wsAuthPort }}
  {{- range .Values.extraArgs }}
    {{ tpl . $ }}
  {{- end }}

# -- Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplate instead.
customCommand: []

# When p2pNodePort is enabled, your P2P port will be exposed via service type NodePort.
# This is useful if you want to expose and announce your node to the Internet.
# Limitation: You can only one have one replica when exposing via NodePort.
#             Check the chart README.md for more details
p2pNodePort:
  # -- Expose P2P port via NodePort
  enabled: false
  # -- NodePort to be used
  port: 31000
  initContainer:
    image:
      # -- Container image to fetch nodeport information
      repository: lachlanevenson/k8s-kubectl
      # -- Container tag
      tag: v1.25.4
      # -- Container pull policy
      pullPolicy: IfNotPresent
  portForwardContainer:
    image:
      # -- Container image for the port forwarder
      repository: alpine/socat
      # -- Container tag
      tag: latest
      # -- Container pull policy
      pullPolicy: IfNotPresent

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http-rpc
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http-rpc
  initialDelaySeconds: 10
  periodSeconds: 10

# -- P2P Port
p2pPort: 30303

# -- HTTP Port
rpcPort: 8545

# -- WS Port
wsPort: 8546

# -- Engine Port (Auth Port)
authPort: 8551

# -- WS Engine Auth Port
wsAuthPort: 8552

# -- Node selector for pods
nodeSelector: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 20Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

rbac:
  # -- Specifies whether RBAC resources are to be created
  create: true
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  clusterRules:
     # Required to obtain the nodes external IP
    - apiGroups: [""]
      resources:
      - nodes
      verbs:
      - get
      - list
      - watch
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  rules:
    # Required to get information about the services nodePort.
    - apiGroups: [""]
      resources:
      - services
      verbs:
      - get
      - list
      - watch

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 300

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers or extraContainerPorts
extraPorts: []

# -- Additional ports for the main container
extraContainerPorts: []

# -- Additional env variables
extraEnv: []

# -- Additional env variables injected via a created secret
secretEnv: {}
# MY_PASSWORD: supersecret

initChownData:
  # -- Init container to set the correct permissions to access data directories
  enabled: true
  image:
    # -- Container repository
    repository: busybox
    # -- Container tag
    tag: 1.34.0
    # -- Container pull policy
    pullPolicy: IfNotPresent
  # -- Resource requests and limits
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /debug/metrics/prometheus
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/ethereumjs/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/ethereumjs/ci/default-values.yaml
================================================
# Leave empty so that CT tests with default values



================================================
FILE: charts/ethereumjs/templates/_cmd.tpl
================================================
{{/*
# Default command
*/}}
{{- define "ethereumjs.defaultCommand" -}}
{{- tpl .Values.defaultCommandTemplate . }}
{{- end }}



================================================
FILE: charts/ethereumjs/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "ethereumjs.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "ethereumjs.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "ethereumjs.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "ethereumjs.labels" -}}
helm.sh/chart: {{ include "ethereumjs.chart" . }}
{{ include "ethereumjs.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "ethereumjs.selectorLabels" -}}
app.kubernetes.io/name: {{ include "ethereumjs.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "ethereumjs.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "ethereumjs.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{/*
Create the name of the cluster role.
It needs to be namespace prefixed to avoid naming conflicts when using the same deployment name across namespaces.
*/}}
{{- define "ethereumjs.clusterRoleName" -}}
{{ .Release.Namespace }}-{{ include "ethereumjs.fullname" . }}
{{- end }}

{{- define "ethereumjs.p2pPort" -}}
{{- if .Values.p2pNodePort.enabled }}
{{- print .Values.p2pNodePort.port }}
{{- else }}
{{- print .Values.p2pPort }}
{{- end }}
{{- end -}}

{{- define "ethereumjs.replicas" -}}
{{- if and (.Values.p2pNodePort.enabled) (gt (int .Values.replicas)  1) }}
{{- print 1 }}
{{ else }}
{{- print .Values.replicas }}
{{- end }}
{{- end -}}



================================================
FILE: charts/ethereumjs/templates/clusterrole.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "ethereumjs.clusterRoleName" . }}
  labels:
    {{- include "ethereumjs.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.clusterRules | nindent 0 }}
{{- end }}



================================================
FILE: charts/ethereumjs/templates/clusterrolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "ethereumjs.clusterRoleName" . }}
  labels:
    {{- include "ethereumjs.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "ethereumjs.clusterRoleName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "ethereumjs.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/ethereumjs/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "ethereumjs.fullname" . -}}
{{- $svcPort := .Values.rpcPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "ethereumjs.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/ethereumjs/templates/NOTES.txt
================================================



================================================
FILE: charts/ethereumjs/templates/poddisruptionbudget.yaml
================================================
{{- if .Values.podDisruptionBudget }}
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ include "ethereumjs.fullname" . }}
  labels:
    {{- include "ethereumjs.labels" . | nindent 4 }}
spec:
{{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
{{- end }}
{{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
{{- end }}
  selector:
    matchLabels:
      {{- include "ethereumjs.selectorLabels" . | nindent 6 }}
{{- end }}



================================================
FILE: charts/ethereumjs/templates/role.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "ethereumjs.serviceAccountName" . }}
  labels:
    {{- include "ethereumjs.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.rules | nindent 0 }}
{{- end }}



================================================
FILE: charts/ethereumjs/templates/rolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "ethereumjs.serviceAccountName" . }}
  labels:
    {{- include "ethereumjs.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "ethereumjs.serviceAccountName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "ethereumjs.serviceAccountName" . }}
{{- end }}



================================================
FILE: charts/ethereumjs/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ethereumjs.fullname" . }}-env
  labels:
    {{- include "ethereumjs.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ethereumjs.fullname" . }}-jwt
type: Opaque
data:
  jwt.hex: {{ .Values.jwt | b64enc }}


================================================
FILE: charts/ethereumjs/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "ethereumjs.fullname" . }}-headless
  labels:
    {{- include "ethereumjs.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "ethereumjs.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "ethereumjs.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: {{ .Values.rpcPort }}
      targetPort: http-rpc
      protocol: TCP
      name: http-rpc
    - port: {{ .Values.authPort }}
      targetPort: auth-rpc
      protocol: TCP
      name: auth-rpc
    {{- if ne .Values.rpcPort .Values.wsPort }}  
    - port: {{ .Values.wsPort }}
      targetPort: ws-rpc
      protocol: TCP
      name: ws-rpc
    {{- end }}
    {{- if ne .Values.authPort .Values.wsAuthPort }}
    - port: {{ .Values.wsAuthPort }}
      targetPort: ws-auth-rpc
      protocol: TCP
      name: ws-auth-rpc
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "ethereumjs.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/ethereumjs/templates/service.p2p.nodeport.yaml
================================================
{{- if .Values.p2pNodePort.enabled -}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "ethereumjs.fullname" $ }}-p2p-0
  labels:
    {{- include "ethereumjs.labels" $ | nindent 4 }}
    pod: {{ include "ethereumjs.fullname" $ }}-0
    type: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p-tcp
      port: {{ include "ethereumjs.p2pPort" $ }}
      protocol: TCP
      targetPort: p2p-tcp
      nodePort: {{ include "ethereumjs.p2pPort" $ }}
    - name: p2p-udp
      port: {{ include "ethereumjs.p2pPort" $ }}
      protocol: UDP
      targetPort: p2p-udp
      nodePort: {{ include "ethereumjs.p2pPort" $ }}
  selector:
    {{- include "ethereumjs.selectorLabels" $ | nindent 4 }}
    statefulset.kubernetes.io/pod-name: "{{ include "ethereumjs.fullname" $ }}-0"
{{- end }}



================================================
FILE: charts/ethereumjs/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "ethereumjs.fullname" . }}
  labels:
    {{- include "ethereumjs.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - port: {{ include "ethereumjs.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "ethereumjs.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: {{ .Values.rpcPort }}
      targetPort: http-rpc
      protocol: TCP
      name: http-rpc
    - port: {{ .Values.authPort }}
      targetPort: auth-rpc
      protocol: TCP
      name: auth-rpc
    {{- if ne .Values.rpcPort .Values.wsPort }}  
    - port: {{ .Values.wsPort }}
      targetPort: ws-rpc
      protocol: TCP
      name: ws-rpc
    {{- end }}
    {{- if ne .Values.authPort .Values.wsAuthPort }}
    - port: {{ .Values.wsAuthPort }}
      targetPort: ws-auth-rpc
      protocol: TCP
      name: ws-auth-rpc
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "ethereumjs.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/ethereumjs/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ethereumjs.serviceAccountName" . }}
  labels:
    {{- include "ethereumjs.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/ethereumjs/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "ethereumjs.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "ethereumjs.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "ethereumjs.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/ethereumjs/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "ethereumjs.fullname" . }}
  labels:
    {{- include "ethereumjs.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ include "ethereumjs.replicas" . }}
  selector:
    matchLabels:
      {{- include "ethereumjs.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "ethereumjs.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "ethereumjs.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "ethereumjs.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- tpl (toYaml .Values.initContainers | nindent 8) $ }}
      {{- end }}
      {{- if .Values.p2pNodePort.enabled }}
        - name: init-nodeport
          image: "{{ .Values.p2pNodePort.initContainer.image.repository }}:{{ .Values.p2pNodePort.initContainer.image.tag }}"
          imagePullPolicy: {{.Values.p2pNodePort.initContainer.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - sh
            - -c
            - >
              export EXTERNAL_PORT=$(kubectl get services -l "pod in (${POD_NAME}), type in (p2p)" -o jsonpath='{.items[0].spec.ports[0].nodePort}');
              export EXTERNAL_IP=$(kubectl get nodes "${NODE_NAME}" -o jsonpath='{.status.addresses[?(@.type=="ExternalIP")].address}');
              echo "EXTERNAL_PORT=$EXTERNAL_PORT" >  /env/init-nodeport;
              echo "EXTERNAL_IP=$EXTERNAL_IP"     >> /env/init-nodeport;
              cat /env/init-nodeport;
          volumeMounts:
            - name: env-nodeport
              mountPath: /env
      {{- end }}
      {{- if .Values.initChownData.enabled }}
        - name: init-chown-data
          image: "{{ .Values.initChownData.image.repository }}:{{ .Values.initChownData.image.tag }}"
          imagePullPolicy: {{ .Values.initChownData.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }}", "/data"]
          resources:
      {{ toYaml .Values.initChownData.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: "/data"
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
            {{- include "ethereumjs.defaultCommand" . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            {{- if .Values.p2pNodePort.enabled }}
            - name: env-nodeport
              mountPath: /env
            {{- end }}
            - name: storage
              mountPath: "/data"
            - name: jwt
              mountPath: "/data/jwt.hex"
              subPath: jwt.hex
              readOnly: true
          ports:
            {{- if .Values.extraContainerPorts }}
              {{ toYaml .Values.extraContainerPorts | nindent 12}}
            {{- end }}
            - name: p2p-tcp
              containerPort: {{ include "ethereumjs.p2pPort" . }}
              protocol: TCP
            - name: p2p-udp
              containerPort: {{ include "ethereumjs.p2pPort" . }}
              protocol: UDP
            - name: http-rpc
              containerPort: {{ .Values.rpcPort }}
              protocol: TCP
            - name: ws-rpc
              containerPort: {{ .Values.wsPort }}
              protocol: TCP
            - name: auth-rpc
              containerPort: {{ .Values.authPort }}
              protocol: TCP
            - name: ws-auth-rpc
              containerPort: {{ .Values.wsAuthPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "ethereumjs.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ tpl (toYaml .Values.extraContainers | nindent 8) $ }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: jwt
          secret:
            secretName: {{ include "ethereumjs.fullname" . }}-jwt
      {{- if .Values.p2pNodePort.enabled }}
        - name: env-nodeport
          emptyDir: {}
      {{- end }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/ethereumjs/templates/tests/test-connection.yaml
================================================

apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "ethereumjs.fullname" . }}-test-connection"
  labels:
    {{- include "ethereumjs.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
        - --location
        - --request
        - POST
        - '{{ include "ethereumjs.fullname" . }}:{{ .Values.rpcPort }}/'
        - --header
        - 'Content-Type: application/json'
        - --data-raw
        - '{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":67}'
  restartPolicy: Never



================================================
FILE: charts/ethstats/README.md
================================================

# ethstats

![Version: 0.1.4](https://img.shields.io/badge/Version-0.1.4-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Visual interface for tracking ethereum network status. It uses WebSockets to receive stats from running nodes and output them through a web interface.

**Homepage:** <https://ethstats.net/>

## Source Code

* <https://github.com/goerli/ethstats-server>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the ethstats container |
| customCommand | list | `[]` | Command replacement for the ethstats container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | ethstats container pull policy |
| image.repository | string | `"skylenet/ethstats-server"` | ethstats container image repository |
| image.tag | string | `"pow-latest"` | ethstats container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{"WS_SECRET":"PleaseChangeThisEthstatsSecret"}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |

# Examples

## Setting the shared secret required for incoming websocket connections

```yaml
secretEnv:
  WS_SECRET: "SomeSuperSharedSecret"
```



================================================
FILE: charts/ethstats/Chart.yaml
================================================
apiVersion: v2
name: ethstats
description: >
  Visual interface for tracking ethereum network status.
  It uses WebSockets to receive stats from running nodes and output them through a web interface.
home: https://ethstats.net/
sources:
  - https://github.com/goerli/ethstats-server
type: application
version: 0.1.4
maintainers:
  - name: skylenet
    email: rafael@skyle.net



================================================
FILE: charts/ethstats/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Setting the shared secret required for incoming websocket connections

```yaml
secretEnv:
  WS_SECRET: "SomeSuperSharedSecret"
```



================================================
FILE: charts/ethstats/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- ethstats container image repository
  repository: skylenet/ethstats-server
  # -- ethstats container image tag
  tag: pow-latest
  # -- ethstats container pull policy
  pullPolicy: IfNotPresent

# -- Number of replicas
replicas: 1

# -- Secret env variables injected via a created secret
secretEnv:
  WS_SECRET: "PleaseChangeThisEthstatsSecret"

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Custom args for the ethstats container
customArgs: []

# -- Command replacement for the ethstats container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []



================================================
FILE: charts/ethstats/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/ethstats/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "ethstats.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "ethstats.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "ethstats.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "ethstats.labels" -}}
helm.sh/chart: {{ include "ethstats.chart" . }}
{{ include "ethstats.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "ethstats.selectorLabels" -}}
app.kubernetes.io/name: {{ include "ethstats.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "ethstats.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "ethstats.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "ethstats.httpPort" -}}
{{- printf "3000" -}}
{{- end -}}



================================================
FILE: charts/ethstats/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ethstats.fullname" . }}
  labels:
    {{- include "ethstats.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "ethstats.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ethstats.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "ethstats.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if gt (len .Values.customCommand) 0 }}
          command:
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ include "ethstats.httpPort" . }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "ethstats.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}



================================================
FILE: charts/ethstats/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "ethstats.fullname" . -}}
{{- $svcPort := include "ethstats.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "ethstats.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/ethstats/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "ethstats.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "ethstats.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "ethstats.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "ethstats.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "ethstats.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/ethstats/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ethstats.fullname" . }}-env
  labels:
    {{- include "ethstats.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/ethstats/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "ethstats.fullname" . }}
  labels:
    {{- include "ethstats.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "ethstats.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "ethstats.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/ethstats/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ethstats.serviceAccountName" . }}
  labels:
    {{- include "ethstats.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/ethstats/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "ethstats.fullname" . }}-test-connection"
  labels:
    {{- include "ethstats.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - '{{ include "ethstats.fullname" . }}:{{ include "ethstats.httpPort" . }}/'
  restartPolicy: Never



================================================
FILE: charts/fauceth/README.md
================================================

# fauceth

![Version: 0.2.4](https://img.shields.io/badge/Version-0.2.4-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Faucet for EVM chains

**Homepage:** <https://github.com/komputing/fauceth>

## Source Code

* <https://github.com/komputing/fauceth>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the fauceth container |
| customCommand | list | `[]` | Command replacement for the fauceth container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | fauceth container pull policy |
| image.repository | string | `"ghcr.io/komputing/fauceth"` | fauceth container image repository |
| image.tag | string | `"release"` | fauceth container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{"APP_AMOUNT":"1000000000000000000","APP_CHAINS":"5","APP_ETHKEY":"key in hex format","APP_TITLE":"%CHAINNAME FaucETH","HCAPTCHA_SECRET":"your_hcaptcha_secret","HCAPTCHA_SITEKEY":"your_hcaptcha_site_key"}` | Env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |

# Examples

## Setting the configuration via Env vars

```yaml
secretEnv:
  HCAPTCHA_SECRET: "your_hcaptcha_secret"
  HCAPTCHA_SITEKEY: "your_hcaptcha_site_key"
  APP_ETHKEY: "key in hex format"
  APP_AMOUNT: "1000000000000000000" # 1 ETH
  APP_CHAINS: "5" # Comma separated chain IDs that you support
  APP_TITLE: "%CHAINNAME FaucETH"
  #APP_IMAGEURL:
```



================================================
FILE: charts/fauceth/Chart.yaml
================================================
apiVersion: v2
name: fauceth
description: >
  Faucet for EVM chains
home: https://github.com/komputing/fauceth
icon: https://avatars.githubusercontent.com/u/48826811?s=200&v=4
sources:
  - https://github.com/komputing/fauceth
type: application
version: 0.2.4
maintainers:
  - name: skylenet
    email: rafael@skyle.net



================================================
FILE: charts/fauceth/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Setting the configuration via Env vars

```yaml
secretEnv:
  HCAPTCHA_SECRET: "your_hcaptcha_secret"
  HCAPTCHA_SITEKEY: "your_hcaptcha_site_key"
  APP_ETHKEY: "key in hex format"
  APP_AMOUNT: "1000000000000000000" # 1 ETH
  APP_CHAINS: "5" # Comma separated chain IDs that you support
  APP_TITLE: "%CHAINNAME FaucETH"
  #APP_IMAGEURL:
```



================================================
FILE: charts/fauceth/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- fauceth container image repository
  repository: ghcr.io/komputing/fauceth
  # -- fauceth container image tag
  tag: "release"
  # -- fauceth container pull policy
  pullPolicy: IfNotPresent

# -- Custom args for the fauceth container
customArgs: []
  #- -config-file=/somewhere-else.yaml
  #- -output-dir=public

# -- Command replacement for the fauceth container
customCommand: [] # Only change this if you need to change the default command

# -- Env variables injected via a created secret
secretEnv:
  HCAPTCHA_SECRET: "your_hcaptcha_secret"
  HCAPTCHA_SITEKEY: "your_hcaptcha_site_key"
  APP_ETHKEY: "key in hex format"
  APP_AMOUNT: "1000000000000000000" # 1 ETH
  APP_CHAINS: "5" # Comma separated chain IDs that you support
  APP_TITLE: "%CHAINNAME FaucETH"
  #APP_IMAGEURL:
  #APP_FOOTER: ""

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []



================================================
FILE: charts/fauceth/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/fauceth/ci/default-values.yaml
================================================
secretEnv:
  HCAPTCHA_SECRET: "your_hcaptcha_secret"
  HCAPTCHA_SITEKEY: "your_hcaptcha_site_key"
  APP_ETHKEY: "6c9bd4919736ead6bdeb0441cd8124c16e45a881aef5d11de24be12ee9ecafe3"
  APP_AMOUNT: "1000000000000000000" # 1 ETH
  APP_CHAINS: "5"
  #APP_IMAGEURL:
  APP_TITLE: "%CHAINNAME FaucETH"



================================================
FILE: charts/fauceth/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "fauceth.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "fauceth.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "fauceth.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "fauceth.labels" -}}
helm.sh/chart: {{ include "fauceth.chart" . }}
{{ include "fauceth.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "fauceth.selectorLabels" -}}
app.kubernetes.io/name: {{ include "fauceth.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "fauceth.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "fauceth.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "fauceth.httpPort" -}}
{{- printf "8080" -}}
{{- end -}}



================================================
FILE: charts/fauceth/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "fauceth.fullname" . -}}
{{- $svcPort := include "fauceth.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "fauceth.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/fauceth/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "fauceth.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "fauceth.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "fauceth.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "fauceth.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "fauceth.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/fauceth/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "fauceth.fullname" . }}-env
  labels:
    {{- include "fauceth.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/fauceth/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "fauceth.fullname" . }}-headless
  labels:
    {{- include "fauceth.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "fauceth.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "fauceth.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/fauceth/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "fauceth.fullname" . }}
  labels:
    {{- include "fauceth.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "fauceth.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "fauceth.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/fauceth/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "fauceth.serviceAccountName" . }}
  labels:
    {{- include "fauceth.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/fauceth/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "fauceth.fullname" . }}
  labels:
    {{- include "fauceth.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "fauceth.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "fauceth.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "fauceth.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "fauceth.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if gt (len .Values.customCommand) 0 }}
          command:
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: "/config"
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ include "fauceth.httpPort" . }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "fauceth.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: config
          emptyDir: {}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}



================================================
FILE: charts/fauceth/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "fauceth.fullname" . }}-test-connection"
  labels:
    {{- include "fauceth.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - --location
       - --request
       - GET
       - '{{ include "fauceth.fullname" . }}:{{ include "fauceth.httpPort" . }}/'
  restartPolicy: Never



================================================
FILE: charts/forkmon/README.md
================================================

# forkmon

![Version: 0.1.6](https://img.shields.io/badge/Version-0.1.6-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

This is a little tool to keep track on a set of nodes, and see if they keep in step or if they go out of consensus.

**Homepage:** <https://github.com/ethereum/nodemonitor>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| config | string | See `values.yaml` | Config file |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customCommand | list | `[]` | Command replacement for the forkmon container |
| endpoints | list | `[{"addr":"http://execution-client:8545","kind":"rpc","name":"execution-client-name"}]` | Endpoints that you would like to monitor |
| extraArgs | list | `[]` | Extra args for the forkmon container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `8080` |  |
| image.pullPolicy | string | `"IfNotPresent"` | forkmon container pull policy |
| image.repository | string | `"holiman/nodemonitor"` | forkmon container image repository |
| image.tag | string | `"latest"` | forkmon container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| network | string | `""` | Set a network name such as mainnet, holesky, sepolia |
| nodeSelector | object | `{}` | Node selector for pods |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"1Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| thirdparty_endpoints | list | `[{"kind":"infura","name":"mainnet-infura","rate_limit":5},{"kind":"alchemy","name":"mainnet-alchemy","rate_limit":5},{"kind":"etherscan","name":"mainnet-etherscan","rate_limit":5}]` | Third party endpoints that you would like to monitor |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |

# Examples

## Setting the configuration file

```toml
config.toml:
    # How often to reload data from the nodes
    reload_interval = "10s"
    # If specified, a http server will serve static content here
    server_address = "0.0.0.0:8080"

    # Shown in the document title, if specified
    chain_name="<NETWORK_NAME>"

    # Third party providers
    infura_key          = "<INFURA_API_KEY>"
    infura_endpoint     = "https://mainnet.infura.io/v3/"
    alchemy_key         = "<ALCHEMY_API_KEY>"
    alchemy_endpoint    = "https://eth-mainnet.g.alchemy.com/v2/"
    etherscan_key       = "<ETHERSCAN_API_KEY>"
    etherscan_endpoint  = "https://api.etherscan.io/api"

    [Metrics]

    enabled = true
    endpoint = "<INFLUX_ENDPOINT>"
    username = "<INFLUX_USERNAME>"
    database  = "<INFLUX_DB_NAME>"
    password  = "<INFLUX_PASSWORD>"

    # Local or non third party connection require rpc kind
    [[clients]]
      name = "<execution-client-name>"
      kind ="rpc"
      url  = "http://<execution-client>:<execution-client-port>"

    # Third party client configuration doesn't require url
    # Kind can vary between infura, alchemy or etherscan
    # Recommended to enable rate limit for third party services
    [[clients]]
      name = infura|alchemy|etcherscan
      kind = infura|alchemy|etherscan
      rate_limit = 5
```



================================================
FILE: charts/forkmon/Chart.yaml
================================================
apiVersion: v2
name: forkmon
description: This is a little tool to keep track on a set of nodes, and see if they keep in step or if they go out of consensus.
home: https://github.com/ethereum/nodemonitor
type: application
version: 0.1.6
maintainers:
  - name: skylenet
    email: rafael@skyle.net
  - name: barnabasbusa
    email: busa.barnabas@gmail.com



================================================
FILE: charts/forkmon/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Setting the configuration file

```toml
config.toml:
    # How often to reload data from the nodes
    reload_interval = "10s"
    # If specified, a http server will serve static content here
    server_address = "0.0.0.0:8080"

    # Shown in the document title, if specified
    chain_name="<NETWORK_NAME>"

    # Third party providers
    infura_key          = "<INFURA_API_KEY>"
    infura_endpoint     = "https://mainnet.infura.io/v3/"
    alchemy_key         = "<ALCHEMY_API_KEY>"
    alchemy_endpoint    = "https://eth-mainnet.g.alchemy.com/v2/"
    etherscan_key       = "<ETHERSCAN_API_KEY>"
    etherscan_endpoint  = "https://api.etherscan.io/api"

    [Metrics]

    enabled = true
    endpoint = "<INFLUX_ENDPOINT>"
    username = "<INFLUX_USERNAME>"
    database  = "<INFLUX_DB_NAME>"
    password  = "<INFLUX_PASSWORD>"

    # Local or non third party connection require rpc kind 
    [[clients]]
      name = "<execution-client-name>"
      kind ="rpc"
      url  = "http://<execution-client>:<execution-client-port>"

    # Third party client configuration doesn't require url
    # Kind can vary between infura, alchemy or etherscan 
    # Recommended to enable rate limit for third party services
    [[clients]]
      name = infura|alchemy|etcherscan
      kind = infura|alchemy|etherscan
      rate_limit = 5
```



================================================
FILE: charts/forkmon/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- forkmon container image repository
  repository: holiman/nodemonitor
  # -- forkmon container image tag
  tag: latest
  # -- forkmon container pull policy
  pullPolicy: IfNotPresent

# -- Extra args for the forkmon container
extraArgs: []

# -- Command replacement for the forkmon container
customCommand: [] # Only change this if you need to change the default command

# -- Set a network name such as mainnet, holesky, sepolia
network: ""

# -- Config file
# @default -- See `values.yaml`
config: |
    # How often to reload data from the nodes
    reload_interval = "10s"
    # If specified, a http server will serve static content here
    server_address = "0.0.0.0:{{ .Values.httpPort}}"

    # Shown in the document title, if specified
    chain_name="{{ .Values.network }}"

    # Third party providers
    infura_key          = "<INFURA_API_KEY>"
    infura_endpoint     = "https://mainnet.infura.io/v3/"
    alchemy_key         = "<ALCHEMY_API_KEY>"
    alchemy_endpoint    = "https://eth-mainnet.g.alchemy.com/v2/"
    etherscan_key       = "<ETHERSCAN_API_KEY>"
    etherscan_endpoint  = "https://api.etherscan.io/api"

    [Metrics]

    enabled = true
    endpoint = "<INFLUX_ENDPOINT>"
    username = "<INFLUX_USERNAME>"
    database  = "<INFLUX_DB_NAME>"
    password  = "<INFLUX_PASSWORD>"

    # Local or non third party connection require rpc kind
    {{- range .Values.endpoints }}
    [[clients]]
      url = {{ .addr | quote }}
      name = {{ .name | quote }}
      kind = {{ .kind | quote }}
    {{- end }}

    # Third party client configuration doesn't require url
    # Kind can vary between infura, alchemy or etherscan
    # Recommended to enable rate limit for third party services
    {{- range .Values.thirdparty_endpoints }}
    [[clients]]
      name = {{ .name | quote }}
      kind = {{ .kind | quote }}
      rate_limit = {{ .rate_limit }}
    {{- end }}

# -- Third party endpoints that you would like to monitor
thirdparty_endpoints:
  - name: "mainnet-infura"
    kind: "infura"
    rate_limit: 5
  - name: "mainnet-alchemy"
    kind: "alchemy"
    rate_limit: 5
  - name: "mainnet-etherscan"
    kind: "etherscan"
    rate_limit: 5

# -- Endpoints that you would like to monitor
endpoints:
  - addr: http://execution-client:8545
    name: "execution-client-name"
    kind: "rpc"

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# - HTTP port for forkmon interface
httpPort: 8080

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

# -- Additional env variables injected via a created secret
secretEnv: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 1Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something



================================================
FILE: charts/forkmon/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/forkmon/templates/_cmd.tpl
================================================
{{/*
# Default command
*/}}
{{- define "forkmon.defaultCommand" -}}
- sh
- -ac
- >
  cp -r /www /data/. && cd /data/ && /usr/local/bin/nodemonitor /data/config.toml
{{- range .Values.extraArgs }}
  {{ . }}
{{- end }}
{{- end }}


================================================
FILE: charts/forkmon/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "forkmon.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "forkmon.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "forkmon.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "forkmon.labels" -}}
helm.sh/chart: {{ include "forkmon.chart" . }}
{{ include "forkmon.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "forkmon.selectorLabels" -}}
app.kubernetes.io/name: {{ include "forkmon.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "forkmon.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "forkmon.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}


================================================
FILE: charts/forkmon/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "forkmon.fullname" . }}
  labels:
    {{- include "forkmon.labels" . | nindent 4 }}
data:
  config.toml: |
    {{- tpl .Values.config . | nindent 4 }}





================================================
FILE: charts/forkmon/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "forkmon.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "forkmon.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/forkmon/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "forkmon.fullname" . }}-headless
  labels:
    {{- include "forkmon.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ .Values.httpPort }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "forkmon.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/forkmon/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "forkmon.fullname" . }}
  labels:
    {{- include "forkmon.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.httpPort }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "forkmon.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/forkmon/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "forkmon.serviceAccountName" . }}
  labels:
    {{- include "forkmon.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/forkmon/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "forkmon.fullname" . }}
  labels:
    {{- include "forkmon.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "forkmon.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "forkmon.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "forkmon.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "forkmon.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: /data
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
            {{- include "forkmon.defaultCommand" . | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: storage
              mountPath: "/data"
            - name: config
              mountPath: "/data/config.toml"
              subPath: config.toml
              readOnly: true
          ports:
            - name: http
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "forkmon.fullname" . }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/forkmon/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "forkmon.fullname" . }}-test-connection"
  labels:
    {{- include "forkmon.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['{{ include "forkmon.fullname" . }}:{{ .Values.httpPort }}']
  restartPolicy: Never



================================================
FILE: charts/forky/README.md
================================================

# forky

![Version: 0.2.0](https://img.shields.io/badge/Version-0.2.0-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

A beacon chain fork choice viewer

**Homepage:** <https://github.com/ethpandaops/forky>

## Requirements

| Repository | Name | Version |
|------------|------|---------|
| https://charts.bitnami.com/bitnami | postgresql | 15.x.x |

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| config.forky.ethereum.network | string | `nil` |  |
| config.forky.indexer.driver_name | string | `"sqlite"` |  |
| config.forky.indexer.dsn | string | `":memory:"` |  |
| config.forky.retention_period | string | `"30m"` |  |
| config.forky.sources[0].config.address | string | `"http://localhost:5052"` |  |
| config.forky.sources[0].config.labels[0] | string | `"example_label"` |  |
| config.forky.sources[0].config.polling_interval | string | `"12s"` |  |
| config.forky.sources[0].name | string | `"example"` |  |
| config.forky.sources[0].type | string | `"beacon_node"` |  |
| config.forky.store.type | string | `"memory"` |  |
| config.listen_addr | string | `":5555"` |  |
| config.log_level | string | `"debug"` |  |
| config.metrics.addr | string | `":9090"` |  |
| config.metrics.enabled | bool | `true` |  |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the forky container |
| customCommand | list | `[]` | Command replacement for the forky container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPodPorts | list | `[]` | Extra Pod ports |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | forky container pull policy |
| image.repository | string | `"ethpandaops/forky"` | forky container image repository |
| image.tag | string | `"debian-latest"` | forky container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| postgresql.architecture | string | `"standalone"` |  |
| postgresql.auth.database | string | `"tracoor"` |  |
| postgresql.auth.enablePostgresUser | bool | `true` |  |
| postgresql.auth.password | string | `"postgres"` |  |
| postgresql.auth.postgresPassword | string | `"postgres"` |  |
| postgresql.auth.username | string | `"postgres"` |  |
| postgresql.enabled | bool | `false` | If enabled a postgres chart will be deployed as a dependency |
| postgresql.fullnameOverride | string | `""` |  |
| postgresql.image.registry | string | `"docker.io"` |  |
| postgresql.image.repository | string | `"bitnami/postgresql"` |  |
| postgresql.image.tag | string | `"16.4.0-debian-12-r2"` |  |
| postgresql.nameOverride | string | `""` |  |
| postgresql.primary.extendedConfiguration | string | `"max_connections = 1024\n"` |  |
| postgresql.primary.persistence.enabled | bool | `true` |  |
| postgresql.primary.persistence.size | string | `"8Gi"` |  |
| postgresql.primary.resources | object | `{}` |  |
| postgresql.pullPolicy | string | `"IfNotPresent"` |  |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/forky/Chart.lock
================================================
dependencies:
- name: postgresql
  repository: https://charts.bitnami.com/bitnami
  version: 15.5.38
digest: sha256:f67c7612736803ece8a669f8ca6b0555f3b78557bc0ecb732aa2e43f0df7750d
generated: "2024-10-04T09:44:02.943593963+10:00"



================================================
FILE: charts/forky/Chart.yaml
================================================
apiVersion: v2
name: forky
description: A beacon chain fork choice viewer
home: https://github.com/ethpandaops/forky
type: application
version: 0.2.0
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org
  - name: savid
    email: andrew.davis@ethereum.org
dependencies:
  - name: postgresql
    version: "15.x.x"
    repository: "https://charts.bitnami.com/bitnami"
    condition: postgresql.enabled



================================================
FILE: charts/forky/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/forky/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- forky container image repository
  repository: ethpandaops/forky
  # -- forky container image tag
  tag: debian-latest
  # -- forky container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

config:
  listen_addr: ":5555"
  log_level: "debug"
  metrics:
    addr: ":9090"
    enabled: true

  forky:
    retention_period: "30m"

    store:
      type: memory

    # If postgresql.enabled = true, this block will be overwritten.
    indexer:
      dsn: ":memory:"
      driver_name: sqlite
      # Example file sqlite:
      # dsn: "file:/data/forky.db"
      # driver_name: sqlite

    sources:
      - name: "example"
        type: "beacon_node"
        config:
          address: "http://localhost:5052"
          polling_interval: "12s"
          labels:
            - "example_label"

    ethereum:
      network:
        # name: "mainnet"
        # spec:
        #   seconds_per_slot: 12
        #   slots_per_epoch: 32
        #   genesis_time: 1606824023

        # name: "sepolia"
        # spec:
        #   seconds_per_slot: 12
        #   slots_per_epoch: 32
        #   genesis_time: 1655733600

        # name: "holesky"
        # spec:
        #   seconds_per_slot: 12
        #   slots_per_epoch: 32
        #   genesis_time: 1695902400

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Custom args for the forky container
customArgs: []

# -- Command replacement for the forky container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Extra Pod ports
extraPodPorts: []

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []

postgresql:
  # -- If enabled a postgres chart will be deployed as a dependency
  enabled: false
  nameOverride: ""
  fullnameOverride: ""
  architecture: "standalone"
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 16.4.0-debian-12-r2
  pullPolicy: IfNotPresent
  auth:
    enablePostgresUser: true
    postgresPassword: postgres
    database: tracoor
    username: postgres
    password: postgres
  primary:
    extendedConfiguration: |
      max_connections = 1024
    persistence:
      enabled: true
      size: 8Gi
    resources: {}



================================================
FILE: charts/forky/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/forky/ci/ct-values.yaml
================================================
config:
  forky:
    ethereum:
      network:
        name: "mainnet"
        spec:
          seconds_per_slot: 12
          slots_per_epoch: 32
          genesis_time: 1606824023



================================================
FILE: charts/forky/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "forky.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "forky.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "forky.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "forky.labels" -}}
helm.sh/chart: {{ include "forky.chart" . }}
{{ include "forky.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "forky.selectorLabels" -}}
app.kubernetes.io/name: {{ include "forky.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "forky.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "forky.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "forky.httpPort" -}}
{{ (split ":" .Values.config.listen_addr)._1 | default ":5555" }}
{{- end }}

{{- define "forky.metricsPort" -}}
{{ (split ":" .Values.config.metrics.addr)._1 | default ":9090" }}
{{- end -}}

{{- define "forky.postgresql.fullname" -}}
{{- if .Values.postgresql.fullnameOverride -}}
{{- .Values.postgresql.fullnameOverride | trunc 63 | trimSuffix "-" -}}
{{- else -}}
{{- $name := default "postgresql" .Values.postgresql.nameOverride -}}
{{- if contains $name .Release.Name -}}
{{- .Release.Name | trunc 63 | trimSuffix "-" -}}
{{- else -}}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" -}}
{{- end -}}
{{- end -}}
{{- end -}}



================================================
FILE: charts/forky/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "forky.fullname" . }}
  labels:
    {{- include "forky.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{- $config := deepCopy .Values.config -}}
    {{- if .Values.postgresql.enabled -}}
    {{- $_ := set $config.forky.indexer "dsn" (printf "postgres://%s:%s@%s:5432/%s?sslmode=disable" .Values.postgresql.auth.username .Values.postgresql.auth.password (include "forky.postgresql.fullname" $)  .Values.postgresql.auth.database) -}}
    {{- $_ := set $config.forky.indexer "driver_name" "postgres" -}}
    {{- end -}}
    {{ toYaml $config | nindent 4 }}



================================================
FILE: charts/forky/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "forky.fullname" . }}
  labels:
    {{- include "forky.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "forky.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "forky.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "forky.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/forky"
          - --config=/config.yaml
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
        ports:
          - name: http
            containerPort: {{ include "forky.httpPort" . }}
            protocol: TCP
          - name: metrics
            containerPort: {{ include "forky.metricsPort" . }}
            protocol: TCP
          {{- if .Values.extraPodPorts }}
            {{ toYaml .Values.extraPodPorts | nindent 10 }}
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "forky.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "forky.fullname" . }}



================================================
FILE: charts/forky/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "forky.fullname" . -}}
{{- $svcPort := include "forky.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "forky.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/forky/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "forky.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "forky.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "forky.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "forky.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "forky.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/forky/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "forky.fullname" . }}-env
  labels:
    {{- include "forky.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/forky/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "forky.fullname" . }}
  labels:
    {{- include "forky.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "forky.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ include "forky.metricsPort" . }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "forky.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/forky/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "forky.serviceAccountName" . }}
  labels:
    {{- include "forky.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/forky/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "forky.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "forky.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "forky.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/ganache/README.md
================================================

# ganache

![Version: 0.1.3](https://img.shields.io/badge/Version-0.1.3-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Ganache is an Ethereum simulator that makes developing Ethereum applications faster, easier, and safer. It includes all popular RPC functions and features (like events) and can be run deterministically to make development a breeze.

**Homepage:** <https://www.trufflesuite.com/ganache>

## Source Code

* <https://github.com/trufflesuite/ganache>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customCommand | list | `[]` | Command replacement for the ganache container |
| extraArgs | list | `[]` | Extra args for the ganache container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | Ganache container pull policy |
| image.repository | string | `"trufflesuite/ganache-cli"` | Ganache container image repository |
| image.tag | string | `"v6.12.2"` | Ganache container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initChownData.enabled | bool | `true` | Init container to set the correct permissions to access data directories |
| initChownData.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| initChownData.image.repository | string | `"busybox"` | Container repository |
| initChownData.image.tag | string | `"1.34.0"` | Container tag |
| initChownData.resources | object | `{}` | Resource requests and limits |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"5Gi"` | Requested size for volume claim template |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |

# Examples

## Private blockchain with pre-filled accounts generated from an HD wallet using a mnemonic phrase

```yaml
secretEnv:
  # Don't re-use this mnemonic for production environments
  MNEMONIC: census exchange hotel volcano sea hunt mother enlist twelve lonely cause female

extraArgs:
  - --mnemonic="$(MNEMONIC)"
  - --accounts=10
  - --defaultBalanceEther=1000
  - --networkId=5123
  - --chainId=5123
  - --blockTime=3
```

## Fork an existing blockchain

```yaml
extraEnv:
  - name: BLOCK_NUMBER
    value: "13331332"
secretEnv:
  INFURA_PROJECT_ID: "xxxxx"

extraArgs:
  - --fork="https://mainnet.infura.io/v3/$(INFURA_PROJECT_ID)@$(BLOCK_NUMBER)"
```



================================================
FILE: charts/ganache/Chart.yaml
================================================
apiVersion: v2
name: ganache
description: >
  Ganache is an Ethereum simulator that makes developing Ethereum applications faster, easier, and safer.
  It includes all popular RPC functions and features (like events) and can be run deterministically to make development a breeze.
home: https://www.trufflesuite.com/ganache
icon: https://www.trufflesuite.com/img/ganache-logomark.svg
sources:
  - https://github.com/trufflesuite/ganache
type: application
version: 0.1.3
appVersion: "6.12.2"
maintainers:
  - name: skylenet
    email: rafael@skyle.net



================================================
FILE: charts/ganache/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Private blockchain with pre-filled accounts generated from an HD wallet using a mnemonic phrase

```yaml
secretEnv:
  # Don't re-use this mnemonic for production environments
  MNEMONIC: census exchange hotel volcano sea hunt mother enlist twelve lonely cause female

extraArgs:
  - --mnemonic="$(MNEMONIC)"
  - --accounts=10
  - --defaultBalanceEther=1000
  - --networkId=5123
  - --chainId=5123
  - --blockTime=3
```

## Fork an existing blockchain

```yaml
extraEnv:
  - name: BLOCK_NUMBER
    value: "13331332"
secretEnv:
  INFURA_PROJECT_ID: "xxxxx"

extraArgs:
  - --fork="https://mainnet.infura.io/v3/$(INFURA_PROJECT_ID)@$(BLOCK_NUMBER)"
```



================================================
FILE: charts/ganache/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- Ganache container image repository
  repository: trufflesuite/ganache-cli
  # -- Ganache container image tag
  tag: v6.12.2
  # -- Ganache container pull policy
  pullPolicy: IfNotPresent

# -- Extra args for the ganache container
extraArgs: []
  #- --accounts=10
  #- --mnemonic="$(MNEMONIC)"

# -- Command replacement for the ganache container
customCommand: [] # Only change this if you need to change the default command

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http-api
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http-api
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 5Gi
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

# -- Additional env variables injected via a created secret
secretEnv: {}
# MNEMONIC: census exchange hotel volcano sea hunt mother enlist twelve lonely cause female

initChownData:
  # -- Init container to set the correct permissions to access data directories
  enabled: true
  image:
    # -- Container repository
    repository: busybox
    # -- Container tag
    tag: "1.34.0"
    # -- Container pull policy
    pullPolicy: IfNotPresent
  # -- Resource requests and limits
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi



================================================
FILE: charts/ganache/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/ganache/ci/ct-values.yaml
================================================
secretEnv:
  # Don't re-use this mnemonic for production environments
  MNEMONIC: census exchange hotel volcano sea hunt mother enlist twelve lonely cause female

extraArgs:
  - --mnemonic="$(MNEMONIC)"



================================================
FILE: charts/ganache/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "ganache.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "ganache.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "ganache.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "ganache.labels" -}}
helm.sh/chart: {{ include "ganache.chart" . }}
{{ include "ganache.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "ganache.selectorLabels" -}}
app.kubernetes.io/name: {{ include "ganache.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "ganache.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "ganache.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "ganache.httpPort" -}}
{{- printf "8545" -}}
{{- end -}}



================================================
FILE: charts/ganache/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "ganache.fullname" . -}}
{{- $svcPort := include "ganache.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "ganache.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/ganache/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "ganache.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "ganache.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "ganache.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "ganache.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "ganache.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/ganache/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ganache.fullname" . }}-env
  labels:
    {{- include "ganache.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/ganache/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "ganache.fullname" . }}-headless
  labels:
    {{- include "ganache.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "ganache.httpPort" . }}
      targetPort: http-api
      protocol: TCP
      name: http-api
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "ganache.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/ganache/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "ganache.fullname" . }}
  labels:
    {{- include "ganache.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "ganache.httpPort" . }}
      targetPort: http-api
      protocol: TCP
      name: http-api
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "ganache.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/ganache/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ganache.serviceAccountName" . }}
  labels:
    {{- include "ganache.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/ganache/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "ganache.fullname" . }}
  labels:
    {{- include "ganache.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "ganache.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "ganache.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "ganache.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "ganache.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- if .Values.initChownData.enabled }}
        - name: init-chown-data
          image: "{{ .Values.initChownData.image.repository }}:{{ .Values.initChownData.image.tag }}"
          imagePullPolicy: {{ .Values.initChownData.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }}", "/data"]
          resources:
      {{ toYaml .Values.initChownData.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: "/data"
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
            - node
            - /app/ganache-core.docker.cli.js
            - --host=0.0.0.0
            - --port={{ include "ganache.httpPort" . }}
            - --db=/data
            {{- if .Values.extraArgs }}
            {{ toYaml .Values.extraArgs | nindent 12}}
            {{- end }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: storage
              mountPath: "/data"
          ports:
            - name: http-api
              containerPort: {{ include "ganache.httpPort" . }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "ganache.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/ganache/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "ganache.fullname" . }}-test-connection"
  labels:
    {{- include "ganache.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - --location
       - --request
       - POST
       - '{{ include "ganache.fullname" . }}:{{ include "ganache.httpPort" . }}/'
       - --header
       - 'Content-Type: application/json'
       - --data-raw
       - '{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":1}'
  restartPolicy: Never



================================================
FILE: charts/genesis-generator/README.md
================================================

# genesis-generator

![Version: 0.2.3](https://img.shields.io/badge/Version-0.2.3-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Generate testnet genesis files for the execution and consensus layer clients

**Homepage:** <https://github.com/skylenet/ethereum-genesis-generator>

## Source Code

* <https://github.com/skylenet/ethereum-genesis-generator>
* <https://github.com/protolambda/eth2-testnet-genesis>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| config | object | See `values.yaml` | Config file |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the genesis-generator container |
| customCommand | list | `[]` | Command replacement for the genesis-generator container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | genesis-generator container pull policy |
| image.repository | string | `"skylenet/ethereum-genesis-generator"` | genesis-generator container image repository |
| image.tag | string | `"latest"` | genesis-generator container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initChownData.enabled | bool | `true` | Init container to set the correct permissions to access data directories |
| initChownData.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| initChownData.image.repository | string | `"busybox"` | Container repository |
| initChownData.image.tag | string | `"1.34.0"` | Container tag |
| initChownData.resources | object | `{}` | Resource requests and limits |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"1Gi"` | Requested size for volume claim template |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| terminationGracePeriodSeconds | int | `5` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |



================================================
FILE: charts/genesis-generator/Chart.yaml
================================================
apiVersion: v2
name: genesis-generator
description: Generate testnet genesis files for the execution and consensus layer clients
home: https://github.com/skylenet/ethereum-genesis-generator
sources:
  - https://github.com/skylenet/ethereum-genesis-generator
  - https://github.com/protolambda/eth2-testnet-genesis
type: application
version: 0.2.3
maintainers:
  - name: skylenet
    email: rafael@skyle.net



================================================
FILE: charts/genesis-generator/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/genesis-generator/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- genesis-generator container image repository
  repository: skylenet/ethereum-genesis-generator
  # -- genesis-generator container image tag
  tag: latest
  # -- genesis-generator container pull policy
  pullPolicy: IfNotPresent

# -- Custom args for the genesis-generator container
customArgs: []

# -- Command replacement for the genesis-generator container
customCommand: [] # Only change this if you need to change the default command
# -- Config file
# @default -- See `values.yaml`
config:
  el:
    genesis-config.yaml: |
      mnemonic: "stumble horn valley travel milk void screen bulk wink hood cup item glove setup wrong toward erase invite saddle this poverty basket index lab"
      eth1_premine:
        "m/44'/60'/0'/0/0": 10000000ETH
        "m/44'/60'/0'/0/1": 10000000ETH
        "m/44'/60'/0'/0/2": 10000000ETH
        "m/44'/60'/0'/0/3": 10000000ETH
        "m/44'/60'/0'/0/4": 10000000ETH
        "m/44'/60'/0'/0/5": 10000000ETH
      eth1_premine_addrs: {}
      chain_id: 1337331
      deposit_contract_address: "0x4242424242424242424242424242424242424242"
      eth1_genesis_timestamp: 0
      terminal_total_difficulty: 60000000
      clique:
        enabled: true
        signers:
          - 36d56343bc308d4ffaac2f793d121aba905fa6cc
          - 5e762d4a3847cadaf40a4b0c39574b0ff6698c78
          - 15d7acc1019fdf8ab4f0f7bd31ec1487ecb5a2bd

  cl:
    config.yaml: |
      PRESET_BASE: 'mainnet'
      CONFIG_NAME: testnet
      MIN_GENESIS_ACTIVE_VALIDATOR_COUNT: 16384
      MIN_GENESIS_TIME: 0
      GENESIS_FORK_VERSION: 0x13001020
      GENESIS_DELAY: 120
      # Altair
      ALTAIR_FORK_VERSION: 0x01001020
      ALTAIR_FORK_EPOCH: 36660
      # Merge
      MERGE_FORK_VERSION: 0x02001020
      MERGE_FORK_EPOCH: 18446744073709551615
      # Sharding
      SHARDING_FORK_VERSION: 0x03001020
      SHARDING_FORK_EPOCH: 18446744073709551615
      # Time parameters
      # ---------------------------------------------------------------
      # 12 seconds
      SECONDS_PER_SLOT: 12
      # 14 (estimate from Eth1 mainnet)
      SECONDS_PER_ETH1_BLOCK: 14
      # 2**8 (= 256) epochs ~27 hours
      MIN_VALIDATOR_WITHDRAWABILITY_DELAY: 256
      # 2**8 (= 256) epochs ~27 hours
      SHARD_COMMITTEE_PERIOD: 256
      # 2**11 (= 2,048) Eth1 blocks ~8 hours
      ETH1_FOLLOW_DISTANCE: 12
      # Validator cycle
      # ---------------------------------------------------------------
      # 2**2 (= 4)
      INACTIVITY_SCORE_BIAS: 4
      # 2**4 (= 16)
      INACTIVITY_SCORE_RECOVERY_RATE: 16
      # 2**4 * 10**9 (= 16,000,000,000) Gwei
      EJECTION_BALANCE: 16000000000
      # 2**2 (= 4)
      MIN_PER_EPOCH_CHURN_LIMIT: 4
      # 2**16 (= 65,536)
      CHURN_LIMIT_QUOTIENT: 65536
      # Deposit contract
      # ---------------------------------------------------------------
      DEPOSIT_CHAIN_ID: 1337331
      DEPOSIT_NETWORK_ID: 1337331
      DEPOSIT_CONTRACT_ADDRESS: 0x4242424242424242424242424242424242424242
    mnemonics.yaml: |
      - mnemonic: "giant issue aisle success illegal bike spike question tent bar rely arctic volcano long crawl hungry vocal artwork sniff fantasy very lucky have athlete"  # a 24 word BIP 39 mnemonic
        count: 20000

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 120
  failureThreshold: 3

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5

# -- Node selector for pods
nodeSelector: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 1Gi
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 5

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []
# - name: CL_TIMESTAMP_DELAY_SECONDS
# - value: "180"

# -- Additional env variables injected via a created secret
secretEnv: {}

initChownData:
  # -- Init container to set the correct permissions to access data directories
  enabled: true
  image:
    # -- Container repository
    repository: busybox
    # -- Container tag
    tag: "1.34.0"
    # -- Container pull policy
    pullPolicy: IfNotPresent
  # -- Resource requests and limits
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi



================================================
FILE: charts/genesis-generator/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/genesis-generator/ci/test-values.yaml
================================================
config:
  cl:
    mnemonics.yaml: |
      - mnemonic: "giant issue aisle success illegal bike spike question tent bar rely arctic volcano long crawl hungry vocal artwork sniff fantasy very lucky have athlete"  # a 24 word BIP 39 mnemonic
        count: 1000



================================================
FILE: charts/genesis-generator/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "genesis-generator.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "genesis-generator.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "genesis-generator.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "genesis-generator.labels" -}}
helm.sh/chart: {{ include "genesis-generator.chart" . }}
{{ include "genesis-generator.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "genesis-generator.selectorLabels" -}}
app.kubernetes.io/name: {{ include "genesis-generator.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "genesis-generator.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "genesis-generator.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "genesis-generator.httpPort" -}}
{{- printf "8000" -}}
{{- end -}}



================================================
FILE: charts/genesis-generator/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "genesis-generator.fullname" . }}-cl
  labels:
    {{- include "genesis-generator.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.config.cl }}
  {{ $key }}: |
    {{- $value | nindent 4 }}
{{- end }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "genesis-generator.fullname" . }}-el
  labels:
    {{- include "genesis-generator.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.config.el }}
  {{ $key }}: |
    {{- $value | nindent 4 }}
{{- end }}



================================================
FILE: charts/genesis-generator/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "genesis-generator.fullname" . -}}
{{- $svcPort := include "genesis-generator.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "genesis-generator.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/genesis-generator/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "genesis-generator.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "genesis-generator.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "genesis-generator.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "genesis-generator.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "genesis-generator.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/genesis-generator/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "genesis-generator.fullname" . }}-env
  labels:
    {{- include "genesis-generator.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/genesis-generator/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "genesis-generator.fullname" . }}-headless
  labels:
    {{- include "genesis-generator.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "genesis-generator.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "genesis-generator.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/genesis-generator/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "genesis-generator.fullname" . }}
  labels:
    {{- include "genesis-generator.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "genesis-generator.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "genesis-generator.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/genesis-generator/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "genesis-generator.serviceAccountName" . }}
  labels:
    {{- include "genesis-generator.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/genesis-generator/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "genesis-generator.fullname" . }}
  labels:
    {{- include "genesis-generator.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "genesis-generator.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "genesis-generator.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "genesis-generator.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "genesis-generator.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- if .Values.initChownData.enabled }}
        - name: init-chown-data
          image: "{{ .Values.initChownData.image.repository }}:{{ .Values.initChownData.image.tag }}"
          imagePullPolicy: {{ .Values.initChownData.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }}", "/data"]
          resources:
      {{ toYaml .Values.initChownData.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: "/data"
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if gt (len .Values.customCommand) 0 }}
          command:
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- else }}
          args: ["all"]
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: storage
              mountPath: "/data"
            - name: config-el
              mountPath: "/config/el"
              readOnly: true
            - name: config-cl
              mountPath: "/config/cl"
              readOnly: true
          ports:
            - name: http
              containerPort: {{ include "genesis-generator.httpPort" . }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: SERVER_PORT
              value: "{{ include "genesis-generator.httpPort" . }}"
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "genesis-generator.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config-el
          configMap:
            name: {{ include "genesis-generator.fullname" . }}-el
        - name: config-cl
          configMap:
            name: {{ include "genesis-generator.fullname" . }}-cl
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/genesis-generator/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "genesis-generator.fullname" . }}-test-connection-el"
  labels:
    {{- include "genesis-generator.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - --location
       - --request
       - GET
       - '{{ include "genesis-generator.fullname" . }}:{{ include "genesis-generator.httpPort" . }}/'
  restartPolicy: Never

---
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "genesis-generator.fullname" . }}-test-connection-cl"
  labels:
    {{- include "genesis-generator.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - --location
       - --request
       - GET
       - '{{ include "genesis-generator.fullname" . }}:{{ include "genesis-generator.httpPort" . }}/'
  restartPolicy: Never



================================================
FILE: charts/geth/README.md
================================================

# geth

![Version: 1.0.9](https://img.shields.io/badge/Version-1.0.9-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Go Ethereum (Geth for short) is one of the original implementations of the Ethereum protocol. Currently, it is the most widespread client with the biggest user base and variety of tooling for users and developers. It is written in Go, fully open source and licensed under the GNU LGPL v3

**Homepage:** <https://geth.ethereum.org/>

## Source Code

* <https://github.com/ethereum/go-ethereum>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| authPort | int | `8551` | Engine Port (Auth Port) |
| config | string | See `values.yaml` for example | TOML config file |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customCommand | list | `[]` | Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplate instead. |
| defaultCommandTemplate | string | See `values.yaml` | Template used for the default command |
| extraArgs | list | `[]` | Extra args for the geth container |
| extraContainerPorts | list | `[]` | Additional ports for the main container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers or extraContainerPorts |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `8545` | HTTP Port |
| image.pullPolicy | string | `"IfNotPresent"` | geth container pull policy |
| image.repository | string | `"ethereum/client-go"` | geth container image repository |
| image.tag | string | `"stable"` | geth container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initChownData.enabled | bool | `true` | Init container to set the correct permissions to access data directories |
| initChownData.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| initChownData.image.repository | string | `"busybox"` | Container repository |
| initChownData.image.tag | string | `"1.34.0"` | Container tag |
| initChownData.resources | object | `{}` | Resource requests and limits |
| initContainers | list | `[]` | Additional init containers |
| jwt | string | `"ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a"` | JWT secret used by client as a secret. Change this value. |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| metricsPort | int | `6060` | Metrics Port |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| p2pNodePort.enabled | bool | `false` | Expose P2P port via NodePort |
| p2pNodePort.initContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.initContainer.image.repository | string | `"lachlanevenson/k8s-kubectl"` | Container image to fetch nodeport information |
| p2pNodePort.initContainer.image.tag | string | `"v1.25.4"` | Container tag |
| p2pNodePort.port | int | `31000` | NodePort to be used |
| p2pNodePort.portForwardContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.portForwardContainer.image.repository | string | `"alpine/socat"` | Container image for the port forwarder |
| p2pNodePort.portForwardContainer.image.tag | string | `"latest"` | Container tag |
| p2pPort | int | `30303` | P2P Port |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"20Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| rbac.clusterRules | list | See `values.yaml` | Required ClusterRole rules |
| rbac.create | bool | `true` | Specifies whether RBAC resources are to be created |
| rbac.rules | list | See `values.yaml` | Required ClusterRole rules |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/debug/metrics/prometheus"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `300` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |
| wsPort | int | `8545` | WS Port |

# Examples

## Connecting to the holesky test network

```yaml
extraArgs:
  - --holesky
  - --maxpeers=60
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.
Currently geth doesn't allow you to announce a a different discovery port, which would be a requirement to run multiple replicas within the same chart.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```



================================================
FILE: charts/geth/Chart.yaml
================================================
apiVersion: v2
name: geth
description: >
  Go Ethereum (Geth for short) is one of the original implementations of the Ethereum protocol.
  Currently, it is the most widespread client with the biggest user base and variety of tooling for users and developers.
  It is written in Go, fully open source and licensed under the GNU LGPL v3
home: https://geth.ethereum.org/
icon: https://launchpad.ethereum.org/static/media/gethereum-mascot-circle.75cbd3a5.png
sources:
  - https://github.com/ethereum/go-ethereum
type: application
version: 1.0.9
maintainers:
  - name: skylenet
    email: rafael@skyle.net
  - name: barnabasbusa
    email: busa.barnabas@gmail.com



================================================
FILE: charts/geth/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Connecting to the holesky test network

```yaml
extraArgs:
  - --holesky
  - --maxpeers=60
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.
Currently geth doesn't allow you to announce a a different discovery port, which would be a requirement to run multiple replicas within the same chart.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```



================================================
FILE: charts/geth/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- geth container image repository
  repository: ethereum/client-go
  # -- geth container image tag
  tag: stable
  # -- geth container pull policy
  pullPolicy: IfNotPresent

# -- Extra args for the geth container
extraArgs: []
  #- --holesky

# -- TOML config file
# @default -- See `values.yaml` for example
config: |
  [Node.P2P]
  DialRatio = 3

# -- JWT secret used by client as a secret. Change this value.
jwt: ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a

# -- Template used for the default command
# @default -- See `values.yaml`
defaultCommandTemplate: |
  - sh
  - -ac
  - >
  {{- if .Values.p2pNodePort.enabled }}
    . /env/init-nodeport;
  {{- end }}
    exec geth
    --datadir=/data
    --config=/config/geth.toml
  {{- if .Values.p2pNodePort.enabled }}
    {{- if not (contains "--nat=" (.Values.extraArgs | join ",")) }}
    --nat=extip:$EXTERNAL_IP
    {{- end }}
    {{- if not (contains "--port=" (.Values.extraArgs | join ",")) }}
    --port=$EXTERNAL_PORT
    {{- end }}
  {{- else }}
    {{- if not (contains "--nat=" (.Values.extraArgs | join ",")) }}
    --nat=extip:$(POD_IP)
    {{- end }}
    {{- if not (contains "--port=" (.Values.extraArgs | join ",")) }}
    --port={{ include "geth.p2pPort" . }}
    {{- end }}
  {{- end }}
    --http
    --http.addr=0.0.0.0
    --http.port={{ .Values.httpPort }}
    --http.vhosts=*
    --http.corsdomain=*
    --ws
    --ws.addr=0.0.0.0
    --ws.port={{ .Values.wsPort }}
    --ws.origins=*
    --authrpc.jwtsecret=/data/jwt.hex
    --authrpc.addr=0.0.0.0
    --authrpc.port={{ .Values.authPort }}
    --authrpc.vhosts=*
    --metrics
    --metrics.addr=0.0.0.0
    --metrics.port={{ .Values.metricsPort }}
  {{- range .Values.extraArgs }}
    {{ tpl . $ }}
  {{- end }}

# -- Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplate instead.
customCommand: []

# When p2pNodePort is enabled, your P2P port will be exposed via service type NodePort.
# This is useful if you want to expose and announce your node to the Internet.
# Limitation: You can only one have one replica when exposing via NodePort.
#             Check the chart README.md for more details
p2pNodePort:
  # -- Expose P2P port via NodePort
  enabled: false
  # -- NodePort to be used
  port: 31000
  initContainer:
    image:
      # -- Container image to fetch nodeport information
      repository: lachlanevenson/k8s-kubectl
      # -- Container tag
      tag: v1.25.4
      # -- Container pull policy
      pullPolicy: IfNotPresent
  portForwardContainer:
    image:
      # -- Container image for the port forwarder
      repository: alpine/socat
      # -- Container tag
      tag: latest
      # -- Container pull policy
      pullPolicy: IfNotPresent

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http-rpc
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http-rpc
  initialDelaySeconds: 10
  periodSeconds: 10

# -- P2P Port
p2pPort: 30303

# -- HTTP Port
httpPort: 8545

# -- WS Port
wsPort: 8545

# -- Engine Port (Auth Port)
authPort: 8551

# -- Metrics Port
metricsPort: 6060

# -- Node selector for pods
nodeSelector: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 20Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

rbac:
  # -- Specifies whether RBAC resources are to be created
  create: true
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  clusterRules:
     # Required to obtain the nodes external IP
    - apiGroups: [""]
      resources:
      - "nodes"
      verbs:
      - "get"
      - "list"
      - "watch"
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  rules:
    # Required to get information about the services nodePort.
    - apiGroups: [""]
      resources:
      - "services"
      verbs:
      - "get"
      - "list"
      - "watch"

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 300

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers or extraContainerPorts
extraPorts: []

# -- Additional ports for the main container
extraContainerPorts: []

# -- Additional env variables
extraEnv: []

# -- Additional env variables injected via a created secret
secretEnv: {}
# MY_PASSWORD: supersecret

initChownData:
  # -- Init container to set the correct permissions to access data directories
  enabled: true
  image:
    # -- Container repository
    repository: busybox
    # -- Container tag
    tag: "1.34.0"
    # -- Container pull policy
    pullPolicy: IfNotPresent
  # -- Resource requests and limits
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /debug/metrics/prometheus
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/geth/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/geth/ci/default-values.yaml
================================================
# Leave empty so that CT tests with default values



================================================
FILE: charts/geth/templates/_cmd.tpl
================================================
{{/*
# Default command
*/}}
{{- define "geth.defaultCommand" -}}
{{- tpl .Values.defaultCommandTemplate . }}
{{- end }}



================================================
FILE: charts/geth/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "geth.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "geth.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "geth.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "geth.labels" -}}
helm.sh/chart: {{ include "geth.chart" . }}
{{ include "geth.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "geth.selectorLabels" -}}
app.kubernetes.io/name: {{ include "geth.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "geth.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "geth.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{/*
Create the name of the cluster role.
It needs to be namespace prefixed to avoid naming conflicts when using the same deployment name across namespaces.
*/}}
{{- define "geth.clusterRoleName" -}}
{{ .Release.Namespace }}-{{ include "geth.fullname" . }}
{{- end }}

{{- define "geth.p2pPort" -}}
{{- if .Values.p2pNodePort.enabled }}
{{- print .Values.p2pNodePort.port }}
{{- else }}
{{- print .Values.p2pPort }}
{{- end }}
{{- end -}}

{{- define "geth.replicas" -}}
{{- if and (.Values.p2pNodePort.enabled) (gt (int .Values.replicas)  1) }}
{{- print 1 }}
{{ else }}
{{- print .Values.replicas }}
{{- end }}
{{- end -}}



================================================
FILE: charts/geth/templates/clusterrole.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "geth.clusterRoleName" . }}
  labels:
    {{- include "geth.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.clusterRules | nindent 0 }}
{{- end }}



================================================
FILE: charts/geth/templates/clusterrolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "geth.clusterRoleName" . }}
  labels:
    {{- include "geth.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "geth.clusterRoleName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "geth.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/geth/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "geth.fullname" . }}
  labels:
    {{- include "geth.labels" . | nindent 4 }}
data:
  geth.toml: |
    {{- .Values.config | nindent 4 }}


================================================
FILE: charts/geth/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "geth.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "geth.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/geth/templates/NOTES.txt
================================================



================================================
FILE: charts/geth/templates/poddisruptionbudget.yaml
================================================
{{- if .Values.podDisruptionBudget }}
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ include "geth.fullname" . }}
  labels:
    {{- include "geth.labels" . | nindent 4 }}
spec:
{{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
{{- end }}
{{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
{{- end }}
  selector:
    matchLabels:
      {{- include "geth.selectorLabels" . | nindent 6 }}
{{- end }}



================================================
FILE: charts/geth/templates/role.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "geth.serviceAccountName" . }}
  labels:
    {{- include "geth.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.rules | nindent 0 }}
{{- end }}



================================================
FILE: charts/geth/templates/rolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "geth.serviceAccountName" . }}
  labels:
    {{- include "geth.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "geth.serviceAccountName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "geth.serviceAccountName" . }}
{{- end }}



================================================
FILE: charts/geth/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "geth.fullname" . }}-env
  labels:
    {{- include "geth.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "geth.fullname" . }}-jwt
type: Opaque
data:
  jwt.hex: {{ .Values.jwt | b64enc }}


================================================
FILE: charts/geth/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "geth.fullname" . }}-headless
  labels:
    {{- include "geth.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "geth.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "geth.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: {{ .Values.httpPort }}
      targetPort: http-rpc
      protocol: TCP
      name: http-rpc
    {{- if ne .Values.httpPort .Values.wsPort }}  
    - port: {{ .Values.wsPort }}
      targetPort: ws-rpc
      protocol: TCP
      name: ws-rpc
    {{- end }}
    - port: {{ .Values.authPort }}
      targetPort: auth-rpc
      protocol: TCP
      name: auth-rpc
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "geth.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/geth/templates/service.p2p.nodeport.yaml
================================================
{{- if .Values.p2pNodePort.enabled -}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "geth.fullname" $ }}-p2p-0
  labels:
    {{- include "geth.labels" $ | nindent 4 }}
    pod: {{ include "geth.fullname" $ }}-0
    type: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p-tcp
      port: {{ include "geth.p2pPort" $ }}
      protocol: TCP
      targetPort: p2p-tcp
      nodePort: {{ include "geth.p2pPort" $ }}
    - name: p2p-udp
      port: {{ include "geth.p2pPort" $ }}
      protocol: UDP
      targetPort: p2p-udp
      nodePort: {{ include "geth.p2pPort" $ }}
  selector:
    {{- include "geth.selectorLabels" $ | nindent 4 }}
    statefulset.kubernetes.io/pod-name: "{{ include "geth.fullname" $ }}-0"
{{- end }}



================================================
FILE: charts/geth/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "geth.fullname" . }}
  labels:
    {{- include "geth.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - port: {{ include "geth.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "geth.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: {{ .Values.httpPort }}
      targetPort: http-rpc
      protocol: TCP
      name: http-rpc
    {{- if ne .Values.httpPort .Values.wsPort }}  
    - port: {{ .Values.wsPort }}
      targetPort: ws-rpc
      protocol: TCP
      name: ws-rpc
    {{- end }}
    - port: {{ .Values.authPort }}
      targetPort: auth-rpc
      protocol: TCP
      name: auth-rpc
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "geth.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/geth/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "geth.serviceAccountName" . }}
  labels:
    {{- include "geth.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/geth/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "geth.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "geth.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "geth.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/geth/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "geth.fullname" . }}
  labels:
    {{- include "geth.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ include "geth.replicas" . }}
  selector:
    matchLabels:
      {{- include "geth.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "geth.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "geth.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "geth.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- tpl (toYaml .Values.initContainers | nindent 8) $ }}
      {{- end }}
      {{- if .Values.p2pNodePort.enabled }}
        - name: init-nodeport
          image: "{{ .Values.p2pNodePort.initContainer.image.repository }}:{{ .Values.p2pNodePort.initContainer.image.tag }}"
          imagePullPolicy: {{.Values.p2pNodePort.initContainer.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - sh
            - -c
            - >
              export EXTERNAL_PORT=$(kubectl get services -l "pod in (${POD_NAME}), type in (p2p)" -o jsonpath='{.items[0].spec.ports[0].nodePort}');
              export EXTERNAL_IP=$(kubectl get nodes "${NODE_NAME}" -o jsonpath='{.status.addresses[?(@.type=="ExternalIP")].address}');
              echo "EXTERNAL_PORT=$EXTERNAL_PORT" >  /env/init-nodeport;
              echo "EXTERNAL_IP=$EXTERNAL_IP"     >> /env/init-nodeport;
              cat /env/init-nodeport;
          volumeMounts:
            - name: env-nodeport
              mountPath: /env
      {{- end }}
      {{- if .Values.initChownData.enabled }}
        - name: init-chown-data
          image: "{{ .Values.initChownData.image.repository }}:{{ .Values.initChownData.image.tag }}"
          imagePullPolicy: {{ .Values.initChownData.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }}", "/data"]
          resources:
      {{ toYaml .Values.initChownData.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: "/data"
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
            {{- include "geth.defaultCommand" . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            {{- if .Values.p2pNodePort.enabled }}
            - name: env-nodeport
              mountPath: /env
            {{- end }}
            - name: storage
              mountPath: "/data"
            - name: jwt
              mountPath: "/data/jwt.hex"
              subPath: jwt.hex
              readOnly: true
            - name: config
              mountPath: "/config"
              readOnly: true
          ports:
            {{- if .Values.extraContainerPorts }}
              {{ toYaml .Values.extraContainerPorts | nindent 12}}
            {{- end }}
            - name: p2p-tcp
              containerPort: {{ include "geth.p2pPort" . }}
              protocol: TCP
            - name: p2p-udp
              containerPort: {{ include "geth.p2pPort" . }}
              protocol: UDP
            - name: http-rpc
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
            - name: ws-rpc
              containerPort: {{ .Values.wsPort }}
              protocol: TCP
            - name: auth-rpc
              containerPort: {{ .Values.authPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "geth.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ tpl (toYaml .Values.extraContainers | nindent 8) $ }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: jwt
          secret:
            secretName: {{ include "geth.fullname" . }}-jwt
      {{- if .Values.p2pNodePort.enabled }}
        - name: env-nodeport
          emptyDir: {}
      {{- end }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "geth.fullname" . }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/geth/templates/tests/test-connection.yaml
================================================

apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "geth.fullname" . }}-test-connection"
  labels:
    {{- include "geth.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
        - --location
        - --request
        - POST
        - '{{ include "geth.fullname" . }}:{{ .Values.httpPort }}/'
        - --header
        - 'Content-Type: application/json'
        - --data-raw
        - '{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":67}'
  restartPolicy: Never



================================================
FILE: charts/grandine/README.md
================================================

# grandine

![Version: 0.1.3](https://img.shields.io/badge/Version-0.1.3-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

A currently closed source, but hopefully soon to be open-source Ethereum Consensus layer client, written in Rust.

**Homepage:** <https://sifrai.com>

## Source Code

* <https://github.com/sifraitech/grandine>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| checkpointSync | object | `{"enabled":false,"url":""}` | Checkpoint Sync |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customCommand | list | `[]` | Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplates instead. |
| defaultBeaconCommandTemplate | string | See `values.yaml` | Template used for the default beacon command |
| extraArgs | list | `[]` | Extra args for the grandine container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `5052` | HTTP Port |
| image.pullPolicy | string | `"IfNotPresent"` | grandine container pull policy |
| image.repository | string | `"sifrai/grandine"` | grandine container image repository |
| image.tag | string | `"unstable"` | grandine container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initChownData.enabled | bool | `true` | Init container to set the correct permissions to access data directories |
| initChownData.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| initChownData.image.repository | string | `"busybox"` | Container repository |
| initChownData.image.tag | string | `"1.34.0"` | Container tag |
| initChownData.resources | object | `{}` | Resource requests and limits |
| initContainers | list | `[]` | Additional init containers |
| jwt | string | `"ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a"` | JWT secret used by client as a secret. Change this value. |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| metricsPort | int | `5054` | Metrics Port |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| p2pNodePort.enabled | bool | `false` | Expose P2P port via NodePort |
| p2pNodePort.initContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.initContainer.image.repository | string | `"lachlanevenson/k8s-kubectl"` | Container image to fetch nodeport information |
| p2pNodePort.initContainer.image.tag | string | `"v1.25.4"` | Container tag |
| p2pNodePort.port | int | `31000` | NodePort to be used |
| p2pPort | int | `9000` | P2P Port |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"20Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| rbac.clusterRules | list | See `values.yaml` | Required ClusterRole rules |
| rbac.create | bool | `true` | Specifies whether RBAC resources are to be created |
| rbac.rules | list | See `values.yaml` | Required ClusterRole rules |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `300` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |

# Examples

## Beacon node on the Holesky testnet connected to Holesky via Infura

```yaml
mode: "beacon"

extraArgs:
  - --network=holesky
  - --ee-endpoint=<EXECUTION-ENDPOINT>
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```

## Validator node targeting a beacon node service

This example runs a validator on the holesky network that targets a pre-existing `grandine-beacon`
service by injecting the all-accounts.keystore.json` file via a secret ENV var. You could use a similar
approach to fetch your secrets from some external secret management system (Hashicorp Vault, Azure key vault, etc.):

```yaml
replicas: 1

mode: validator

initContainers:
  - name: init-keystore
    image: bash:latest
    imagePullPolicy: IfNotPresent
    securityContext:
      runAsNonRoot: false
      runAsUser: 0
    command:
    - bash
    - -c
    - >
      apk add jq;
      export INDEX=$(echo $(hostname)| rev | cut -d'-' -f 1 | rev);
      mkdir -p /data/validator/keys;
      mkdir -p /data/validator/secrets;
      KEY_COUNT="NODE_${INDEX}_KEY_COUNT";
      for ((i = 0 ; i < "${!KEY_COUNT}" ; i++ ));
      do
        key="NODE_${INDEX}_KEY_${i}";
        PUBKEY=$(echo ${!key} | jq '.pubkey' -j);
        echo ${!key} > "/data/validator/keys/0x${PUBKEY}.json";
        secret="NODE_${INDEX}_SECRET_${i}";
        echo ${!secret} > "/data/validator/secrets/0x${PUBKEY}.txt";
        echo "Added 0x${PUBKEY}";
      done
    volumeMounts:
      - name: storage
        mountPath: "/data"
        readOnly:
    env:
      - name: NODE_0_KEY_COUNT
        value: "1"
      - name: NODE_0_SECRET_0
        valueFrom:
          secretKeyRef:
            # Name of the secret that will be generated for you. This is normally `${RELEASE-name}-env`
            # You might need to change this
            name: grandine-env
            key: NODE_0_SECRET_0
      - name: NODE_0_KEY_0
        valueFrom:
          secretKeyRef:
            # See comment on the previous secretKeyRef
            name: grandine-env
            key: NODE_0_KEY_0

extraArgs:
  - --validator-keys=/data/validator/keys:/data/validator/secrets
  - --beacon-node-api-endpoint=http://grandine-beacon:5051
  - --network=auto

livenessProbe:
  tcpSocket: null
  httpGet:
    path: /metrics
    port: 8008

readinessProbe:
  tcpSocket: null
  httpGet:
    path: /metrics
    port: 8008

secretEnv:
  # Note: Never publish any of your production secrets online. These are just used for testing purposes.
  NODE_0_SECRET_0: Mrc085nWbjTc1mhAPt_Ukj4m_vui2iUQWr6TwNRq_4k=
  NODE_0_KEY_0: {"crypto":{"checksum":{"function":"sha256","message":"7bbdd8cda652d792dceae7477b911106296620c44a6c1d0356c6ff52daca2b5b","params":{}},"cipher":{"function":"aes-128-ctr","message":"689f5c97fad87665e2fe8acbc0aad91bdc85de7756ebdc496f1373bae01c02c8","params":{"iv":"7b8e1ed4480dee19cbb1528394ad2095"}},"kdf":{"function":"pbkdf2","message":"","params":{"c":262144,"dklen":32,"prf":"hmac-sha256","salt":"bb560dfbb56016e0630e4415b74d86ede9090c0545854ed7c0ad921047a39cef"}}},"path":"","pubkey":"8e48cbd28d25847a6b122a62179b6ac11ee7877a4c489799918308e6252b7f6601f969179ac7465e256c01815b71b6d1","uuid":"f13ece4f-d57e-4789-accc-ad50f0fef882","version":4}

```



================================================
FILE: charts/grandine/Chart.yaml
================================================
apiVersion: v2
name: grandine
description: A currently closed source, but hopefully soon to be open-source Ethereum Consensus layer client, written in Rust.
home: https://sifrai.com
icon: https://github.com/sifraitech/grandine/blob/master/gui.png
sources:
  - https://github.com/sifraitech/grandine
type: application
version: 0.1.3
maintainers:
  - name: barnabasbusa
    email: busa.barnabas@gmail.com



================================================
FILE: charts/grandine/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Beacon node on the Holesky testnet connected to Holesky via Infura

```yaml
mode: "beacon"

extraArgs:
  - --network=holesky
  - --ee-endpoint=<EXECUTION-ENDPOINT>
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```


## Validator node targeting a beacon node service

This example runs a validator on the holesky network that targets a pre-existing `grandine-beacon`
service by injecting the all-accounts.keystore.json` file via a secret ENV var. You could use a similar
approach to fetch your secrets from some external secret management system (Hashicorp Vault, Azure key vault, etc.):

```yaml
replicas: 1

mode: validator

initContainers:
  - name: init-keystore
    image: bash:latest
    imagePullPolicy: IfNotPresent
    securityContext:
      runAsNonRoot: false
      runAsUser: 0
    command:
    - bash
    - -c
    - >
      apk add jq;
      export INDEX=$(echo $(hostname)| rev | cut -d'-' -f 1 | rev);
      mkdir -p /data/validator/keys;
      mkdir -p /data/validator/secrets;
      KEY_COUNT="NODE_${INDEX}_KEY_COUNT";
      for ((i = 0 ; i < "${!KEY_COUNT}" ; i++ ));
      do
        key="NODE_${INDEX}_KEY_${i}";
        PUBKEY=$(echo ${!key} | jq '.pubkey' -j);
        echo ${!key} > "/data/validator/keys/0x${PUBKEY}.json";
        secret="NODE_${INDEX}_SECRET_${i}";
        echo ${!secret} > "/data/validator/secrets/0x${PUBKEY}.txt";
        echo "Added 0x${PUBKEY}";
      done
    volumeMounts:
      - name: storage
        mountPath: "/data"
        readOnly:
    env:
      - name: NODE_0_KEY_COUNT
        value: "1"
      - name: NODE_0_SECRET_0
        valueFrom:
          secretKeyRef:
            # Name of the secret that will be generated for you. This is normally `${RELEASE-name}-env`
            # You might need to change this
            name: grandine-env
            key: NODE_0_SECRET_0
      - name: NODE_0_KEY_0
        valueFrom:
          secretKeyRef:
            # See comment on the previous secretKeyRef
            name: grandine-env
            key: NODE_0_KEY_0

extraArgs:
  - --validator-keys=/data/validator/keys:/data/validator/secrets
  - --beacon-node-api-endpoint=http://grandine-beacon:5051
  - --network=auto

livenessProbe:
  tcpSocket: null
  httpGet:
    path: /metrics
    port: 8008

readinessProbe:
  tcpSocket: null
  httpGet:
    path: /metrics
    port: 8008

secretEnv:
  # Note: Never publish any of your production secrets online. These are just used for testing purposes.
  NODE_0_SECRET_0: Mrc085nWbjTc1mhAPt_Ukj4m_vui2iUQWr6TwNRq_4k=
  NODE_0_KEY_0: {"crypto":{"checksum":{"function":"sha256","message":"7bbdd8cda652d792dceae7477b911106296620c44a6c1d0356c6ff52daca2b5b","params":{}},"cipher":{"function":"aes-128-ctr","message":"689f5c97fad87665e2fe8acbc0aad91bdc85de7756ebdc496f1373bae01c02c8","params":{"iv":"7b8e1ed4480dee19cbb1528394ad2095"}},"kdf":{"function":"pbkdf2","message":"","params":{"c":262144,"dklen":32,"prf":"hmac-sha256","salt":"bb560dfbb56016e0630e4415b74d86ede9090c0545854ed7c0ad921047a39cef"}}},"path":"","pubkey":"8e48cbd28d25847a6b122a62179b6ac11ee7877a4c489799918308e6252b7f6601f969179ac7465e256c01815b71b6d1","uuid":"f13ece4f-d57e-4789-accc-ad50f0fef882","version":4}

```



================================================
FILE: charts/grandine/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- grandine container image repository
  repository: sifrai/grandine
  # -- grandine container image tag
  tag: unstable
  # -- grandine container pull policy
  pullPolicy: IfNotPresent

# -- Extra args for the grandine container
extraArgs: []
  ## Example for connecting to a holesky testnet
  #- --network=holesky
  #- --eth1-rpc-urls=http://your-eth1-node:8051

# -- JWT secret used by client as a secret. Change this value.
jwt: ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a

# -- Checkpoint Sync
checkpointSync:
  enabled: false
  url: ""

# -- Template used for the default beacon command
# @default -- See `values.yaml`
defaultBeaconCommandTemplate: |
  - sh
  - -ac
  - >
  {{- if .Values.p2pNodePort.enabled }}
    . /env/init-nodeport;
  {{- end }}
    exec grandine
    --data-dir=/data
    --libp2p-port={{ include "grandine.p2pPort" . }}
    --http-address=0.0.0.0
    --http-port={{ .Values.httpPort }}
  {{- if .Values.p2pNodePort.enabled }}
    {{- if not (contains "--enr-address=" (.Values.extraArgs | join ",")) }}
    --enr-address=$EXTERNAL_IP
    {{- end }}
    {{- if not (contains "--enr-tcp-port=" (.Values.extraArgs | join ",")) }}
    --enr-tcp-port=$EXTERNAL_PORT
    {{- end }}
    {{- if not (contains "--enr-udp-port=" (.Values.extraArgs | join ",")) }}
    --enr-udp-port=$EXTERNAL_PORT
    {{- end }}
    {{- else }}
    {{- if not (contains "--enr-address=" (.Values.extraArgs | join ",")) }}
    --enr-address=$(POD_IP)
    {{- end }}
    {{- if not (contains "--enr-tcp-port=" (.Values.extraArgs | join ",")) }}
    --enr-tcp-port={{ include "grandine.p2pPort" . }}
    {{- end }}
    {{- if not (contains "--enr-udp-port=" (.Values.extraArgs | join ",")) }}
    --enr-udp-port={{ include "grandine.p2pPort" . }}
    {{- end }}
  {{- end }}
    --metrics
    --metrics-address=0.0.0.0
    --metrics-port={{ .Values.metricsPort }}
    --jwt-secret=/data/jwt.hex
  {{- if .Values.checkpointSync.enabled }}
    --checkpoint-sync-url={{ tpl .Values.checkpointSync.url $ }}
  {{- end }}
  {{- range .Values.extraArgs }}
    {{ tpl . $  }}
  {{- end }}

# -- Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplates instead.
customCommand: []

# When p2pNodePort is enabled, your P2P port will be exposed via service type NodePort.
# This will generate a service for each replica, with a port binding via NodePort.
# This is useful if you want to expose and announce your node to the Internet.
p2pNodePort:
  # -- Expose P2P port via NodePort
  enabled: false
  # -- NodePort to be used
  port: 31000
  initContainer:
    image:
      # -- Container image to fetch nodeport information
      repository: lachlanevenson/k8s-kubectl
      # -- Container tag
      tag: v1.25.4
      # -- Container pull policy
      pullPolicy: IfNotPresent

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http-api
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http-api
  initialDelaySeconds: 10
  periodSeconds: 10

# -- P2P Port
p2pPort: 9000

# -- HTTP Port
httpPort: 5052

# -- Metrics Port
metricsPort: 5054

# -- Node selector for pods
nodeSelector: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 20Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

rbac:
  # -- Specifies whether RBAC resources are to be created
  create: true
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  clusterRules:
     # Required to obtain the nodes external IP
    - apiGroups: [""]
      resources:
      - "nodes"
      verbs:
      - "get"
      - "list"
      - "watch"
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  rules:
    # Required to get information about the services nodePort.
    - apiGroups: [""]
      resources:
      - "services"
      verbs:
      - "get"
      - "list"
      - "watch"

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 300

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []
#- name: JAVA_OPTS
#  value: "-Xmx6000m -Xms6000m"

# -- Additional env variables injected via a created secret
secretEnv: {}
# MY_PASSWORD: supersecret

initChownData:
  # -- Init container to set the correct permissions to access data directories
  enabled: true
  image:
    # -- Container repository
    repository: busybox
    # -- Container tag
    tag: "1.34.0"
    # -- Container pull policy
    pullPolicy: IfNotPresent
  # -- Resource requests and limits
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/grandine/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/grandine/ci/default-values.yaml
================================================
# Leave empty so that CT tests with default values
extraArgs:
  - --eth1-rpc-urls=http://localhost:8551



================================================
FILE: charts/grandine/ci/validator-values.yaml
================================================
replicas: 1

image:
  pullPolicy: Always

initContainers:
  - name: init-keystore
    image: bash:latest
    imagePullPolicy: IfNotPresent
    securityContext:
      runAsNonRoot: false
      runAsUser: 0
    command:
    - bash
    - -c
    - >
      apk add jq;
      export INDEX=$(echo $(hostname)| rev | cut -d'-' -f 1 | rev);
      mkdir -p /data/validator/keys;
      mkdir -p /data/validator/secrets;
      KEY_COUNT="NODE_${INDEX}_KEY_COUNT";
      for ((i = 0 ; i < "${!KEY_COUNT}" ; i++ ));
      do
        echo "====";
        key="NODE_${INDEX}_KEY_${i}";
        PUBKEY=$(echo ${!key} | jq '.pubkey' -j);
        echo ${!key} > "/data/validator/keys/0x${PUBKEY}.json";
        secret="NODE_${INDEX}_SECRET_${i}";
        echo ${!secret} > "/data/validator/secrets/0x${PUBKEY}.txt";
        echo "Added 0x${PUBKEY}";
      done
    volumeMounts:
      - name: storage
        mountPath: "/data"
        readOnly:
    env:
      - name: NODE_0_KEY_COUNT
        value: "1"
      - name: NODE_0_SECRET_0
        value: Mrc085nWbjTc1mhAPt_Ukj4m_vui2iUQWr6TwNRq_4k=
      - name: NODE_0_KEY_0
        value: >
          {"crypto":{"checksum":{"function":"sha256","message":"7bbdd8cda652d792dceae7477b911106296620c44a6c1d0356c6ff52daca2b5b","params":{}},"cipher":{"function":"aes-128-ctr","message":"689f5c97fad87665e2fe8acbc0aad91bdc85de7756ebdc496f1373bae01c02c8","params":{"iv":"7b8e1ed4480dee19cbb1528394ad2095"}},"kdf":{"function":"pbkdf2","message":"","params":{"c":262144,"dklen":32,"prf":"hmac-sha256","salt":"bb560dfbb56016e0630e4415b74d86ede9090c0545854ed7c0ad921047a39cef"}}},"path":"","pubkey":"8e48cbd28d25847a6b122a62179b6ac11ee7877a4c489799918308e6252b7f6601f969179ac7465e256c01815b71b6d1","uuid":"f13ece4f-d57e-4789-accc-ad50f0fef882","version":4}


extraArgs:
  - --eth1-rpc-urls=http://localhost:8551
  - --keystore-dir=/data/validator/keys
  - --keystore-password-file=/data/validator/secrets
  - --suggested-fee-recipient=0x0000000000000000000000000000000000000000
  - --network=holesky

livenessProbe:
  tcpSocket: null
  httpGet:
    path: /eth/v1/node/identity
    port: http-api

readinessProbe:
  tcpSocket: null
  httpGet:
    path: /eth/v1/node/identity
    port: http-api



================================================
FILE: charts/grandine/templates/_cmd.tpl
================================================
{{/*
# Beacon command
*/}}
{{- define "grandine.beaconCommand" -}}
{{- tpl .Values.defaultBeaconCommandTemplate . }}
{{- end }}


================================================
FILE: charts/grandine/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "grandine.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "grandine.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "grandine.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "grandine.labels" -}}
helm.sh/chart: {{ include "grandine.chart" . }}
{{ include "grandine.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "grandine.selectorLabels" -}}
app.kubernetes.io/name: {{ include "grandine.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "grandine.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "grandine.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{/*
Create the name of the cluster role.
It needs to be namespace prefixed to avoid naming conflicts when using the same deployment name across namespaces.
*/}}
{{- define "grandine.clusterRoleName" -}}
{{ .Release.Namespace }}-{{ include "grandine.fullname" . }}
{{- end }}

{{- define "grandine.p2pPort" -}}
{{- if .Values.p2pNodePort.enabled }}
{{- print .Values.p2pNodePort.port }}
{{- else }}
{{- print .Values.p2pPort }}
{{- end }}
{{- end -}}

{{- define "grandine.replicas" -}}
{{- if and (.Values.p2pNodePort.enabled) (gt (int .Values.replicas)  1) }}
{{- print 1 }}
{{ else }}
{{- print .Values.replicas }}
{{- end }}
{{- end -}}



================================================
FILE: charts/grandine/templates/clusterrole.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "grandine.clusterRoleName" . }}
  labels:
    {{- include "grandine.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.clusterRules | nindent 0 }}
{{- end }}



================================================
FILE: charts/grandine/templates/clusterrolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "grandine.clusterRoleName" . }}
  labels:
    {{- include "grandine.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "grandine.clusterRoleName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "grandine.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/grandine/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "grandine.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "grandine.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/grandine/templates/poddisruptionbudget.yaml
================================================
{{- if .Values.podDisruptionBudget }}
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ include "grandine.fullname" . }}
  labels:
    {{- include "grandine.labels" . | nindent 4 }}
spec:
{{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
{{- end }}
{{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
{{- end }}
  selector:
    matchLabels:
      {{- include "grandine.selectorLabels" . | nindent 6 }}
{{- end }}



================================================
FILE: charts/grandine/templates/role.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "grandine.serviceAccountName" . }}
  labels:
    {{- include "grandine.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.rules | nindent 0 }}
{{- end }}



================================================
FILE: charts/grandine/templates/rolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "grandine.serviceAccountName" . }}
  labels:
    {{- include "grandine.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "grandine.serviceAccountName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "grandine.serviceAccountName" . }}
{{- end }}



================================================
FILE: charts/grandine/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "grandine.fullname" . }}-env
  labels:
    {{- include "grandine.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "grandine.fullname" . }}-jwt
type: Opaque
data:
  jwt.hex: {{ .Values.jwt | b64enc }}


================================================
FILE: charts/grandine/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "grandine.fullname" . }}-headless
  labels:
    {{- include "grandine.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "grandine.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "grandine.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: {{ .Values.httpPort }}
      targetPort: http-api
      protocol: TCP
      name: http-api
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "grandine.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/grandine/templates/service.p2p.nodeport.yaml
================================================
{{- if .Values.p2pNodePort.enabled -}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "grandine.fullname" $ }}-p2p-0
  labels:
    {{- include "grandine.labels" $ | nindent 4 }}
    pod: {{ include "grandine.fullname" $ }}-0
    type: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p-tcp
      port: {{ include "grandine.p2pPort" $ }}
      protocol: TCP
      targetPort: p2p-tcp
      nodePort: {{ include "grandine.p2pPort" $ }}
    - name: p2p-udp
      port: {{ include "grandine.p2pPort" $ }}
      protocol: UDP
      targetPort: p2p-udp
      nodePort: {{ include "grandine.p2pPort" $ }}
  selector:
    {{- include "grandine.selectorLabels" $ | nindent 4 }}
    statefulset.kubernetes.io/pod-name: "{{ include "grandine.fullname" $ }}-0"
{{- end }}



================================================
FILE: charts/grandine/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "grandine.fullname" . }}
  labels:
    {{- include "grandine.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - port: {{ include "grandine.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "grandine.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: {{ .Values.httpPort }}
      targetPort: http-api
      protocol: TCP
      name: http-api
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "grandine.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/grandine/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "grandine.serviceAccountName" . }}
  labels:
    {{- include "grandine.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/grandine/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "grandine.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "grandine.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "grandine.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/grandine/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "grandine.fullname" . }}
  labels:
    {{- include "grandine.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ include "grandine.replicas" . }}
  selector:
    matchLabels:
      {{- include "grandine.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "grandine.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "grandine.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "grandine.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- tpl (toYaml .Values.initContainers | nindent 8) $ }}
      {{- end }}
      {{- if .Values.p2pNodePort.enabled }}
        - name: init-nodeport
          image: "{{ .Values.p2pNodePort.initContainer.image.repository }}:{{ .Values.p2pNodePort.initContainer.image.tag }}"
          imagePullPolicy: {{.Values.p2pNodePort.initContainer.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - sh
            - -c
            - >
              export EXTERNAL_PORT=$(kubectl get services -l "pod in (${POD_NAME}), type in (p2p)" -o jsonpath='{.items[0].spec.ports[0].nodePort}');
              export EXTERNAL_IP=$(kubectl get nodes "${NODE_NAME}" -o jsonpath='{.status.addresses[?(@.type=="ExternalIP")].address}');
              echo "EXTERNAL_PORT=$EXTERNAL_PORT" >  /env/init-nodeport;
              echo "EXTERNAL_IP=$EXTERNAL_IP"     >> /env/init-nodeport;
              cat /env/init-nodeport;
          volumeMounts:
            - name: env-nodeport
              mountPath: /env
      {{- end }}
      {{- if .Values.initChownData.enabled }}
        - name: init-chown-data
          image: "{{ .Values.initChownData.image.repository }}:{{ .Values.initChownData.image.tag }}"
          imagePullPolicy: {{ .Values.initChownData.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }}", "/data"]
          resources:
      {{ toYaml .Values.initChownData.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: "/data"
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
            {{- include "grandine.beaconCommand" . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            {{- if .Values.p2pNodePort.enabled }}
            - name: env-nodeport
              mountPath: /env
            {{- end }}
            - name: storage
              mountPath: "/data"
            - name: jwt
              mountPath: "/data/jwt.hex"
              subPath: jwt.hex
              readOnly: true
          ports:
            - name: p2p-tcp
              containerPort: {{ include "grandine.p2pPort" . }}
              protocol: TCP
            - name: p2p-udp
              containerPort: {{ include "grandine.p2pPort" . }}
              protocol: UDP
            - name: http-api
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "grandine.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ tpl (toYaml .Values.extraContainers | nindent 8) $ }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: jwt
          secret:
            secretName: {{ include "grandine.fullname" . }}-jwt
      {{- if .Values.p2pNodePort.enabled }}
        - name: env-nodeport
          emptyDir: {}
      {{- end }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/grandine/templates/tests/test-connection.yaml
================================================

apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "grandine.fullname" . }}-test-connection"
  labels:
    {{- include "grandine.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args: ['{{ include "grandine.fullname" . }}:{{ .Values.httpPort }}/eth/v1/node/version']
  restartPolicy: Never



================================================
FILE: charts/hermes/README.md
================================================

# hermes

![Version: 0.0.3](https://img.shields.io/badge/Version-0.0.3-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

A GossipSub listener and tracer, subscribing to all relevant pubsub topics and traces all protocol interactions.

**Homepage:** <https://github.com/ethpandaops/hermes>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| config.ethereum.chain | string | `"mainnet"` | Ethereum chain (mainnet, holesky, etc.) |
| config.ethereum.devp2p | object | `{"host":"0.0.0.0"}` | Which address devp2p (discv5) should bind to. |
| config.ethereum.libp2p | object | `{"host":"0.0.0.0"}` | Which address libp2p (discv5) should bind to. |
| config.ethereum.prysm | object | `{"host":"127.0.0.1","ports":{"grpc":4000,"http":5052},"trusted":true}` | Prysm host |
| config.ethereum.prysm.trusted | bool | `true` | If Prysm node is running on the same machine (localhost). |
| config.ethereum.subscriptionTopics | list | `[]` | Optional list of topics to subscribe to If not set, Hermes will subscribe to all default topics |
| config.metrics.addr | string | `"0.0.0.0"` | Metrics host |
| config.metrics.port | int | `6060` | Metrics port |
| config.stream.kinesis | object | `{"enabled":false,"region":"","stream":""}` | Kinesis configuration |
| config.stream.s3 | object | `{"bucket":"","byteLimit":"25000000","enabled":true,"endpoint":"","flushInterval":"40s","flushers":12,"region":"","tag":""}` | S3 configuration |
| config.stream.type | string | `"s3"` | Stream type (kinesis, s3, callback, logger) |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the hermes container |
| customCommand | list | `[]` | Command replacement for the hermes container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPodPorts | list | `[]` | Extra Pod ports |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | hermes container pull policy |
| image.repository | string | `"ethpandaops/hermes"` | hermes container image repository |
| image.tag | string | `"latest"` | hermes container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| lifecycle | object | See `values.yaml` | Lifecycle hooks |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| secrets | object | `{"s3AccessKeyId":"","s3AccessSecretKey":""}` | Secrets configuration |
| secrets.s3AccessKeyId | string | `""` | S3 access key ID (required if using S3) |
| secrets.s3AccessSecretKey | string | `""` | S3 secret access key (required if using S3) |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `90` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/hermes/Chart.yaml
================================================
apiVersion: v2
name: hermes
description: A GossipSub listener and tracer, subscribing to all relevant pubsub topics and traces all protocol interactions.
home: https://github.com/ethpandaops/hermes
type: application
version: 0.0.3
maintainers:
  - name: matty
    email: matt.evans@ethereum.org
  - name: samcm
    email: sam.calder-mason@ethereum.org
  - name: savid
    email: andrew.davis@ethereum.org



================================================
FILE: charts/hermes/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/hermes/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- hermes container image repository
  repository: ethpandaops/hermes
  # -- hermes container image tag
  tag: latest
  # -- hermes container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Secrets configuration
secrets:
  # -- S3 access key ID (required if using S3)
  s3AccessKeyId: ""
  # -- S3 secret access key (required if using S3)
  s3AccessSecretKey: ""

config:
  # Stream Configuration
  stream:
    # -- Stream type (kinesis, s3, callback, logger)
    type: "s3"

    # -- Kinesis configuration
    kinesis:
      enabled: false
      region: ""
      stream: ""

    # -- S3 configuration
    s3:
      enabled: true
      region: "" # S3 region (eg, us-east-1, ams3, nyc2, etc).
      endpoint: "" # Full endpoint URL for S3-compatible storage (eg, https://s3.us-east-1.amazonaws.com, https://nyc2.digitaloceanspaces.com).
      bucket: "" # Name of the bucket to use.
      tag: "" # The bucket key/tag.
      byteLimit: "25000000" # 10MB is the default (using string to prevent scientific notation).
      flushers: 12 # 2 is the default.
      flushInterval: "40s" # 2s is the default.

  # Metrics Configuration
  metrics:
    # -- Metrics host
    addr: "0.0.0.0"
    # -- Metrics port
    port: 6060

  # Ethereum Configuration
  ethereum:
    # -- Ethereum chain (mainnet, holesky, etc.)
    chain: "mainnet"
    # -- Which address devp2p (discv5) should bind to.
    devp2p:
      host: "0.0.0.0"
    # -- Which address libp2p (discv5) should bind to.
    libp2p:
      host: "0.0.0.0"
    # -- Prysm host
    prysm:
      # -- If Prysm node is running on the same machine (localhost).
      trusted: true
      host: "127.0.0.1"
      ports:
        http: 5052
        grpc: 4000
    # -- Optional list of topics to subscribe to
    # If not set, Hermes will subscribe to all default topics
    subscriptionTopics: []
    # - beacon_attestation
    # - beacon_block
    # - another_gossip_topic

# -- Command arguments
args: []

# -- Custom args for the hermes container
customArgs: []

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Command replacement for the hermes container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  httpGet:
    path: /metrics
    port: 6060
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  httpGet:
    path: /metrics
    port: 6060
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Extra Pod ports
extraPodPorts: []

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Lifecycle hooks
# @default -- See `values.yaml`
lifecycle:
  preStop:
    exec:
      command:
        - /bin/sleep
        - "30"

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 90

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/hermes/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "hermes.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "hermes.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "hermes.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "hermes.labels" -}}
helm.sh/chart: {{ include "hermes.chart" . }}
{{ include "hermes.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "hermes.selectorLabels" -}}
app.kubernetes.io/name: {{ include "hermes.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "hermes.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "hermes.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "hermes.metricsPort" -}}
{{- if .Values.config.metrics.port -}}
{{ .Values.config.metrics.port }}
{{- else -}}
6060
{{- end -}}
{{- end -}}




================================================
FILE: charts/hermes/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "hermes.fullname" . }}
  labels:
    {{- include "hermes.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{ tpl (toYaml .Values.config | nindent 4) $ }}


================================================
FILE: charts/hermes/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hermes.fullname" . }}
  labels:
    {{- include "hermes.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "hermes.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "hermes.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "hermes.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/hermes"
        {{- end }}
        args:
        {{- if gt (len .Values.customArgs) 0 }}
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- else }}
          - "--metrics"
          - "--metrics.addr={{ .Values.config.metrics.addr }}"
          - "--metrics.port={{ .Values.config.metrics.port }}"
          - "--data.stream.type={{ .Values.config.stream.type }}"
          {{- if and (eq .Values.config.stream.type "kinesis") .Values.config.stream.kinesis.enabled }}
          - "--kinesis.region={{ .Values.config.stream.kinesis.region }}"
          - "--kinesis.stream={{ .Values.config.stream.kinesis.stream }}"
          {{- end }}
          {{- if and (eq .Values.config.stream.type "s3") .Values.config.stream.s3.enabled }}
          - "--s3.region={{ .Values.config.stream.s3.region }}"
          - "--s3.bucket={{ .Values.config.stream.s3.bucket }}"
          - "--s3.tag={{ .Values.config.stream.s3.tag }}"
          - "--s3.byte.limit={{ .Values.config.stream.s3.byteLimit }}"
          - "--s3.flushers={{ .Values.config.stream.s3.flushers }}"
          - "--s3.flush.interval={{ .Values.config.stream.s3.flushInterval }}"
          {{- end }}
          - "eth"
          - "--chain={{ .Values.config.ethereum.chain }}"
          - "--devp2p.host={{ .Values.config.ethereum.devp2p.host }}"
          - "--libp2p.host={{ .Values.config.ethereum.libp2p.host }}"
          - "--prysm.host={{ .Values.config.ethereum.prysm.host }}"
          - "--prysm.port.http={{ .Values.config.ethereum.prysm.ports.http }}"
          - "--prysm.port.grpc={{ .Values.config.ethereum.prysm.ports.grpc }}"
          - "--local.trusted.addr={{ .Values.config.ethereum.prysm.trusted }}"
          {{- if .Values.config.ethereum.subscriptionTopics }}
          - "--subscription.topics={{ join "," .Values.config.ethereum.subscriptionTopics }}"
          {{- end }}
          {{- if .Values.config.ethereum.subnetConfigs }}
          {{- if .Values.config.ethereum.subnetConfigs.beacon_attestation }}
          - "--subnet.attestation.type={{ .Values.config.ethereum.subnetConfigs.beacon_attestation.type }}"
          {{- if eq .Values.config.ethereum.subnetConfigs.beacon_attestation.type "random" }}
          - "--subnet.attestation.count={{ .Values.config.ethereum.subnetConfigs.beacon_attestation.count }}"
          {{- else if eq .Values.config.ethereum.subnetConfigs.beacon_attestation.type "static" }}
          - "--subnet.attestation.subnets={{ .Values.config.ethereum.subnetConfigs.beacon_attestation.subnets }}"
          {{- else if eq .Values.config.ethereum.subnetConfigs.beacon_attestation.type "static_range" }}
          - "--subnet.attestation.start={{ .Values.config.ethereum.subnetConfigs.beacon_attestation.start }}"
          - "--subnet.attestation.end={{ .Values.config.ethereum.subnetConfigs.beacon_attestation.end }}"
          {{- end }}
          {{- end }}
          {{- if .Values.config.ethereum.subnetConfigs.sync_committee }}
          - "--subnet.synccommittee.type={{ .Values.config.ethereum.subnetConfigs.sync_committee.type }}"
          {{- if eq .Values.config.ethereum.subnetConfigs.sync_committee.type "random" }}
          - "--subnet.synccommittee.count={{ .Values.config.ethereum.subnetConfigs.sync_committee.count }}"
          {{- else if eq .Values.config.ethereum.subnetConfigs.sync_committee.type "static" }}
          - "--subnet.synccommittee.subnets={{ .Values.config.ethereum.subnetConfigs.sync_committee.subnets }}"
          {{- else if eq .Values.config.ethereum.subnetConfigs.sync_committee.type "static_range" }}
          - "--subnet.synccommittee.start={{ .Values.config.ethereum.subnetConfigs.sync_committee.start }}"
          - "--subnet.synccommittee.end={{ .Values.config.ethereum.subnetConfigs.sync_committee.end }}"
          {{- end }}
          {{- end }}
          {{- if .Values.config.ethereum.subnetConfigs.blob_sidecar }}
          - "--subnet.blobsidecar.type={{ .Values.config.ethereum.subnetConfigs.blob_sidecar.type }}"
          {{- if eq .Values.config.ethereum.subnetConfigs.blob_sidecar.type "random" }}
          - "--subnet.blobsidecar.count={{ .Values.config.ethereum.subnetConfigs.blob_sidecar.count }}"
          {{- else if eq .Values.config.ethereum.subnetConfigs.blob_sidecar.type "static" }}
          - "--subnet.blobsidecar.subnets={{ .Values.config.ethereum.subnetConfigs.blob_sidecar.subnets }}"
          {{- else if eq .Values.config.ethereum.subnetConfigs.blob_sidecar.type "static_range" }}
          - "--subnet.blobsidecar.start={{ .Values.config.ethereum.subnetConfigs.blob_sidecar.start }}"
          - "--subnet.blobsidecar.end={{ .Values.config.ethereum.subnetConfigs.blob_sidecar.end }}"
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
        ports:
          - name: metrics
            containerPort: {{ include "hermes.metricsPort" . }}
            protocol: TCP
          {{- if .Values.extraPodPorts }}
            {{ toYaml .Values.extraPodPorts | nindent 10 }}
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "hermes.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if and (eq .Values.config.stream.type "s3") .Values.config.stream.s3.enabled }}
          - name: HERMES_AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: {{ include "hermes.fullname" . }}-env
                key: s3-access-key-id
          - name: HERMES_AWS_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "hermes.fullname" . }}-env
                key: s3-access-secret-key
          - name: AWS_ENDPOINT_URL
            value: {{ .Values.config.stream.s3.endpoint }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "hermes.fullname" . }}



================================================
FILE: charts/hermes/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "hermes.fullname" . }}-env
  labels:
    {{- include "hermes.labels" . | nindent 4 }}
data:
  {{- if and (eq .Values.config.stream.type "s3") .Values.config.stream.s3.enabled }}
  s3-access-key-id: {{ required "A valid S3 access key id is required when using S3" .Values.secrets.s3AccessKeyId | b64enc }}
  s3-access-secret-key: {{ required "A valid S3 access secret key is required when using S3" .Values.secrets.s3AccessSecretKey | b64enc }}
  {{- end }}



================================================
FILE: charts/hermes/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "hermes.fullname" . }}
  labels:
    {{- include "hermes.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "hermes.metricsPort" . }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "hermes.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/hermes/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "hermes.serviceAccountName" . }}
  labels:
    {{- include "hermes.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/hermes/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "hermes.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "hermes.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "hermes.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/ipfs-cluster/README.md
================================================
# ipfs-cluster

![Version: 0.1.14](https://img.shields.io/badge/Version-0.1.14-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Run ipfs cluster along with kubo (go-ipfs)

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| cluster.affinity | object | `{}` |  |
| cluster.extraEnv | list | `[]` |  |
| cluster.image.pullPolicy | string | `"IfNotPresent"` |  |
| cluster.image.repository | string | `"ipfs/ipfs-cluster"` |  |
| cluster.image.tag | string | `"latest"` |  |
| cluster.imagePullSecrets | list | `[]` |  |
| cluster.nameOverride | string | `""` |  |
| cluster.nodeSelector | object | `{}` |  |
| cluster.podSecurityContext | object | `{}` |  |
| cluster.resources | object | `{}` |  |
| cluster.service.type | string | `""` |  |
| cluster.storage.storageClassName | string | `""` |  |
| cluster.storage.volumeSize | string | `""` |  |
| cluster.tolerations | list | `[]` |  |
| fullnameOverride | string | `""` |  |
| ingress.annotations | object | `{}` |  |
| ingress.className | string | `""` |  |
| ingress.enabled | bool | `false` |  |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths[0].path | string | `"/"` |  |
| ingress.hosts[0].paths[0].pathType | string | `"ImplementationSpecific"` |  |
| ingress.tls | list | `[]` |  |
| ipfs.affinity | object | `{}` |  |
| ipfs.customCommand | list | `[]` | Command replacement for the container |
| ipfs.extraArgs | list | `[]` | Additional args for the container |
| ipfs.extraEnv | list | `[]` | Additional env variables |
| ipfs.extraVolumeMounts | list | `[]` | Additional volume mounts |
| ipfs.extraVolumes | list | `[]` | Additional volumes |
| ipfs.image.pullPolicy | string | `"IfNotPresent"` |  |
| ipfs.image.repository | string | `"ipfs/kubo"` |  |
| ipfs.image.tag | string | `"latest"` |  |
| ipfs.imagePullSecrets | list | `[]` |  |
| ipfs.initContainers | list | `[]` | Additional init containers |
| ipfs.initScripts."001-peers.sh" | string | See `values.yaml` | Scripts that will run in an init container before the ipfs node starts. This is useful to setup some configuration parameters |
| ipfs.nameOverride | string | `""` |  |
| ipfs.nodeSelector | object | `{}` |  |
| ipfs.podSecurityContext | object | `{}` |  |
| ipfs.resources | object | `{}` |  |
| ipfs.service.type | string | `"ClusterIP"` |  |
| ipfs.storage.storageClassName | string | `""` |  |
| ipfs.storage.volumeSize | string | `""` |  |
| ipfs.tolerations | list | `[]` |  |
| p2pNodePort.enabled | bool | `true` |  |
| p2pNodePort.initContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.initContainer.image.repository | string | `"lachlanevenson/k8s-kubectl"` | Container image to fetch nodeport information |
| p2pNodePort.initContainer.image.tag | string | `"v1.25.4"` | Container tag |
| p2pNodePort.nodePort | int | `32000` |  |
| podAnnotations | object | `{}` |  |
| rbac.clusterRules | list | See `values.yaml` | Required ClusterRole rules |
| rbac.create | bool | `true` | Specifies whether RBAC resources are to be created |
| rbac.rules | list | See `values.yaml` | Required ClusterRole rules |
| replicaCount | int | `1` |  |
| securityContext | object | `{}` |  |
| service.type | string | `"ClusterIP"` |  |
| serviceAccount.annotations | object | `{}` |  |
| serviceAccount.create | bool | `true` |  |
| serviceAccount.name | string | `""` |  |
| sharedSecret | string | `""` |  |

Based on: https://github.com/monaparty/helm-ipfs-cluster



================================================
FILE: charts/ipfs-cluster/Chart.yaml
================================================
apiVersion: v2
name: ipfs-cluster
description: Run ipfs cluster along with kubo (go-ipfs)
type: application
version: 0.1.14
maintainers:
  - name: skylenet
    email: rafael@skyle.net



================================================
FILE: charts/ipfs-cluster/README.md.gotmpl
================================================
{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

Based on: https://github.com/monaparty/helm-ipfs-cluster



================================================
FILE: charts/ipfs-cluster/values.yaml
================================================
# Default values for helm-ipfs-cluster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

p2pNodePort:
  enabled: true
  nodePort: 32000
  initContainer:
    image:
      # -- Container image to fetch nodeport information
      repository: lachlanevenson/k8s-kubectl
      # -- Container tag
      tag: v1.25.4
      # -- Container pull policy
      pullPolicy: IfNotPresent

cluster:
  image:
    repository: ipfs/ipfs-cluster
    pullPolicy: IfNotPresent
    tag: "latest"
  imagePullSecrets: []
  nameOverride: ""
  podSecurityContext: {}
    # fsGroup: 2000
  # -- Additional env variables
  extraEnv: []
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  storage:
    storageClassName: ""
    volumeSize: ""  # "1Gi"

  service:
    type: ""

ipfs:
  image:
    repository: ipfs/kubo
    pullPolicy: IfNotPresent
    tag: "latest"
  imagePullSecrets: []
  nameOverride: ""
  podSecurityContext: {}
    # fsGroup: 2000
  initScripts:
    # -- Scripts that will run in an init container before the ipfs node starts. This is useful to setup some configuration parameters
    # @default -- See `values.yaml`
    001-peers.sh: |-
      #!/bin/sh
      set -xe
      ipfs config Peering.Peers "[ { \"ID\": \"QmcFf2FH3CEgTNHeMRGhN7HNHU1EXAxoEk6EFuSyXCsvRE\", \"Addrs\": [ \"/dnsaddr/node-1.ingress.cloudflare-ipfs.com\" ] }, { \"ID\": \"QmcFmLd5ySfk2WZuJ1mfSWLDjdmHZq7rSAua4GoeSQfs1z\", \"Addrs\": [ \"/dnsaddr/node-2.ingress.cloudflare-ipfs.com\" ] }, { \"ID\": \"QmcfFmzSDVbwexQ9Au2pt5YEXHK5xajwgaU6PpkbLWerMa\", \"Addrs\": [ \"/dnsaddr/node-3.ingress.cloudflare-ipfs.com\" ] }, { \"ID\": \"QmcfJeB3Js1FG7T8YaZATEiaHqNKVdQfybYYkbT1knUswx\", \"Addrs\": [ \"/dnsaddr/node-4.ingress.cloudflare-ipfs.com\" ] }, { \"ID\": \"QmcfVvzK4tMdFmpJjEKDUoqRgP4W9FnmJoziYX5GXJJ8eZ\", \"Addrs\": [ \"/dnsaddr/node-5.ingress.cloudflare-ipfs.com\" ] }, { \"ID\": \"QmcfZD3VKrUxyP9BbyUnZDpbqDnT7cQ4WjPP8TRLXaoE7G\", \"Addrs\": [ \"/dnsaddr/node-6.ingress.cloudflare-ipfs.com\" ] }, { \"ID\": \"QmcfZP2LuW4jxviTeG8fi28qjnZScACb8PEgHAc17ZEri3\", \"Addrs\": [ \"/dnsaddr/node-7.ingress.cloudflare-ipfs.com\" ] }, { \"ID\": \"QmcfgsJsMtx6qJb74akCw1M24X1zFwgGo11h1cuhwQjtJP\", \"Addrs\": [ \"/dnsaddr/node-8.ingress.cloudflare-ipfs.com\" ] }, { \"ID\": \"Qmcfr2FC7pFzJbTSDfYaSy1J8Uuy8ccGLeLyqJCKJvTHMi\", \"Addrs\": [ \"/dnsaddr/node-9.ingress.cloudflare-ipfs.com\" ] }, { \"ID\": \"QmcfR3V5YAtHBzxVACWCzXTt26SyEkxdwhGJ6875A8BuWx\", \"Addrs\": [ \"/dnsaddr/node-10.ingress.cloudflare-ipfs.com\" ] }, { \"ID\": \"Qmcfuo1TM9uUiJp6dTbm915Rf1aTqm3a3dnmCdDQLHgvL5\", \"Addrs\": [ \"/dnsaddr/node-11.ingress.cloudflare-ipfs.com\" ] }, { \"ID\": \"QmcfV2sg9zaq7UUHVCGuSvT2M2rnLBAPsiE79vVyK3Cuev\", \"Addrs\": [ \"/dnsaddr/node-12.ingress.cloudflare-ipfs.com\" ] } ]" --json
    # 002-gc.sh: |-
    #   #!/bin/sh
    #   set -xe
    #   ipfs config Datastore.StorageGCWatermark 90 --json
    #   ipfs config Datastore.StorageMax "50GB"
    #   ipfs config Datastore.GCPeriod "6h"
  # -- Command replacement for the container
  customCommand: []
  # -- Additional args for the container
  extraArgs: []
  # -- Additional volume mounts
  extraVolumeMounts: []
  # -- Additional volumes
  extraVolumes: []
  # -- Additional env variables
  extraEnv: []
  # -- Additional init containers
  initContainers: []
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  storage:
    storageClassName: ""
    volumeSize: ""  # "1Gi"

  service:
    type: ClusterIP

fullnameOverride: ""

sharedSecret: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# `service.type` may be overridden by `cluster.service.type` and/or `ipfs.service.type`.
service:
  type: ClusterIP

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


rbac:
  # -- Specifies whether RBAC resources are to be created
  create: true
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  clusterRules:
     # Required to obtain the nodes external IP
    - apiGroups: [""]
      resources:
      - "nodes"
      verbs:
      - "get"
      - "list"
      - "watch"
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  rules:
    # Required to get information about the services nodePort.
    - apiGroups: [""]
      resources:
      - "services"
      verbs:
      - "get"
      - "list"
      - "watch"



================================================
FILE: charts/ipfs-cluster/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/ipfs-cluster/ci/default-values.yaml
================================================
p2pNodePort:
  enabled: false



================================================
FILE: charts/ipfs-cluster/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "helm-ipfs-cluster.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Expand the name of the chart.
*/}}
{{- define "helm-ipfs-cluster.ipfs-name" -}}
{{- if .Values.fullnameOverride }}
{{- printf "ipfs-%s" .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- printf "ipfs-%s" .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "ipfs-%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "helm-ipfs-cluster.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "helm-ipfs-cluster.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "helm-ipfs-cluster.labels" -}}
helm.sh/chart: {{ include "helm-ipfs-cluster.chart" . }}
{{ include "helm-ipfs-cluster.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "helm-ipfs-cluster.selectorLabels" -}}
app.kubernetes.io/name: {{ include "helm-ipfs-cluster.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "helm-ipfs-cluster.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "helm-ipfs-cluster.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}



================================================
FILE: charts/ipfs-cluster/templates/cluster.service.yaml
================================================
{{- range $i, $n := (until (int .Values.replicaCount)) -}}
{{- if ne $i 0 }}
---
{{- end }}
apiVersion: v1
kind: Service
metadata:
  name: cluster-{{ $i }}-{{ include "helm-ipfs-cluster.name" $ }}
  labels:
    {{- include "helm-ipfs-cluster.selectorLabels" $ | nindent 4 }}
    nodeType: cluster
spec:
  type: {{ $.Values.cluster.service.type | default $.Values.service.type }}
  ports:
  - port: 9096
    name: p2p
    #  clusterIP: None
  selector:
    {{- include "helm-ipfs-cluster.selectorLabels" $ | nindent 4 }}
    nodeType: cluster
{{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: cluster-{{ include "helm-ipfs-cluster.name" . }}-api
  labels:
    {{- include "helm-ipfs-cluster.selectorLabels" $ | nindent 4 }}
    nodeType: cluster
spec:
  type: {{ .Values.ipfs.service.type | default .Values.service.type }}
  ports:
  - port: 9094
    name: api
  - port: 9095
    name: ipfs-proxy
  selector:
    {{- include "helm-ipfs-cluster.selectorLabels" $ | nindent 4 }}
    nodeType: cluster



================================================
FILE: charts/ipfs-cluster/templates/cluster.statefulset.yaml
================================================
{{- range $i, $n := (until (int .Values.replicaCount)) -}}
{{- if ne $i 0 }}
---
{{- end }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cluster-{{ $i }}-{{ include "helm-ipfs-cluster.name" $ }}
spec:
  serviceName: cluster-{{ $i }}-{{ include "helm-ipfs-cluster.name" $ }}
  replicas: 1  # must be `1`.
  selector:
    matchLabels:
      {{- include "helm-ipfs-cluster.selectorLabels" $ | nindent 6 }}
      nodeType: cluster
  template:
    metadata:
      labels:
        {{- include "helm-ipfs-cluster.selectorLabels" $ | nindent 8 }}
        nodeType: cluster
    spec:
      {{- with $.Values.cluster.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helm-ipfs-cluster.serviceAccountName" $ }}
      securityContext:
        {{- toYaml $.Values.cluster.podSecurityContext | nindent 8 }}
      containers:
      - name: cluster
        env:
          - name: CLUSTER_PEERNAME
            value: {{ printf "cluster-%d" $i }}
{{- with $.Values.sharedSecret }}
          - name: CLUSTER_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "helm-ipfs-cluster.fullname" $ }}
                key: secret
{{- end }}
          - name: CLUSTER_IPFSHTTP_NODEMULTIADDRESS
            value: /dns4/{{ include "helm-ipfs-cluster.ipfs-name" $ }}-{{ $i }}.{{ include "helm-ipfs-cluster.ipfs-name" $ }}.{{ $.Release.Namespace }}.svc.cluster.local/tcp/5001
          - name: CLUSTER_IPFSPROXY_NODEMULTIADDRESS
            value: /dns4/{{ include "helm-ipfs-cluster.ipfs-name" $ }}-{{ $i }}.{{ include "helm-ipfs-cluster.ipfs-name" $ }}.{{ $.Release.Namespace }}.svc.cluster.local/tcp/5001
          - name: CLUSTER_CRDT_TRUSTEDPEERS
            value: '*' # Trust all peers in Cluster
          # Expose APIs
          - name: CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS
            value: /ip4/0.0.0.0/tcp/9094
          - name: CLUSTER_IPFSPROXY_LISTENMULTIADDRESS
            value: /ip4/0.0.0.0/tcp/9095
          - name: CLUSTER_MONITORPINGINTERVAL
            value: 2s # Speed up peer discovery
          # Metrics
          - name: CLUSTER_METRICS_ENABLESTATS
            value: "true"
          - name: CLUSTER_METRICS_PROMETHEUSENDPOINT
            value: "/ip4/0.0.0.0/tcp/8888"
        {{- if $.Values.cluster.extraEnv }}
          {{- toYaml $.Values.cluster.extraEnv | nindent 10 }}
        {{- end }}
        image: "{{ $.Values.cluster.image.repository }}:{{ $.Values.cluster.image.tag }}"
        ports:
        - containerPort: 9096
          name: p2p
        - containerPort: 9094
          name: api
        - containerPort: 9095
          name: ipfs-proxy
        - containerPort: 8888
          name: metrics
        volumeMounts:
        - name: data
          mountPath: /data/ipfs-cluster
        resources:
          {{- toYaml $.Values.cluster.resources | nindent 12 }}
      {{- with $.Values.cluster.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.cluster.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.cluster.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- with $.Values.cluster.storage.storageClassName }}
      storageClassName: {{ . }}
      {{- end }}
      resources:
        requests:
          storage: {{ $.Values.cluster.storage.volumeSize | default "1Gi" }}
{{- end }}



================================================
FILE: charts/ipfs-cluster/templates/clusterrole.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "helm-ipfs-cluster.serviceAccountName" . }}
  labels:
    {{- include "helm-ipfs-cluster.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.clusterRules | nindent 0 }}
{{- end }}



================================================
FILE: charts/ipfs-cluster/templates/clusterrolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "helm-ipfs-cluster.serviceAccountName" . }}
  labels:
    {{- include "helm-ipfs-cluster.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "helm-ipfs-cluster.serviceAccountName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "helm-ipfs-cluster.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/ipfs-cluster/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "helm-ipfs-cluster.fullname" . -}}
{{- $svcPort := .Values.ipfs.service.port -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "helm-ipfs-cluster.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/ipfs-cluster/templates/ipfs.init-d.configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "helm-ipfs-cluster.ipfs-name" . }}-init-d
data:
  {{- toYaml .Values.ipfs.initScripts | nindent 2 }}



================================================
FILE: charts/ipfs-cluster/templates/ipfs.service.p2p-nodeport.yaml
================================================
{{- if .Values.p2pNodePort.enabled -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "helm-ipfs-cluster.ipfs-name" . }}-p2p-nodeport
  labels:
    {{- include "helm-ipfs-cluster.selectorLabels" . | nindent 4 }}
    nodeType: ipfs
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
  - port: 4001
    name: swarm
    targetPort: swarm
    protocol: TCP
    nodePort: {{ .Values.p2pNodePort.nodePort }}
  - port: 4001
    name: swarm-udp
    targetPort: swarm-udp
    protocol: UDP
    nodePort: {{ .Values.p2pNodePort.nodePort }}
  selector:
    {{- include "helm-ipfs-cluster.selectorLabels" . | nindent 4 }}
    nodeType: ipfs
{{- end }}



================================================
FILE: charts/ipfs-cluster/templates/ipfs.service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "helm-ipfs-cluster.ipfs-name" . }}
  labels:
    {{- include "helm-ipfs-cluster.selectorLabels" . | nindent 4 }}
    nodeType: ipfs
spec:
  type: {{ .Values.ipfs.service.type | default .Values.service.type }}
  ports:
  - port: 4001
    name: swarm
  - port: 5001
    name: api
  - port: 8080
    name: gateway
    #  clusterIP: None
  selector:
    {{- include "helm-ipfs-cluster.selectorLabels" . | nindent 4 }}
    nodeType: ipfs



================================================
FILE: charts/ipfs-cluster/templates/ipfs.statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "helm-ipfs-cluster.ipfs-name" . }}
spec:
  serviceName: {{ include "helm-ipfs-cluster.ipfs-name" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "helm-ipfs-cluster.selectorLabels" . | nindent 6 }}
      nodeType: ipfs
  template:
    metadata:
      labels:
        {{- include "helm-ipfs-cluster.selectorLabels" . | nindent 8 }}
        nodeType: ipfs
    spec:
      {{- with .Values.ipfs.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helm-ipfs-cluster.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.ipfs.podSecurityContext | nindent 8 }}
      initContainers:
      {{- if .Values.ipfs.initContainers }}
        {{- toYaml .Values.ipfs.initContainers | nindent 8 }}
      {{- end }}
      {{- if .Values.p2pNodePort.enabled }}
        - name: init-nodeport
          image: "{{ .Values.p2pNodePort.initContainer.image.repository }}:{{ .Values.p2pNodePort.initContainer.image.tag }}"
          imagePullPolicy: {{.Values.p2pNodePort.initContainer.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - sh
            - -c
            - >
              export EXTERNAL_PORT=$(kubectl get services {{ include "helm-ipfs-cluster.ipfs-name" . }}-p2p-nodeport -o jsonpath='{.spec.ports[0].nodePort}');
              export EXTERNAL_IP=$(kubectl get nodes "${NODE_NAME}" -o jsonpath='{.status.addresses[?(@.type=="ExternalIP")].address}');
              echo "EXTERNAL_PORT=$EXTERNAL_PORT" >  /env/init-nodeport;
              echo "EXTERNAL_IP=$EXTERNAL_IP"     >> /env/init-nodeport;
              cat /env/init-nodeport;
              echo "#!/bin/sh" > /container-init.d/nodeport.sh;
              echo "set -ex" >> /container-init.d/nodeport.sh;
              echo "ipfs config Addresses.Announce \"[
              \\\"/ip4/$EXTERNAL_IP/tcp/$EXTERNAL_PORT\\\",
              \\\"/ip4/$EXTERNAL_IP/udp/$EXTERNAL_PORT/quic\\\",
              \\\"/ip4/$EXTERNAL_IP/udp/$EXTERNAL_PORT/quic-v1\\\",
              \\\"/ip4/$EXTERNAL_IP/udp/$EXTERNAL_PORT/quic-v1/webtransport\\\"
              ]\" --json" >> /container-init.d/nodeport.sh;
              chmod +x /container-init.d/nodeport.sh;
          volumeMounts:
            - name: env-nodeport
              mountPath: /env
            - name: init-d
              mountPath: /container-init.d
      {{- end }}
      containers:
        - name: ipfs
          image: {{ .Values.ipfs.image.repository }}:{{ .Values.ipfs.image.tag }}
          {{- if gt (len .Values.ipfs.customCommand) 0 }}
          command:
            {{- toYaml .Values.ipfs.customCommand | nindent 12}}
          {{- end }}
          {{- if gt (len .Values.ipfs.extraArgs) 0 }}
          args:
            {{- toYaml .Values.ipfs.extraArgs | nindent 12}}
          {{- end }}
          ports:
            - containerPort: 4001
              name: swarm
              protocol: TCP
            - containerPort: 4001
              name: swarm-udp
              protocol: UDP
            - containerPort: 5001
              name: api
            - containerPort: 8080
              name: gateway
            - containerPort: 5353
              name: zeroconf
              protocol: UDP
          {{- if .Values.ipfs.extraEnv }}
          env:
            {{- toYaml .Values.ipfs.extraEnv | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /data/ipfs
          {{- if .Values.p2pNodePort.enabled }}
            - name: env-nodeport
              mountPath: /env
            - name: init-d
              mountPath: /container-init.d
          {{- end }}
          {{- range $key, $value := .Values.ipfs.initScripts }}
            - name: init-d-configmap
              subPath: {{ $key }}
              mountPath: /container-init.d/{{ $key }}
          {{- end }}
          {{- if .Values.ipfs.extraVolumeMounts }}
            {{ toYaml .Values.ipfs.extraVolumeMounts | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.ipfs.resources | nindent 12 }}
      {{- with .Values.ipfs.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ipfs.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ipfs.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.p2pNodePort.enabled }}
        - name: env-nodeport
          emptyDir: {}
        - name: init-d
          emptyDir: {}
      {{- end }}
        - name: init-d-configmap
          configMap:
            name: {{ include "helm-ipfs-cluster.ipfs-name" . }}-init-d
            defaultMode: 0777
      {{- if .Values.ipfs.extraVolumes }}
        {{ toYaml .Values.ipfs.extraVolumes | nindent 8}}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        {{- with .Values.ipfs.storage.storageClassName }}
        storageClassName: {{ . }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.ipfs.storage.volumeSize | default "1Gi" }}



================================================
FILE: charts/ipfs-cluster/templates/role.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "helm-ipfs-cluster.serviceAccountName" . }}
  labels:
    {{- include "helm-ipfs-cluster.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.rules | nindent 0 }}
{{- end }}



================================================
FILE: charts/ipfs-cluster/templates/rolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "helm-ipfs-cluster.serviceAccountName" . }}
  labels:
    {{- include "helm-ipfs-cluster.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "helm-ipfs-cluster.serviceAccountName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "helm-ipfs-cluster.serviceAccountName" . }}
{{- end }}



================================================
FILE: charts/ipfs-cluster/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "helm-ipfs-cluster.fullname" . }}
type: Opaque
data:
{{- with .Values.sharedSecret }}
  secret: {{ . | b64enc }}
{{- end }}



================================================
FILE: charts/ipfs-cluster/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "helm-ipfs-cluster.serviceAccountName" . }}
  labels:
    {{- include "helm-ipfs-cluster.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}



================================================
FILE: charts/lighthouse/README.md
================================================

# lighthouse

![Version: 1.1.5](https://img.shields.io/badge/Version-1.1.5-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

An open-source Ethereum 2.0 client, written in Rust

**Homepage:** <https://lighthouse.sigmaprime.io/>

## Source Code

* <https://github.com/sigp/lighthouse>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| checkpointSync | object | `{"enabled":false,"url":""}` | Checkpoint Sync |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customCommand | list | `[]` | Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplates instead. |
| defaultBeaconCommandTemplate | string | See `values.yaml` | Template used for the default beacon command |
| defaultBootnodeCommandTemplate | string | See `values.yaml` | Template used for the default validator command |
| defaultValidatorCommandTemplate | string | See `values.yaml` | Template used for the default validator command |
| extraArgs | list | `[]` | Extra args for the lighthouse container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `5052` | HTTP Port |
| image.pullPolicy | string | `"IfNotPresent"` | Lighthouse container pull policy |
| image.repository | string | `"sigp/lighthouse"` | Lighthouse container image repository |
| image.tag | string | `"latest"` | Lighthouse container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initChownData.enabled | bool | `true` | Init container to set the correct permissions to access data directories |
| initChownData.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| initChownData.image.repository | string | `"busybox"` | Container repository |
| initChownData.image.tag | string | `"1.34.0"` | Container tag |
| initChownData.resources | object | `{}` | Resource requests and limits |
| initContainers | list | `[]` | Additional init containers |
| jwt | string | `"ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a"` | JWT secret used by client as a secret. Change this value. |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| metricsPort | int | `5054` | Metrics Port |
| mode | string | `"beacon"` | Mode can be 'beacon','validator' or 'bootnode' |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| p2pNodePort.enabled | bool | `false` | Expose P2P port via NodePort |
| p2pNodePort.initContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.initContainer.image.repository | string | `"lachlanevenson/k8s-kubectl"` | Container image to fetch nodeport information |
| p2pNodePort.initContainer.image.tag | string | `"v1.25.4"` | Container tag |
| p2pNodePort.port | int | `31000` | NodePort to be used |
| p2pPort | int | `9000` | P2P Port |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"20Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| rbac.clusterRules | list | See `values.yaml` | Required ClusterRole rules |
| rbac.create | bool | `true` | Specifies whether RBAC resources are to be created |
| rbac.rules | list | See `values.yaml` | Required ClusterRole rules |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `300` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |
| validatorLivenessProbe | object | See `values.yaml` | Validator Liveness probe |
| validatorReadinessProbe | object | See `values.yaml` | Validator Readiness probe |

# Examples

## Beacon node on the Holesky testnet connected to Holesky via Infura

```yaml
mode: "beacon"

extraArgs:
  - --network=holesky
  - --execution-endpoint=<EXECUTION-ENDPOINT>
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```

## Validator node targeting a beacon node service

This example runs a validator on the holesky network that targets a pre-existing `lighthouse-beacon` service:

```yaml
replicas: 1

mode: validator

extraArgs:
  - --network=holesky
  - --enable-doppelganger-protection
  - --beacon-nodes=http://lighthouse-beacon:5052
```



================================================
FILE: charts/lighthouse/Chart.yaml
================================================
apiVersion: v2
name: lighthouse
description: An open-source Ethereum 2.0 client, written in Rust
home: https://lighthouse.sigmaprime.io/
icon: https://launchpad.ethereum.org/static/media/lighthouse-circle.e0b82d14.png
sources:
  - https://github.com/sigp/lighthouse
type: application
version: 1.1.5
maintainers:
  - name: skylenet
    email: rafael@skyle.net
  - name: barnabasbusa
    email: busa.barnabas@gmail.com



================================================
FILE: charts/lighthouse/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Beacon node on the Holesky testnet connected to Holesky via Infura

```yaml
mode: "beacon"

extraArgs:
  - --network=holesky
  - --execution-endpoint=<EXECUTION-ENDPOINT>
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```

## Validator node targeting a beacon node service

This example runs a validator on the holesky network that targets a pre-existing `lighthouse-beacon` service:

```yaml
replicas: 1

mode: validator

extraArgs:
  - --network=holesky
  - --enable-doppelganger-protection
  - --beacon-nodes=http://lighthouse-beacon:5052
```



================================================
FILE: charts/lighthouse/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- Lighthouse container image repository
  repository: sigp/lighthouse
  # -- Lighthouse container image tag
  tag: latest
  # -- Lighthouse container pull policy
  pullPolicy: IfNotPresent

# -- Mode can be 'beacon','validator' or 'bootnode'
mode: "beacon"

# -- Extra args for the lighthouse container
extraArgs: []
  ## Example for beacon mode
  #- --network=holesky
  #- --execution.urls=http://your-eth1-node:8551
  #- --checkpoint-sync-url=https://holesky.checkpoint-sync.ethdevops.io
  ##
  ## Example for validator mode
  #- --network=holesky
  #- --enable-doppelganger-protection
  #- --beacon-nodes=http://lighthouse-beacon:5052

# -- JWT secret used by client as a secret. Change this value.
jwt: ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a

# -- Checkpoint Sync
checkpointSync:
  enabled: false
  url: ""

# -- Template used for the default beacon command
# @default -- See `values.yaml`
defaultBeaconCommandTemplate: |
  - sh
  - -ac
  - >
  {{- if .Values.p2pNodePort.enabled }}
    . /env/init-nodeport;
  {{- end }}
    exec lighthouse
    beacon_node
    --datadir=/data
    --disable-upnp
    --disable-enr-auto-update
  {{- if .Values.p2pNodePort.enabled }}
    {{- if not (contains "--enr-address=" (.Values.extraArgs | join ",")) }}
    --enr-address=$EXTERNAL_IP
    {{- end }}
    {{- if not (contains "--enr-tcp-port=" (.Values.extraArgs | join ",")) }}
    --enr-tcp-port=$EXTERNAL_PORT
    {{- end }}
    {{- if not (contains "--enr-udp-port=" (.Values.extraArgs | join ",")) }}
    --enr-udp-port=$EXTERNAL_PORT
    {{- end }}
  {{- else }}
    {{- if not (contains "--enr-address=" (.Values.extraArgs | join ",")) }}
    --enr-address=$(POD_IP)
    {{- end }}
    {{- if not (contains "--enr-tcp-port=" (.Values.extraArgs | join ",")) }}
    --enr-tcp-port={{ include "lighthouse.p2pPort" . }}
    {{- end }}
    {{- if not (contains "--enr-udp-port=" (.Values.extraArgs | join ",")) }}
    --enr-udp-port={{ include "lighthouse.p2pPort" . }}
    {{- end }}
  {{- end }}
    --listen-address=0.0.0.0
    --port={{ include "lighthouse.p2pPort" . }}
    --discovery-port={{ include "lighthouse.p2pPort" . }}
    --http
    --http-address=0.0.0.0
    --http-port={{ .Values.httpPort }}
    --execution-jwt=/data/jwt.hex
    --metrics
    --metrics-address=0.0.0.0
    --metrics-port={{ .Values.metricsPort }}
  {{- if .Values.checkpointSync.enabled }}
    --checkpoint-sync-url={{ tpl .Values.checkpointSync.url $ }}
  {{- else }}
    --allow-insecure-genesis-sync
  {{- end }}
  {{- range .Values.extraArgs }}
    {{ tpl . $ }}
  {{- end }}

# -- Template used for the default validator command
# @default -- See `values.yaml`
defaultValidatorCommandTemplate: |
  - sh
  - -ac
  - >
    exec lighthouse
    validator
    --metrics
    --metrics-address=0.0.0.0
    --metrics-port={{ .Values.metricsPort }}
  {{- range .Values.extraArgs }}
    {{ tpl . $ }}
  {{- end }}

# -- Template used for the default validator command
# @default -- See `values.yaml`
defaultBootnodeCommandTemplate: |
  - sh
  - -ac
  - >
  {{- if .Values.p2pNodePort.enabled }}
    . /env/init-nodeport;
  {{- end }}
    exec lighthouse
    boot_node
    --datadir=/data
    --listen-address=0.0.0.0
    --port={{ include "lighthouse.p2pPort" . }}
  {{- range .Values.extraArgs }}
    {{ . }}
  {{- end }}
  {{- if .Values.p2pNodePort.enabled }}
    --enr-port=$EXTERNAL_PORT
    --enr-address=$EXTERNAL_IP
  {{- else }}
    --enr-port={{ include "lighthouse.p2pPort" . }}
    --enr-address=$(POD_IP)
  {{- end }}


# -- Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplates instead.
customCommand: []

# When p2pNodePort is enabled, your P2P port will be exposed via service type NodePort.
# This will generate a service for each replica, with a port binding via NodePort.
# This is useful if you want to expose and announce your node to the Internet.
p2pNodePort:
  # -- Expose P2P port via NodePort
  enabled: false
  # -- NodePort to be used
  port: 31000
  initContainer:
    image:
      # -- Container image to fetch nodeport information
      repository: lachlanevenson/k8s-kubectl
      # -- Container tag
      tag: v1.25.4
      # -- Container pull policy
      pullPolicy: IfNotPresent

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http-api
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http-api
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Validator Liveness probe
# @default -- See `values.yaml`
validatorLivenessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Validator Readiness probe
# @default -- See `values.yaml`
validatorReadinessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 10
  periodSeconds: 10

# -- P2P Port
p2pPort: 9000

# -- HTTP Port
httpPort: 5052

# -- Metrics Port
metricsPort: 5054

# -- Node selector for pods
nodeSelector: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 20Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

rbac:
  # -- Specifies whether RBAC resources are to be created
  create: true
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  clusterRules:
     # Required to obtain the nodes external IP
    - apiGroups: [""]
      resources:
      - "nodes"
      verbs:
      - "get"
      - "list"
      - "watch"
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  rules:
    # Required to get information about the services nodePort.
    - apiGroups: [""]
      resources:
      - "services"
      verbs:
      - "get"
      - "list"
      - "watch"

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 300

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

# -- Additional env variables injected via a created secret
secretEnv: {}
# MY_PASSWORD: supersecret

initChownData:
  # -- Init container to set the correct permissions to access data directories
  enabled: true
  image:
    # -- Container repository
    repository: busybox
    # -- Container tag
    tag: "1.34.0"
    # -- Container pull policy
    pullPolicy: IfNotPresent
  # -- Resource requests and limits
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/lighthouse/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/lighthouse/ci/bootnode-values.yaml
================================================
replicas: 1

mode: bootnode

extraArgs:
  - --network=holesky

livenessProbe: null

readinessProbe:
  tcpSocket: null
  httpGet:
    path: /enr
    port: 8888

extraContainers:
  - name: enr-http
    image: msoap/shell2http:1.13
    imagePullPolicy: IfNotPresent
    args:
    - -port
    - "8888"
    - /enr
    - "cat /data/beacon/network/enr.dat"
    volumeMounts:
      - name: storage
        mountPath: "/data"
        readOnly: true
    ports:
      - name: enr-http
        containerPort: 8888
        protocol: TCP

extraPorts:
  - port: 8888
    targetPort: enr-http
    protocol: TCP
    name: enr



================================================
FILE: charts/lighthouse/ci/default-values.yaml
================================================
# Leave empty so that CT tests with default values
extraArgs:
  - --execution-endpoint=http://localhost:8551



================================================
FILE: charts/lighthouse/templates/_cmd.tpl
================================================
{{/*
# Beacon command
*/}}
{{- define "lighthouse.beaconCommand" -}}
{{- tpl .Values.defaultBeaconCommandTemplate . }}
{{- end }}


{{/*
# Validator command
*/}}
{{- define "lighthouse.validatorCommand" -}}
{{- tpl .Values.defaultValidatorCommandTemplate . }}
{{- end }}


{{/*
# Bootnode command
*/}}
{{- define "lighthouse.bootnodeCommand" -}}
{{- tpl .Values.defaultBootnodeCommandTemplate . }}
{{- end }}



================================================
FILE: charts/lighthouse/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "lighthouse.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "lighthouse.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "lighthouse.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "lighthouse.labels" -}}
helm.sh/chart: {{ include "lighthouse.chart" . }}
{{ include "lighthouse.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "lighthouse.selectorLabels" -}}
app.kubernetes.io/name: {{ include "lighthouse.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the cluster role.
It needs to be namespace prefixed to avoid naming conflicts when using the same deployment name across namespaces.
*/}}
{{- define "lighthouse.clusterRoleName" -}}
{{ .Release.Namespace }}-{{ include "lighthouse.fullname" . }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "lighthouse.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "lighthouse.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "lighthouse.p2pPort" -}}
{{- if .Values.p2pNodePort.enabled }}
{{- print .Values.p2pNodePort.port }}
{{- else }}
{{- print .Values.p2pPort }}
{{- end }}
{{- end -}}

{{- define "lighthouse.replicas" -}}
{{- if and (.Values.p2pNodePort.enabled) (gt (int .Values.replicas)  1) }}
{{- print 1 }}
{{ else }}
{{- print .Values.replicas }}
{{- end }}
{{- end -}}



================================================
FILE: charts/lighthouse/templates/clusterrole.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "lighthouse.clusterRoleName" . }}
  labels:
    {{- include "lighthouse.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.clusterRules | nindent 0 }}
{{- end }}



================================================
FILE: charts/lighthouse/templates/clusterrolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "lighthouse.clusterRoleName" . }}
  labels:
    {{- include "lighthouse.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "lighthouse.clusterRoleName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "lighthouse.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/lighthouse/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "lighthouse.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "lighthouse.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/lighthouse/templates/NOTES.txt
================================================
{{- if (eq .Values.mode "validator") }}
Get your validator API keys using:
  {{- range $i, $e := until (int $.Values.replicas) }}
  export VALIDATOR_API_KEY_{{$i}}=$(kubectl -n {{ $.Release.Namespace }} exec {{ include "lighthouse.fullname" $ }}-{{$i}} -c lighthouse -- cat /data/validators/api-token.txt)
  {{- end }}
{{- end }}



================================================
FILE: charts/lighthouse/templates/poddisruptionbudget.yaml
================================================
{{- if .Values.podDisruptionBudget }}
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ include "lighthouse.fullname" . }}
  labels:
    {{- include "lighthouse.labels" . | nindent 4 }}
spec:
{{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
{{- end }}
{{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
{{- end }}
  selector:
    matchLabels:
      {{- include "lighthouse.selectorLabels" . | nindent 6 }}
{{- end }}



================================================
FILE: charts/lighthouse/templates/role.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "lighthouse.serviceAccountName" . }}
  labels:
    {{- include "lighthouse.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.rules | nindent 0 }}
{{- end }}



================================================
FILE: charts/lighthouse/templates/rolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "lighthouse.serviceAccountName" . }}
  labels:
    {{- include "lighthouse.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "lighthouse.serviceAccountName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "lighthouse.serviceAccountName" . }}
{{- end }}



================================================
FILE: charts/lighthouse/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "lighthouse.fullname" . }}-env
  labels:
    {{- include "lighthouse.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "lighthouse.fullname" . }}-jwt
type: Opaque  
data:
  jwt.hex: {{ .Values.jwt | b64enc }}



================================================
FILE: charts/lighthouse/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "lighthouse.fullname" . }}-headless
  labels:
    {{- include "lighthouse.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
  {{- if or (eq .Values.mode "beacon") (eq .Values.mode "bootnode") }}
    - port: {{ include "lighthouse.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "lighthouse.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
  {{- end }}
  {{- if or (eq .Values.mode "beacon") (eq .Values.mode "validator") }}
    - port: {{ .Values.httpPort }}
      targetPort: http-api
      protocol: TCP
      name: http-api
  {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "lighthouse.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/lighthouse/templates/service.p2p.nodeport.yaml
================================================
{{- if .Values.p2pNodePort.enabled -}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "lighthouse.fullname" $ }}-p2p-0
  labels:
    {{- include "lighthouse.labels" $ | nindent 4 }}
    pod: {{ include "lighthouse.fullname" $ }}-0
    type: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p-tcp
      port: {{ include "lighthouse.p2pPort" $ }}
      protocol: TCP
      targetPort: p2p-tcp
      nodePort: {{ include "lighthouse.p2pPort" $ }}
    - name: p2p-udp
      port: {{ include "lighthouse.p2pPort" $ }}
      protocol: UDP
      targetPort: p2p-udp
      nodePort: {{ include "lighthouse.p2pPort" $ }}
  selector:
    {{- include "lighthouse.selectorLabels" $ | nindent 4 }}
    statefulset.kubernetes.io/pod-name: "{{ include "lighthouse.fullname" $ }}-0"
{{- end }}



================================================
FILE: charts/lighthouse/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "lighthouse.fullname" . }}
  labels:
    {{- include "lighthouse.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
  {{- if or (eq .Values.mode "beacon") (eq .Values.mode "bootnode") }}
    - port: {{ include "lighthouse.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "lighthouse.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
  {{- end }}
  {{- if or (eq .Values.mode "beacon") (eq .Values.mode "validator") }}
    - port: {{ .Values.httpPort }}
      targetPort: http-api
      protocol: TCP
      name: http-api
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "lighthouse.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/lighthouse/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "lighthouse.serviceAccountName" . }}
  labels:
    {{- include "lighthouse.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/lighthouse/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
{{- if or (eq .Values.mode "beacon") (eq .Values.mode "validator") }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "lighthouse.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "lighthouse.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "lighthouse.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}
{{- end }}



================================================
FILE: charts/lighthouse/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "lighthouse.fullname" . }}
  labels:
    {{- include "lighthouse.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ include "lighthouse.replicas" . }}
  selector:
    matchLabels:
      {{- include "lighthouse.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "lighthouse.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "lighthouse.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "lighthouse.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- tpl (toYaml .Values.initContainers | nindent 8) $ }}
      {{- end }}
      {{- if .Values.p2pNodePort.enabled }}
        - name: init-nodeport
          image: "{{ .Values.p2pNodePort.initContainer.image.repository }}:{{ .Values.p2pNodePort.initContainer.image.tag }}"
          imagePullPolicy: {{.Values.p2pNodePort.initContainer.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - sh
            - -c
            - >
              export EXTERNAL_PORT=$(kubectl get services -l "pod in (${POD_NAME}), type in (p2p)" -o jsonpath='{.items[0].spec.ports[0].nodePort}');
              export EXTERNAL_IP=$(kubectl get nodes "${NODE_NAME}" -o jsonpath='{.status.addresses[?(@.type=="ExternalIP")].address}');
              echo "EXTERNAL_PORT=$EXTERNAL_PORT" >  /env/init-nodeport;
              echo "EXTERNAL_IP=$EXTERNAL_IP"     >> /env/init-nodeport;
              cat /env/init-nodeport;
          volumeMounts:
            - name: env-nodeport
              mountPath: /env
      {{- end }}
      {{- if .Values.initChownData.enabled }}
        - name: init-chown-data
          image: "{{ .Values.initChownData.image.repository }}:{{ .Values.initChownData.image.tag }}"
          imagePullPolicy: {{ .Values.initChownData.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }}", "/data"]
          resources:
      {{ toYaml .Values.initChownData.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: "/data"
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else if eq .Values.mode "beacon" }}
            {{- include "lighthouse.beaconCommand" . | nindent 12 }}
          {{- else if eq .Values.mode "validator" }}
            {{- include "lighthouse.validatorCommand" . | nindent 12 }}
          {{- else if eq .Values.mode "bootnode" }}
            {{- include "lighthouse.bootnodeCommand" . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            {{- if .Values.p2pNodePort.enabled }}
            - name: env-nodeport
              mountPath: /env
            {{- end }}
            - name: storage
              mountPath: "/data"
            - name: jwt
              mountPath: "/data/jwt.hex"
              subPath: jwt.hex
              readOnly: true
          ports:
          {{- if or (eq .Values.mode "beacon") (eq .Values.mode "bootnode") }}
            - name: p2p-tcp
              containerPort: {{ include "lighthouse.p2pPort" . }}
              protocol: TCP
            - name: p2p-udp
              containerPort: {{ include "lighthouse.p2pPort" . }}
              protocol: UDP
            - name: http-api
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
          {{- end }}    
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
              protocol: TCP
          {{- if eq .Values.mode "beacon" }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- else if eq .Values.mode "validator" }}
          livenessProbe:
            {{- toYaml .Values.validatorLivenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.validatorReadinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "lighthouse.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ tpl (toYaml .Values.extraContainers | nindent 8) $ }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: jwt
          secret:
            secretName: {{ include "lighthouse.fullname" . }}-jwt
      {{- if .Values.p2pNodePort.enabled }}
        - name: env-nodeport
          emptyDir: {}
      {{- end }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/lighthouse/templates/tests/test-connection.yaml
================================================
{{- if not (eq .Values.mode "bootnode") }}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "lighthouse.fullname" . }}-test-connection"
  labels:
    {{- include "lighthouse.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      {{- if eq .Values.mode "beacon" }}
      args: ['{{ include "lighthouse.fullname" . }}:{{ .Values.httpPort }}/eth/v1/node/version']
      {{- else if eq .Values.mode "validator" }}
      args: ['{{ include "lighthouse.fullname" . }}:{{ .Values.metricsPort }}/metrics']
      {{- end }}
  restartPolicy: Never
{{- end }}



================================================
FILE: charts/lodestar/README.md
================================================

# lodestar

![Version: 1.1.4](https://img.shields.io/badge/Version-1.1.4-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Lodestar is a open-source TypeScript implementation of the Ethereum consensus engine.

**Homepage:** <https://lodestar.chainsafe.io/>

## Source Code

* <https://github.com/ChainSafe/lodestar>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| checkpointSync | object | `{"enabled":false,"url":""}` | Checkpoint Sync |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customCommand | list | `[]` | Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplates instead. |
| defaultBeaconCommandTemplate | string | See `values.yaml` | Template used for the default beacon command |
| defaultValidatorCommandTemplate | string | See `values.yaml` | Template used for the default validator command |
| extraArgs | list | `[]` | Extra args for the lodestar container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `9596` | HTTP Port |
| image.pullPolicy | string | `"IfNotPresent"` | lodestar container pull policy |
| image.repository | string | `"chainsafe/lodestar"` | lodestar container image repository |
| image.tag | string | `"latest"` | lodestar container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initChownData.enabled | bool | `true` | Init container to set the correct permissions to access data directories |
| initChownData.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| initChownData.image.repository | string | `"busybox"` | Container repository |
| initChownData.image.tag | string | `"1.34.0"` | Container tag |
| initChownData.resources | object | `{}` | Resource requests and limits |
| initContainers | list | `[]` | Additional init containers |
| jwt | string | `"ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a"` | JWT secret used by client as a secret. Change this value. |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| metricsPort | int | `8008` | Metrics Port |
| mode | string | `"beacon"` | Mode can be 'beacon' or 'validator' |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| p2pNodePort.enabled | bool | `false` | Expose P2P port via NodePort |
| p2pNodePort.initContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.initContainer.image.repository | string | `"lachlanevenson/k8s-kubectl"` | Container image to fetch nodeport information |
| p2pNodePort.initContainer.image.tag | string | `"v1.25.4"` | Container tag |
| p2pNodePort.port | int | `31000` | NodePort to be used |
| p2pPort | int | `9000` | P2P Port |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"20Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| rbac.clusterRules | list | See `values.yaml` | Required ClusterRole rules |
| rbac.create | bool | `true` | Specifies whether RBAC resources are to be created |
| rbac.rules | list | See `values.yaml` | Required ClusterRole rules |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `300` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |
| validatorLivenessProbe | object | See `values.yaml` | Validator Liveness probe |
| validatorReadinessProbe | object | See `values.yaml` | Validator Readiness probe |

# Examples

## Beacon node on the Holesky testnet connected to Holesky via Infura

```yaml
mode: "beacon"

extraArgs:
  - --network=holesky
  - --execution.urls=<EXECUTION-ENDPOINT>
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```

## Validator node targeting a beacon node service

This example runs a validator on the holesky network that targets a pre-existing `lodestar-beacon`
service by injecting the all-accounts.keystore.json` file via a secret ENV var. You could use a similar
approach to fetch your secrets from some external secret management system (Hashicorp Vault, Azure key vault, etc.):

```yaml
replicas: 1

mode: validator

initContainers:
  - name: init-keystore
    image: bash:latest
    imagePullPolicy: IfNotPresent
    securityContext:
      runAsNonRoot: false
      runAsUser: 0
    command:
    - bash
    - -c
    - >
      apk add jq;
      export INDEX=$(echo $(hostname)| rev | cut -d'-' -f 1 | rev);
      mkdir -p /data/validator/keys;
      mkdir -p /data/validator/secrets;
      KEY_COUNT="NODE_${INDEX}_KEY_COUNT";
      for ((i = 0 ; i < "${!KEY_COUNT}" ; i++ ));
      do
        echo "====";
        key="NODE_${INDEX}_KEY_${i}";
        PUBKEY=$(echo ${!key} | jq '.pubkey' -j);
        mkdir "/data/validator/keys/0x${PUBKEY}";
        echo ${!key} > "/data/validator/keys/0x${PUBKEY}/voting-keystore.json";
        secret="NODE_${INDEX}_SECRET_${i}";
        echo ${!secret} > "/data/validator/secrets/0x${PUBKEY}";
        echo "Added 0x${PUBKEY}";
      done
    volumeMounts:
      - name: storage
        mountPath: "/data"
        readOnly:
    env:
      - name: NODE_0_KEY_COUNT
        value: "1"
      - name: NODE_0_SECRET_0
        valueFrom:
          secretKeyRef:
            # Name of the secret that will be generated for you. This is normally `${RELEASE-name}-env`
            # You might need to change this
            name: lodestar-env
            key: NODE_0_SECRET_0
      - name: NODE_0_KEY_0
        valueFrom:
          secretKeyRef:
            # See comment on the previous secretKeyRef
            name: lodestar-env
            key: NODE_0_KEY_0

extraArgs:
  - --network=holesky
  - --keystoresDir=/data/validator/keys
  - --secretsDir=/data/validator/secrets
  - --server=http://lodestar-beacon:9596

livenessProbe: null

readinessProbe: null

secretEnv:
  # Note: Never publish any of your production secrets online. These are just used for testing purposes.
  NODE_0_SECRET_0: Mrc085nWbjTc1mhAPt_Ukj4m_vui2iUQWr6TwNRq_4k=
  NODE_0_KEY_0: {"crypto":{"checksum":{"function":"sha256","message":"7bbdd8cda652d792dceae7477b911106296620c44a6c1d0356c6ff52daca2b5b","params":{}},"cipher":{"function":"aes-128-ctr","message":"689f5c97fad87665e2fe8acbc0aad91bdc85de7756ebdc496f1373bae01c02c8","params":{"iv":"7b8e1ed4480dee19cbb1528394ad2095"}},"kdf":{"function":"pbkdf2","message":"","params":{"c":262144,"dklen":32,"prf":"hmac-sha256","salt":"bb560dfbb56016e0630e4415b74d86ede9090c0545854ed7c0ad921047a39cef"}}},"path":"","pubkey":"8e48cbd28d25847a6b122a62179b6ac11ee7877a4c489799918308e6252b7f6601f969179ac7465e256c01815b71b6d1","uuid":"f13ece4f-d57e-4789-accc-ad50f0fef882","version":4}

```



================================================
FILE: charts/lodestar/Chart.yaml
================================================
apiVersion: v2
name: lodestar
description: Lodestar is a open-source TypeScript implementation of the Ethereum consensus engine.
home: https://lodestar.chainsafe.io/
icon: https://raw.githubusercontent.com/ChainSafe/lodestar/master/assets/lodestar_icon_300.png
sources:
  - https://github.com/ChainSafe/lodestar
type: application
version: 1.1.4
maintainers:
  - name: skylenet
    email: rafael@skyle.net
  - name: barnabasbusa
    email: busa.barnabas@gmail.com



================================================
FILE: charts/lodestar/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Beacon node on the Holesky testnet connected to Holesky via Infura

```yaml
mode: "beacon"

extraArgs:
  - --network=holesky
  - --execution.urls=<EXECUTION-ENDPOINT>
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```

## Validator node targeting a beacon node service

This example runs a validator on the holesky network that targets a pre-existing `lodestar-beacon`
service by injecting the all-accounts.keystore.json` file via a secret ENV var. You could use a similar
approach to fetch your secrets from some external secret management system (Hashicorp Vault, Azure key vault, etc.):

```yaml
replicas: 1

mode: validator

initContainers:
  - name: init-keystore
    image: bash:latest
    imagePullPolicy: IfNotPresent
    securityContext:
      runAsNonRoot: false
      runAsUser: 0
    command:
    - bash
    - -c
    - >
      apk add jq;
      export INDEX=$(echo $(hostname)| rev | cut -d'-' -f 1 | rev);
      mkdir -p /data/validator/keys;
      mkdir -p /data/validator/secrets;
      KEY_COUNT="NODE_${INDEX}_KEY_COUNT";
      for ((i = 0 ; i < "${!KEY_COUNT}" ; i++ ));
      do
        echo "====";
        key="NODE_${INDEX}_KEY_${i}";
        PUBKEY=$(echo ${!key} | jq '.pubkey' -j);
        mkdir "/data/validator/keys/0x${PUBKEY}";
        echo ${!key} > "/data/validator/keys/0x${PUBKEY}/voting-keystore.json";
        secret="NODE_${INDEX}_SECRET_${i}";
        echo ${!secret} > "/data/validator/secrets/0x${PUBKEY}";
        echo "Added 0x${PUBKEY}";
      done
    volumeMounts:
      - name: storage
        mountPath: "/data"
        readOnly:
    env:
      - name: NODE_0_KEY_COUNT
        value: "1"
      - name: NODE_0_SECRET_0
        valueFrom:
          secretKeyRef:
            # Name of the secret that will be generated for you. This is normally `${RELEASE-name}-env`
            # You might need to change this
            name: lodestar-env
            key: NODE_0_SECRET_0
      - name: NODE_0_KEY_0
        valueFrom:
          secretKeyRef:
            # See comment on the previous secretKeyRef
            name: lodestar-env
            key: NODE_0_KEY_0

extraArgs:
  - --network=holesky
  - --keystoresDir=/data/validator/keys
  - --secretsDir=/data/validator/secrets
  - --server=http://lodestar-beacon:9596

livenessProbe: null

readinessProbe: null

secretEnv:
  # Note: Never publish any of your production secrets online. These are just used for testing purposes.
  NODE_0_SECRET_0: Mrc085nWbjTc1mhAPt_Ukj4m_vui2iUQWr6TwNRq_4k=
  NODE_0_KEY_0: {"crypto":{"checksum":{"function":"sha256","message":"7bbdd8cda652d792dceae7477b911106296620c44a6c1d0356c6ff52daca2b5b","params":{}},"cipher":{"function":"aes-128-ctr","message":"689f5c97fad87665e2fe8acbc0aad91bdc85de7756ebdc496f1373bae01c02c8","params":{"iv":"7b8e1ed4480dee19cbb1528394ad2095"}},"kdf":{"function":"pbkdf2","message":"","params":{"c":262144,"dklen":32,"prf":"hmac-sha256","salt":"bb560dfbb56016e0630e4415b74d86ede9090c0545854ed7c0ad921047a39cef"}}},"path":"","pubkey":"8e48cbd28d25847a6b122a62179b6ac11ee7877a4c489799918308e6252b7f6601f969179ac7465e256c01815b71b6d1","uuid":"f13ece4f-d57e-4789-accc-ad50f0fef882","version":4}

```



================================================
FILE: charts/lodestar/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- lodestar container image repository
  repository: chainsafe/lodestar
  # -- lodestar container image tag
  tag: latest
  # -- lodestar container pull policy
  pullPolicy: IfNotPresent

# -- Mode can be 'beacon' or 'validator'
mode: "beacon"

# -- Extra args for the lodestar container
extraArgs: []
  ## Example for beacon mode
  #- --network=holesky
  #- --execution.urls=http://your-eth1-node:8551
  #- --checkpointSyncUrl=https://holesky.checkpoint-sync.ethdevops.io
  ##
  ## Example for validator mode
  #- --network=holesky
  #- --server=http://lodestar-beacon:9596

# -- JWT secret used by client as a secret. Change this value.
jwt: ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a

# -- Checkpoint Sync
checkpointSync:
  enabled: false
  url: ""

# -- Template used for the default beacon command
# @default -- See `values.yaml`
defaultBeaconCommandTemplate: |
  - sh
  - -ac
  - >-
  {{- if .Values.p2pNodePort.enabled }}
    . /env/init-nodeport;
  {{- end }}
    node /usr/app/node_modules/.bin/lodestar
    beacon
    --dataDir=/data
    --discv5
    --listenAddress=0.0.0.0
    --port={{ include "lodestar.p2pPort" . }}
  {{- if .Values.p2pNodePort.enabled }}
    {{- if not (contains "--enr.ip=" (.Values.extraArgs | join ",")) }}
    --enr.ip=$EXTERNAL_IP
    {{- end }}
    {{- if not (contains "--enr.tcp=" (.Values.extraArgs | join ",")) }}
    --enr.tcp=$EXTERNAL_PORT
    {{- end }}
    {{- if not (contains "--enr.udp=" (.Values.extraArgs | join ",")) }}
    --enr.udp=$EXTERNAL_PORT
    {{- end }}
  {{- else }}
    {{- if not (contains "--enr.ip=" (.Values.extraArgs | join ",")) }}
    --enr.ip=$(POD_IP)
    {{- end }}
    {{- if not (contains "--enr.tcp=" (.Values.extraArgs | join ",")) }}
    --enr.tcp={{ include "lodestar.p2pPort" . }}
    {{- end }}
    {{- if not (contains "--enr.udp=" (.Values.extraArgs | join ",")) }}
    --enr.udp={{ include "lodestar.p2pPort" . }}
    {{- end }}
  {{- end }}
    --rest
    --rest.address=0.0.0.0
    --rest.port={{ .Values.httpPort }}
    --jwt-secret=/data/jwt.hex
    --metrics
    --metrics.address=0.0.0.0
    --metrics.port={{ .Values.metricsPort }}
  {{- if .Values.checkpointSync.enabled }}
    --checkpointSyncUrl={{ tpl .Values.checkpointSync.url $ }}
  {{- end }}
  {{- range .Values.extraArgs }}
    {{ tpl . $ }}
  {{- end }}

# -- Template used for the default validator command
# @default -- See `values.yaml`
defaultValidatorCommandTemplate: |
  - sh
  - -ac
  - >-
    node /usr/app/node_modules/.bin/lodestar
    validator
    --dataDir=/data
    --metrics
    --metrics.address=0.0.0.0
    --metrics.port={{ .Values.metricsPort }}
  {{- range .Values.extraArgs }}
    {{ tpl . $ }}
  {{- end }}

# -- Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplates instead.
customCommand: []

# When p2pNodePort is enabled, your P2P port will be exposed via service type NodePort.
# This will generate a service for each replica, with a port binding via NodePort.
# This is useful if you want to expose and announce your node to the Internet.
p2pNodePort:
  # -- Expose P2P port via NodePort
  enabled: false
  # -- NodePort to be used
  port: 31000
  initContainer:
    image:
      # -- Container image to fetch nodeport information
      repository: lachlanevenson/k8s-kubectl
      # -- Container tag
      tag: v1.25.4
      # -- Container pull policy
      pullPolicy: IfNotPresent

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http-api
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http-api
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Validator Liveness probe
# @default -- See `values.yaml`
validatorLivenessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Validator Readiness probe
# @default -- See `values.yaml`
validatorReadinessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 10
  periodSeconds: 10


# -- P2P Port
p2pPort: 9000

# -- HTTP Port
httpPort: 9596

# -- Metrics Port
metricsPort: 8008

# -- Node selector for pods
nodeSelector: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 20Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

rbac:
  # -- Specifies whether RBAC resources are to be created
  create: true
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  clusterRules:
     # Required to obtain the nodes external IP
    - apiGroups: [""]
      resources:
      - "nodes"
      verbs:
      - "get"
      - "list"
      - "watch"
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  rules:
    # Required to get information about the services nodePort.
    - apiGroups: [""]
      resources:
      - "services"
      verbs:
      - "get"
      - "list"
      - "watch"

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 300

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

# -- Additional env variables injected via a created secret
secretEnv: {}
# MY_PASSWORD: supersecret

initChownData:
  # -- Init container to set the correct permissions to access data directories
  enabled: true
  image:
    # -- Container repository
    repository: busybox
    # -- Container tag
    tag: "1.34.0"
    # -- Container pull policy
    pullPolicy: IfNotPresent
  # -- Resource requests and limits
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/lodestar/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/lodestar/ci/default-values.yaml
================================================
# Leave empty so that CT tests with default values



================================================
FILE: charts/lodestar/ci/validator-values.yaml
================================================
replicas: 1

mode: validator

initContainers:
  - name: init-keystore
    image: bash:latest
    imagePullPolicy: IfNotPresent
    securityContext:
      runAsNonRoot: false
      runAsUser: 0
    command:
    - bash
    - -c
    - >
      apk add jq;
      export INDEX=$(echo $(hostname)| rev | cut -d'-' -f 1 | rev);
      mkdir -p /data/validator/keys;
      mkdir -p /data/validator/secrets;
      KEY_COUNT="NODE_${INDEX}_KEY_COUNT";
      for ((i = 0 ; i < "${!KEY_COUNT}" ; i++ ));
      do
        echo "====";
        key="NODE_${INDEX}_KEY_${i}";
        PUBKEY=$(echo ${!key} | jq '.pubkey' -j);
        mkdir "/data/validator/keys/0x${PUBKEY}";
        echo ${!key} > "/data/validator/keys/0x${PUBKEY}/voting-keystore.json";
        secret="NODE_${INDEX}_SECRET_${i}";
        echo ${!secret} > "/data/validator/secrets/0x${PUBKEY}";
        echo "Added 0x${PUBKEY}";
      done
    volumeMounts:
      - name: storage
        mountPath: "/data"
        readOnly:
    env:
      - name: NODE_0_KEY_COUNT
        value: "1"
      - name: NODE_0_SECRET_0
        value: Mrc085nWbjTc1mhAPt_Ukj4m_vui2iUQWr6TwNRq_4k=
      - name: NODE_0_KEY_0
        value: >
          {"crypto":{"checksum":{"function":"sha256","message":"7bbdd8cda652d792dceae7477b911106296620c44a6c1d0356c6ff52daca2b5b","params":{}},"cipher":{"function":"aes-128-ctr","message":"689f5c97fad87665e2fe8acbc0aad91bdc85de7756ebdc496f1373bae01c02c8","params":{"iv":"7b8e1ed4480dee19cbb1528394ad2095"}},"kdf":{"function":"pbkdf2","message":"","params":{"c":262144,"dklen":32,"prf":"hmac-sha256","salt":"bb560dfbb56016e0630e4415b74d86ede9090c0545854ed7c0ad921047a39cef"}}},"path":"","pubkey":"8e48cbd28d25847a6b122a62179b6ac11ee7877a4c489799918308e6252b7f6601f969179ac7465e256c01815b71b6d1","uuid":"f13ece4f-d57e-4789-accc-ad50f0fef882","version":4}


extraArgs:
  - --network=holesky
  - --keystoresDir=/data/validator/keys
  - --secretsDir=/data/validator/secrets
  - --server=http://lodestar-beacon:9596

livenessProbe: null

readinessProbe: null



================================================
FILE: charts/lodestar/templates/_cmd.tpl
================================================
{{/*
# Beacon command
*/}}
{{- define "lodestar.beaconCommand" -}}
{{- tpl .Values.defaultBeaconCommandTemplate . }}
{{- end }}


{{/*
# Validator command
*/}}
{{- define "lodestar.validatorCommand" -}}
{{- tpl .Values.defaultValidatorCommandTemplate . }}
{{- end }}



================================================
FILE: charts/lodestar/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "lodestar.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "lodestar.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "lodestar.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "lodestar.labels" -}}
helm.sh/chart: {{ include "lodestar.chart" . }}
{{ include "lodestar.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "lodestar.selectorLabels" -}}
app.kubernetes.io/name: {{ include "lodestar.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "lodestar.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "lodestar.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{/*
Create the name of the cluster role.
It needs to be namespace prefixed to avoid naming conflicts when using the same deployment name across namespaces.
*/}}
{{- define "lodestar.clusterRoleName" -}}
{{ .Release.Namespace }}-{{ include "lodestar.fullname" . }}
{{- end }}

{{- define "lodestar.p2pPort" -}}
{{- if .Values.p2pNodePort.enabled }}
{{- print .Values.p2pNodePort.port }}
{{- else }}
{{- print .Values.p2pPort }}
{{- end }}
{{- end -}}

{{- define "lodestar.replicas" -}}
{{- if and (.Values.p2pNodePort.enabled) (gt (int .Values.replicas)  1) }}
{{- print 1 }}
{{ else }}
{{- print .Values.replicas }}
{{- end }}
{{- end -}}



================================================
FILE: charts/lodestar/templates/clusterrole.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "lodestar.clusterRoleName" . }}
  labels:
    {{- include "lodestar.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.clusterRules | nindent 0 }}
{{- end }}



================================================
FILE: charts/lodestar/templates/clusterrolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "lodestar.clusterRoleName" . }}
  labels:
    {{- include "lodestar.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "lodestar.clusterRoleName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "lodestar.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/lodestar/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "lodestar.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "lodestar.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/lodestar/templates/NOTES.txt
================================================



================================================
FILE: charts/lodestar/templates/poddisruptionbudget.yaml
================================================
{{- if .Values.podDisruptionBudget }}
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ include "lodestar.fullname" . }}
  labels:
    {{- include "lodestar.labels" . | nindent 4 }}
spec:
{{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
{{- end }}
{{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
{{- end }}
  selector:
    matchLabels:
      {{- include "lodestar.selectorLabels" . | nindent 6 }}
{{- end }}



================================================
FILE: charts/lodestar/templates/role.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "lodestar.serviceAccountName" . }}
  labels:
    {{- include "lodestar.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.rules | nindent 0 }}
{{- end }}



================================================
FILE: charts/lodestar/templates/rolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "lodestar.serviceAccountName" . }}
  labels:
    {{- include "lodestar.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "lodestar.serviceAccountName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "lodestar.serviceAccountName" . }}
{{- end }}



================================================
FILE: charts/lodestar/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "lodestar.fullname" . }}-env
  labels:
    {{- include "lodestar.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "lodestar.fullname" . }}-jwt
type: Opaque
data:
  jwt.hex: {{ .Values.jwt | b64enc }}


================================================
FILE: charts/lodestar/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "lodestar.fullname" . }}-headless
  labels:
    {{- include "lodestar.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
  {{- if eq .Values.mode "beacon" }}
    - port: {{ include "lodestar.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "lodestar.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: {{ .Values.httpPort }}
      targetPort: http-api
      protocol: TCP
      name: http-api
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "lodestar.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/lodestar/templates/service.p2p.nodeport.yaml
================================================
{{- if .Values.p2pNodePort.enabled -}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "lodestar.fullname" $ }}-p2p-0
  labels:
    {{- include "lodestar.labels" $ | nindent 4 }}
    pod: {{ include "lodestar.fullname" $ }}-0
    type: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p-tcp
      port: {{ include "lodestar.p2pPort" $ }}
      protocol: TCP
      targetPort: p2p-tcp
      nodePort: {{ include "lodestar.p2pPort" $ }}
    - name: p2p-udp
      port: {{ include "lodestar.p2pPort" $ }}
      protocol: UDP
      targetPort: p2p-udp
      nodePort: {{ include "lodestar.p2pPort" $ }}
  selector:
    {{- include "lodestar.selectorLabels" $ | nindent 4 }}
    statefulset.kubernetes.io/pod-name: "{{ include "lodestar.fullname" $ }}-0"
{{- end }}



================================================
FILE: charts/lodestar/templates/service.yaml
================================================
{{- if eq .Values.mode "beacon" }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "lodestar.fullname" . }}
  labels:
    {{- include "lodestar.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
  {{- if eq .Values.mode "beacon" }}
    - port: {{ include "lodestar.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "lodestar.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: {{ .Values.httpPort }}
      targetPort: http-api
      protocol: TCP
      name: http-api
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "lodestar.selectorLabels" . | nindent 4 }}
{{- end }}



================================================
FILE: charts/lodestar/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "lodestar.serviceAccountName" . }}
  labels:
    {{- include "lodestar.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/lodestar/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
{{- if eq .Values.mode "beacon" }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "lodestar.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "lodestar.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "lodestar.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}
{{- end }}



================================================
FILE: charts/lodestar/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "lodestar.fullname" . }}
  labels:
    {{- include "lodestar.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ include "lodestar.replicas" . }}
  selector:
    matchLabels:
      {{- include "lodestar.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "lodestar.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "lodestar.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      # Needs to be set to false, otherwise it will inject "LODESTAR_PORT_*" env vars which the client uses as config args.
      # See: https://kubernetes.io/docs/concepts/services-networking/connect-applications-service/#accessing-the-service
      enableServiceLinks: false
      serviceAccountName: {{ include "lodestar.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- tpl (toYaml .Values.initContainers | nindent 8) $ }}
      {{- end }}
      {{- if .Values.p2pNodePort.enabled }}
        - name: init-nodeport
          image: "{{ .Values.p2pNodePort.initContainer.image.repository }}:{{ .Values.p2pNodePort.initContainer.image.tag }}"
          imagePullPolicy: {{.Values.p2pNodePort.initContainer.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - sh
            - -c
            - >
              export EXTERNAL_PORT=$(kubectl get services -l "pod in (${POD_NAME}), type in (p2p)" -o jsonpath='{.items[0].spec.ports[0].nodePort}');
              export EXTERNAL_IP=$(kubectl get nodes "${NODE_NAME}" -o jsonpath='{.status.addresses[?(@.type=="ExternalIP")].address}');
              echo "EXTERNAL_PORT=$EXTERNAL_PORT" >  /env/init-nodeport;
              echo "EXTERNAL_IP=$EXTERNAL_IP"     >> /env/init-nodeport;
              cat /env/init-nodeport;
          volumeMounts:
            - name: env-nodeport
              mountPath: /env
      {{- end }}
      {{- if .Values.initChownData.enabled }}
        - name: init-chown-data
          image: "{{ .Values.initChownData.image.repository }}:{{ .Values.initChownData.image.tag }}"
          imagePullPolicy: {{ .Values.initChownData.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }}", "/data"]
          resources:
      {{ toYaml .Values.initChownData.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: "/data"
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else if eq .Values.mode "beacon" }}
            {{- include "lodestar.beaconCommand" . | nindent 12 }}
          {{- else if eq .Values.mode "validator" }}
            {{- include "lodestar.validatorCommand" . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            {{- if .Values.p2pNodePort.enabled }}
            - name: env-nodeport
              mountPath: /env
            {{- end }}
            - name: storage
              mountPath: "/data"
            - name: jwt
              mountPath: "/data/jwt.hex"
              subPath: jwt.hex
              readOnly: true
          ports:
          {{- if eq .Values.mode "beacon" }}
            - name: p2p-tcp
              containerPort: {{ include "lodestar.p2pPort" . }}
              protocol: TCP
            - name: p2p-udp
              containerPort: {{ include "lodestar.p2pPort" . }}
              protocol: UDP
            - name: http-api
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
          {{- end }}    
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
              protocol: TCP
          {{- if eq .Values.mode "beacon" }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- else if eq .Values.mode "validator" }}
          livenessProbe:
            {{- toYaml .Values.validatorLivenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.validatorReadinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "lodestar.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ tpl (toYaml .Values.extraContainers | nindent 8) $ }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: jwt
          secret:
            secretName: {{ include "lodestar.fullname" . }}-jwt
      {{- if .Values.p2pNodePort.enabled }}
        - name: env-nodeport
          emptyDir: {}
      {{- end }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/lodestar/templates/tests/test-connection.yaml
================================================

{{- if eq .Values.mode "beacon" }}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "lodestar.fullname" . }}-test-connection"
  labels:
    {{- include "lodestar.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args: ['{{ include "lodestar.fullname" . }}:{{ .Values.httpPort }}/eth/v1/node/version']
  restartPolicy: Never
{{- end }}



================================================
FILE: charts/nethermind/README.md
================================================

# nethermind

![Version: 1.0.14](https://img.shields.io/badge/Version-1.0.14-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Nethermind is an Ethereum execution layer implementation created with the C# .NET tech stack, running on all major platforms including ARM.

**Homepage:** <https://nethermind.io/>

## Source Code

* <https://github.com/NethermindEth/nethermind>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| authPort | int | `8551` | Engine Port (Auth Port) |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customCommand | list | `[]` | Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplate instead. |
| defaultCommandTemplate | string | See `values.yaml` | Template used for the default command |
| extraArgs | list | `[]` | Extra args for the nethermind container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `8545` | HTTP Port |
| image.pullPolicy | string | `"IfNotPresent"` | nethermind container pull policy |
| image.repository | string | `"nethermind/nethermind"` | nethermind container image repository |
| image.tag | string | `"latest"` | nethermind container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initChownData.enabled | bool | `true` | Init container to set the correct permissions to access data directories |
| initChownData.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| initChownData.image.repository | string | `"busybox"` | Container repository |
| initChownData.image.tag | string | `"1.34.0"` | Container tag |
| initChownData.resources | object | `{}` | Resource requests and limits |
| initContainers | list | `[]` | Additional init containers |
| jwt | string | `"ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a"` | JWT secret used by client as a secret. Change this value. |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| metricsPort | int | `9545` | Metrics Port |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| p2pNodePort.enabled | bool | `false` | Expose P2P port via NodePort |
| p2pNodePort.initContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.initContainer.image.repository | string | `"lachlanevenson/k8s-kubectl"` | Container image to fetch nodeport information |
| p2pNodePort.initContainer.image.tag | string | `"v1.25.4"` | Container tag |
| p2pNodePort.port | int | `31000` | NodePort to be used |
| p2pNodePort.portForwardContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.portForwardContainer.image.repository | string | `"alpine/socat"` | Container image for the port forwarder |
| p2pNodePort.portForwardContainer.image.tag | string | `"latest"` | Container tag |
| p2pPort | int | `30303` | P2P Port |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"20Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| rbac.clusterRules | list | See `values.yaml` | Required ClusterRole rules |
| rbac.create | bool | `true` | Specifies whether RBAC resources are to be created |
| rbac.rules | list | See `values.yaml` | Required ClusterRole rules |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `300` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |
| wsPort | int | `8545` | WS Port |

# Examples

## Connecting to the holesky test network

```yaml
extraArgs:
  - --config=holesky
  - --Network.MaxActivePeers=60
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.
Currently nethermind doesn't allow you to announce a a different discovery port, which would be a requirement to run multiple replicas within the same chart.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```



================================================
FILE: charts/nethermind/Chart.yaml
================================================
apiVersion: v2
name: nethermind
description: >
  Nethermind is an Ethereum execution layer implementation created with the C# .NET tech stack, running on all major platforms including ARM.
home: https://nethermind.io/
icon: https://launchpad.ethereum.org/static/media/nethermind-circle.fbbf1a32.png
sources:
  - https://github.com/NethermindEth/nethermind
type: application
version: 1.0.14
maintainers:
  - name: skylenet
    email: rafael@skyle.net
  - name: barnabasbusa
    email: busa.barnabas@gmail.com



================================================
FILE: charts/nethermind/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Connecting to the holesky test network

```yaml
extraArgs:
  - --config=holesky
  - --Network.MaxActivePeers=60
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.
Currently nethermind doesn't allow you to announce a a different discovery port, which would be a requirement to run multiple replicas within the same chart.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```



================================================
FILE: charts/nethermind/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- nethermind container image repository
  repository: nethermind/nethermind
  # -- nethermind container image tag
  tag: latest
  # -- nethermind container pull policy
  pullPolicy: IfNotPresent

# -- Extra args for the nethermind container
extraArgs: []
  #- --config=holesky

# -- JWT secret used by client as a secret. Change this value.
jwt: ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a

# -- Template used for the default command
# @default -- See `values.yaml`
defaultCommandTemplate: |
  - sh
  - -ac
  - >
  {{- if .Values.p2pNodePort.enabled }}
    . /env/init-nodeport;
  {{- end }}
    exec /nethermind/nethermind
    --datadir=/data
    --KeyStore.KeyStoreDirectory=/data/keystore
    --Network.LocalIp=$(POD_IP)
  {{- if .Values.p2pNodePort.enabled }}
    {{- if not (contains "--Network.ExternalIp=" (.Values.extraArgs | join ",")) }}
    --Network.ExternalIp=$EXTERNAL_IP
    {{- end }}
    {{- if not (contains "--Network.P2PPort=" (.Values.extraArgs | join ",")) }}
    --Network.P2PPort=$EXTERNAL_PORT
    {{- end }}
    {{- if not (contains "--Network.DiscoveryPort=" (.Values.extraArgs | join ",")) }}
    --Network.DiscoveryPort=$EXTERNAL_PORT
    {{- end }}
  {{- else }}
  {{- if not (contains "--Network.ExternalIp=" (.Values.extraArgs | join ",")) }}
    --Network.ExternalIp=$(POD_IP)
    {{- end }}
    {{- if not (contains "--Network.P2PPort=" (.Values.extraArgs | join ",")) }}
    --Network.P2PPort={{ include "nethermind.p2pPort" . }}
    {{- end }}
    {{- if not (contains "--Network.DiscoveryPort=" (.Values.extraArgs | join ",")) }}
    --Network.DiscoveryPort={{ include "nethermind.p2pPort" . }}
    {{- end }}
  {{- end }}
    --JsonRpc.Enabled=true
    --JsonRpc.Host=0.0.0.0
    --JsonRpc.Port={{ .Values.httpPort }}
    --Init.WebSocketsEnabled=true
    --JsonRpc.WebSocketsPort={{ .Values.wsPort }}
    --JsonRpc.JwtSecretFile=/data/jwt.hex
    --JsonRpc.EngineHost=0.0.0.0
    --JsonRpc.EnginePort={{ .Values.authPort }}
    --Metrics.Enabled=true
    --Metrics.NodeName=$(POD_NAME)
    --Metrics.ExposePort={{ .Values.metricsPort }}
  {{- range .Values.extraArgs }}
    {{ tpl . $ }}
  {{- end }}

# -- Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplate instead.
customCommand: []

# When p2pNodePort is enabled, your P2P port will be exposed via service type NodePort.
# This is useful if you want to expose and announce your node to the Internet.
# Limitation: You can only one have one replica when exposing via NodePort.
#             Check the chart README.md for more details
p2pNodePort:
  # -- Expose P2P port via NodePort
  enabled: false
  # -- NodePort to be used
  port: 31000
  initContainer:
    image:
      # -- Container image to fetch nodeport information
      repository: lachlanevenson/k8s-kubectl
      # -- Container tag
      tag: v1.25.4
      # -- Container pull policy
      pullPolicy: IfNotPresent
  portForwardContainer:
    image:
      # -- Container image for the port forwarder
      repository: alpine/socat
      # -- Container tag
      tag: latest
      # -- Container pull policy
      pullPolicy: IfNotPresent

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http-rpc
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http-rpc
  initialDelaySeconds: 10
  periodSeconds: 10

# -- P2P Port
p2pPort: 30303

# -- HTTP Port
httpPort: 8545

# -- WS Port
wsPort: 8545

# -- Engine Port (Auth Port)
authPort: 8551

# -- Metrics Port
metricsPort: 9545

# -- Node selector for pods
nodeSelector: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 20Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

rbac:
  # -- Specifies whether RBAC resources are to be created
  create: true
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  clusterRules:
     # Required to obtain the nodes external IP
    - apiGroups: [""]
      resources:
      - "nodes"
      verbs:
      - "get"
      - "list"
      - "watch"
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  rules:
    # Required to get information about the services nodePort.
    - apiGroups: [""]
      resources:
      - "services"
      verbs:
      - "get"
      - "list"
      - "watch"

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 300

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []
#- name: JAVA_OPTS
#  value: "-Xmx6000m -Xms6000m"

# -- Additional env variables injected via a created secret
secretEnv: {}
# MY_PASSWORD: supersecret

initChownData:
  # -- Init container to set the correct permissions to access data directories
  enabled: true
  image:
    # -- Container repository
    repository: busybox
    # -- Container tag
    tag: "1.34.0"
    # -- Container pull policy
    pullPolicy: IfNotPresent
  # -- Resource requests and limits
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/nethermind/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/nethermind/ci/default-values.yaml
================================================
# Leave empty so that CT tests with default values



================================================
FILE: charts/nethermind/templates/_cmd.tpl
================================================
{{/*
# Default command
*/}}
{{- define "nethermind.defaultCommand" -}}
{{- tpl .Values.defaultCommandTemplate . }}
{{- end }}



================================================
FILE: charts/nethermind/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "nethermind.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "nethermind.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "nethermind.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "nethermind.labels" -}}
helm.sh/chart: {{ include "nethermind.chart" . }}
{{ include "nethermind.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "nethermind.selectorLabels" -}}
app.kubernetes.io/name: {{ include "nethermind.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "nethermind.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "nethermind.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{/*
Create the name of the cluster role.
It needs to be namespace prefixed to avoid naming conflicts when using the same deployment name across namespaces.
*/}}
{{- define "nethermind.clusterRoleName" -}}
{{ .Release.Namespace }}-{{ include "nethermind.fullname" . }}
{{- end }}

{{- define "nethermind.p2pPort" -}}
{{- if .Values.p2pNodePort.enabled }}
{{- print .Values.p2pNodePort.port }}
{{- else }}
{{- print .Values.p2pPort }}
{{- end }}
{{- end -}}

{{- define "nethermind.replicas" -}}
{{- if and (.Values.p2pNodePort.enabled) (gt (int .Values.replicas)  1) }}
{{- print 1 }}
{{ else }}
{{- print .Values.replicas }}
{{- end }}
{{- end -}}



================================================
FILE: charts/nethermind/templates/clusterrole.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "nethermind.clusterRoleName" . }}
  labels:
    {{- include "nethermind.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.clusterRules | nindent 0 }}
{{- end }}



================================================
FILE: charts/nethermind/templates/clusterrolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "nethermind.clusterRoleName" . }}
  labels:
    {{- include "nethermind.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "nethermind.clusterRoleName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "nethermind.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/nethermind/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "nethermind.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "nethermind.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/nethermind/templates/NOTES.txt
================================================



================================================
FILE: charts/nethermind/templates/poddisruptionbudget.yaml
================================================
{{- if .Values.podDisruptionBudget }}
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ include "nethermind.fullname" . }}
  labels:
    {{- include "nethermind.labels" . | nindent 4 }}
spec:
{{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
{{- end }}
{{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
{{- end }}
  selector:
    matchLabels:
      {{- include "nethermind.selectorLabels" . | nindent 6 }}
{{- end }}



================================================
FILE: charts/nethermind/templates/role.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "nethermind.serviceAccountName" . }}
  labels:
    {{- include "nethermind.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.rules | nindent 0 }}
{{- end }}



================================================
FILE: charts/nethermind/templates/rolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "nethermind.serviceAccountName" . }}
  labels:
    {{- include "nethermind.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "nethermind.serviceAccountName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "nethermind.serviceAccountName" . }}
{{- end }}



================================================
FILE: charts/nethermind/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "nethermind.fullname" . }}-env
  labels:
    {{- include "nethermind.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "nethermind.fullname" . }}-jwt
type: Opaque
data:
  jwt.hex: {{ .Values.jwt | b64enc }}


================================================
FILE: charts/nethermind/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "nethermind.fullname" . }}-headless
  labels:
    {{- include "nethermind.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "nethermind.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "nethermind.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: {{ .Values.httpPort }}
      targetPort: http-rpc
      protocol: TCP
      name: http-rpc
    {{- if ne .Values.httpPort .Values.wsPort }}  
    - port: {{ .Values.wsPort }}
      targetPort: ws-rpc
      protocol: TCP
      name: ws-rpc
    {{- end }}
    - port: {{ .Values.authPort }}
      targetPort: auth-rpc
      protocol: TCP
      name: auth-rpc  
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "nethermind.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/nethermind/templates/service.p2p.nodeport.yaml
================================================
{{- if .Values.p2pNodePort.enabled -}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "nethermind.fullname" $ }}-p2p-0
  labels:
    {{- include "nethermind.labels" $ | nindent 4 }}
    pod: {{ include "nethermind.fullname" $ }}-0
    type: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p-tcp
      port: {{ include "nethermind.p2pPort" $ }}
      protocol: TCP
      targetPort: p2p-tcp
      nodePort: {{ include "nethermind.p2pPort" $ }}
    - name: p2p-udp
      port: {{ include "nethermind.p2pPort" $ }}
      protocol: UDP
      targetPort: p2p-udp
      nodePort: {{ include "nethermind.p2pPort" $ }}
  selector:
    {{- include "nethermind.selectorLabels" $ | nindent 4 }}
    statefulset.kubernetes.io/pod-name: "{{ include "nethermind.fullname" $ }}-0"
{{- end }}



================================================
FILE: charts/nethermind/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "nethermind.fullname" . }}
  labels:
    {{- include "nethermind.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - port: {{ include "nethermind.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "nethermind.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: {{ .Values.httpPort }}
      targetPort: http-rpc
      protocol: TCP
      name: http-rpc
    {{- if ne .Values.httpPort .Values.wsPort }}  
    - port: {{ .Values.wsPort }}
      targetPort: ws-rpc
      protocol: TCP
      name: ws-rpc
     {{- end }}
    - port: {{ .Values.authPort }}
      targetPort: auth-rpc
      protocol: TCP
      name: auth-rpc  
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "nethermind.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/nethermind/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "nethermind.serviceAccountName" . }}
  labels:
    {{- include "nethermind.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/nethermind/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "nethermind.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "nethermind.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "nethermind.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/nethermind/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "nethermind.fullname" . }}
  labels:
    {{- include "nethermind.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ include "nethermind.replicas" . }}
  selector:
    matchLabels:
      {{- include "nethermind.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "nethermind.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "nethermind.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      # Needs to be set to false, otherwise it will inject "NETHERMIND_PORT_*" env vars which the client uses as config args.
      # See: https://kubernetes.io/docs/concepts/services-networking/connect-applications-service/#accessing-the-service
      enableServiceLinks: false
      serviceAccountName: {{ include "nethermind.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- tpl (toYaml .Values.initContainers | nindent 8) $ }}
      {{- end }}
      {{- if .Values.p2pNodePort.enabled }}
        - name: init-nodeport
          image: "{{ .Values.p2pNodePort.initContainer.image.repository }}:{{ .Values.p2pNodePort.initContainer.image.tag }}"
          imagePullPolicy: {{.Values.p2pNodePort.initContainer.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - sh
            - -c
            - >
              export EXTERNAL_PORT=$(kubectl get services -l "pod in (${POD_NAME}), type in (p2p)" -o jsonpath='{.items[0].spec.ports[0].nodePort}');
              export EXTERNAL_IP=$(kubectl get nodes "${NODE_NAME}" -o jsonpath='{.status.addresses[?(@.type=="ExternalIP")].address}');
              echo "EXTERNAL_PORT=$EXTERNAL_PORT" >  /env/init-nodeport;
              echo "EXTERNAL_IP=$EXTERNAL_IP"     >> /env/init-nodeport;
              cat /env/init-nodeport;
          volumeMounts:
            - name: env-nodeport
              mountPath: /env
      {{- end }}
      {{- if .Values.initChownData.enabled }}
        - name: init-chown-data
          image: "{{ .Values.initChownData.image.repository }}:{{ .Values.initChownData.image.tag }}"
          imagePullPolicy: {{ .Values.initChownData.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }}", "/data"]
          resources:
      {{ toYaml .Values.initChownData.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: "/data"
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{/* Temporary fix for https://github.com/NethermindEth/nethermind/issues/3510 */}}
          workingDir: "/data"
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
            {{- include "nethermind.defaultCommand" . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            {{- if .Values.p2pNodePort.enabled }}
            - name: env-nodeport
              mountPath: /env
            {{- end }}
            - name: storage
              mountPath: "/data"
            - name: jwt
              mountPath: "/data/jwt.hex"
              subPath: jwt.hex
              readOnly: true
          ports:
            - name: p2p-tcp
              containerPort: {{ include "nethermind.p2pPort" . }}
              protocol: TCP
            - name: p2p-udp
              containerPort: {{ include "nethermind.p2pPort" . }}
              protocol: UDP
            - name: http-rpc
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
            - name: ws-rpc
              containerPort: {{ .Values.wsPort }}
              protocol: TCP
            - name: auth-rpc
              containerPort: {{ .Values.authPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "nethermind.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ tpl (toYaml .Values.extraContainers | nindent 8) $ }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: jwt
          secret:
            secretName: {{ include "nethermind.fullname" . }}-jwt
      {{- if .Values.p2pNodePort.enabled }}
        - name: env-nodeport
          emptyDir: {}
      {{- end }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/nethermind/templates/tests/test-connection.yaml
================================================

apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "nethermind.fullname" . }}-test-connection"
  labels:
    {{- include "nethermind.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
        - --location
        - --request
        - POST
        - '{{ include "nethermind.fullname" . }}:{{ .Values.httpPort }}/'
        - --header
        - 'Content-Type: application/json'
        - --data-raw
        - '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":83}'
  restartPolicy: Never



================================================
FILE: charts/nimbus/README.md
================================================

# nimbus

![Version: 1.1.4](https://img.shields.io/badge/Version-1.1.4-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

An open-source Ethereum consensus layer client, written in Nim

**Homepage:** <https://nimbus.guide/>

## Source Code

* <https://github.com/status-im/nimbus-eth2>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| checkpointSync | object | `{"enabled":false,"network":"","url":""}` | Checkpoint Sync |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customCommand | list | `[]` | Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplate instead. |
| defaultBinaryPath | string | `"/home/user/nimbus-eth2/build/nimbus_beacon_node"` | Path within the container to the beacon node binary |
| defaultCommandTemplate | string | See `values.yaml` | Template used for the default command |
| extraArgs | list | `[]` | Extra args for the nimbus container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `5052` | HTTP Port |
| image.pullPolicy | string | `"IfNotPresent"` | nimbus container pull policy |
| image.repository | string | `"statusim/nimbus-eth2"` | nimbus container image repository |
| image.tag | string | `"multiarch-latest"` | nimbus container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initChownData.enabled | bool | `true` | Init container to set the correct permissions to access data directories |
| initChownData.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| initChownData.image.repository | string | `"busybox"` | Container repository |
| initChownData.image.tag | string | `"1.34.0"` | Container tag |
| initChownData.resources | object | `{}` | Resource requests and limits |
| initContainers | list | See `values.yaml` | Additional init containers |
| jwt | string | `"ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a"` | JWT secret used by client as a secret. Change this value. |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| metricsPort | int | `8008` | Metrics Port |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| p2pNodePort.enabled | bool | `false` | Expose P2P port via NodePort |
| p2pNodePort.initContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.initContainer.image.repository | string | `"lachlanevenson/k8s-kubectl"` | Container image to fetch nodeport information |
| p2pNodePort.initContainer.image.tag | string | `"v1.25.4"` | Container tag |
| p2pNodePort.port | int | `31000` | NodePort to be used |
| p2pNodePort.portForwardContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.portForwardContainer.image.repository | string | `"alpine/socat"` | Container image for the port forwarder |
| p2pNodePort.portForwardContainer.image.tag | string | `"latest"` | Container tag |
| p2pPort | int | `9000` | P2P Port |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"20Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| rbac.clusterRules | list | See `values.yaml` | Required ClusterRole rules |
| rbac.create | bool | `true` | Specifies whether RBAC resources are to be created |
| rbac.rules | list | See `values.yaml` | Required ClusterRole rules |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `300` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |

# Examples

## Beacon node on the Holesky testnet connected to Holesky via Infura

```yaml
extraArgs:
  - --network=holesky
  - --web3-url=<EXECUTION-ENDPOINT>
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.
Currently nimbus doesn't allow you to announce a a different discovery port, which would be a requirement to run multiple replicas within the same chart.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```

## Validator node

This example runs a validator on the holesky network and injects the keystores via a secret ENV var. You could use a similar
approach to fetch your secrets from some external secret management system (Hashicorp Vault, Azure key vault, etc.):

```yaml
replicas: 1

extraArgs:
  - --network=holesky
  - --web3-url=https://holesky.infura.io/v3/<YOUR_API_SECRET>
  - --validators-dir=/data/validator/keys
  - --secrets-dir=/data/validator/secrets

initContainers:
  - name: init-keystore
    image: bash:latest
    imagePullPolicy: IfNotPresent
    securityContext:
      runAsNonRoot: false
      runAsUser: 0
    command:
    - bash
    - -c
    - >
      apk add jq;
      export INDEX=$(echo $(hostname)| rev | cut -d'-' -f 1 | rev);
      mkdir -p /data/validator/keys;
      mkdir -p /data/validator/secrets;
      KEY_COUNT="NODE_${INDEX}_KEY_COUNT";
      for ((i = 0 ; i < "${!KEY_COUNT}" ; i++ ));
      do
        echo "====";
        key="NODE_${INDEX}_KEY_${i}";
        PUBKEY=$(echo ${!key} | jq '.pubkey' -j);
        mkdir -p "/data/validator/keys/0x${PUBKEY}";
        echo ${!key} > "/data/validator/keys/0x${PUBKEY}/keystore.json";
        secret="NODE_${INDEX}_SECRET_${i}";
        echo ${!secret} > "/data/validator/secrets/0x${PUBKEY}";
        echo "Added 0x${PUBKEY}";
      done
    volumeMounts:
      - name: storage
        mountPath: "/data"
        readOnly:
    env:
      - name: NODE_0_KEY_COUNT
        value: "1"
      - name: NODE_0_SECRET_0
        valueFrom:
          secretKeyRef:
            # Name of the secret that will be generated for you. This is normally `${RELEASE-name}-env`
            # You might need to change this
            name: nimbus-env
            key: NODE_0_SECRET_0
      - name: NODE_0_KEY_0
        valueFrom:
          secretKeyRef:
            # See comment on the previous secretKeyRef
            name: nimbus-env
            key: NODE_0_KEY_0

livenessProbe:
  tcpSocket: null
  httpGet:
    path: /metrics
    port: 8008

readinessProbe:
  tcpSocket: null
  httpGet:
    path: /metrics
    port: 8008

secretEnv:
  # Note: Never publish any of your production secrets online. These are just used for testing purposes.
  NODE_0_SECRET_0: Mrc085nWbjTc1mhAPt_Ukj4m_vui2iUQWr6TwNRq_4k=
  NODE_0_KEY_0: {"crypto":{"checksum":{"function":"sha256","message":"7bbdd8cda652d792dceae7477b911106296620c44a6c1d0356c6ff52daca2b5b","params":{}},"cipher":{"function":"aes-128-ctr","message":"689f5c97fad87665e2fe8acbc0aad91bdc85de7756ebdc496f1373bae01c02c8","params":{"iv":"7b8e1ed4480dee19cbb1528394ad2095"}},"kdf":{"function":"pbkdf2","message":"","params":{"c":262144,"dklen":32,"prf":"hmac-sha256","salt":"bb560dfbb56016e0630e4415b74d86ede9090c0545854ed7c0ad921047a39cef"}}},"path":"","pubkey":"8e48cbd28d25847a6b122a62179b6ac11ee7877a4c489799918308e6252b7f6601f969179ac7465e256c01815b71b6d1","uuid":"f13ece4f-d57e-4789-accc-ad50f0fef882","version":4}

```



================================================
FILE: charts/nimbus/Chart.yaml
================================================
apiVersion: v2
name: nimbus
description: An open-source Ethereum consensus layer client, written in Nim
home: https://nimbus.guide/
icon: https://launchpad.ethereum.org/static/media/nimbus-circle.2752d77b.png
sources:
  - https://github.com/status-im/nimbus-eth2
type: application
version: 1.1.4
maintainers:
  - name: skylenet
    email: rafael@skyle.net
  - name: barnabasbusa
    email: busa.barnabas@gmail.com



================================================
FILE: charts/nimbus/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Beacon node on the Holesky testnet connected to Holesky via Infura

```yaml
extraArgs:
  - --network=holesky
  - --web3-url=<EXECUTION-ENDPOINT>
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.
Currently nimbus doesn't allow you to announce a a different discovery port, which would be a requirement to run multiple replicas within the same chart.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```

## Validator node

This example runs a validator on the holesky network and injects the keystores via a secret ENV var. You could use a similar
approach to fetch your secrets from some external secret management system (Hashicorp Vault, Azure key vault, etc.):

```yaml
replicas: 1

extraArgs:
  - --network=holesky
  - --web3-url=https://holesky.infura.io/v3/<YOUR_API_SECRET>
  - --validators-dir=/data/validator/keys
  - --secrets-dir=/data/validator/secrets

initContainers:
  - name: init-keystore
    image: bash:latest
    imagePullPolicy: IfNotPresent
    securityContext:
      runAsNonRoot: false
      runAsUser: 0
    command:
    - bash
    - -c
    - >
      apk add jq;
      export INDEX=$(echo $(hostname)| rev | cut -d'-' -f 1 | rev);
      mkdir -p /data/validator/keys;
      mkdir -p /data/validator/secrets;
      KEY_COUNT="NODE_${INDEX}_KEY_COUNT";
      for ((i = 0 ; i < "${!KEY_COUNT}" ; i++ ));
      do
        echo "====";
        key="NODE_${INDEX}_KEY_${i}";
        PUBKEY=$(echo ${!key} | jq '.pubkey' -j);
        mkdir -p "/data/validator/keys/0x${PUBKEY}";
        echo ${!key} > "/data/validator/keys/0x${PUBKEY}/keystore.json";
        secret="NODE_${INDEX}_SECRET_${i}";
        echo ${!secret} > "/data/validator/secrets/0x${PUBKEY}";
        echo "Added 0x${PUBKEY}";
      done
    volumeMounts:
      - name: storage
        mountPath: "/data"
        readOnly:
    env:
      - name: NODE_0_KEY_COUNT
        value: "1"
      - name: NODE_0_SECRET_0
        valueFrom:
          secretKeyRef:
            # Name of the secret that will be generated for you. This is normally `${RELEASE-name}-env`
            # You might need to change this
            name: nimbus-env
            key: NODE_0_SECRET_0
      - name: NODE_0_KEY_0
        valueFrom:
          secretKeyRef:
            # See comment on the previous secretKeyRef
            name: nimbus-env
            key: NODE_0_KEY_0

livenessProbe:
  tcpSocket: null
  httpGet:
    path: /metrics
    port: 8008

readinessProbe:
  tcpSocket: null
  httpGet:
    path: /metrics
    port: 8008

secretEnv:
  # Note: Never publish any of your production secrets online. These are just used for testing purposes.
  NODE_0_SECRET_0: Mrc085nWbjTc1mhAPt_Ukj4m_vui2iUQWr6TwNRq_4k=
  NODE_0_KEY_0: {"crypto":{"checksum":{"function":"sha256","message":"7bbdd8cda652d792dceae7477b911106296620c44a6c1d0356c6ff52daca2b5b","params":{}},"cipher":{"function":"aes-128-ctr","message":"689f5c97fad87665e2fe8acbc0aad91bdc85de7756ebdc496f1373bae01c02c8","params":{"iv":"7b8e1ed4480dee19cbb1528394ad2095"}},"kdf":{"function":"pbkdf2","message":"","params":{"c":262144,"dklen":32,"prf":"hmac-sha256","salt":"bb560dfbb56016e0630e4415b74d86ede9090c0545854ed7c0ad921047a39cef"}}},"path":"","pubkey":"8e48cbd28d25847a6b122a62179b6ac11ee7877a4c489799918308e6252b7f6601f969179ac7465e256c01815b71b6d1","uuid":"f13ece4f-d57e-4789-accc-ad50f0fef882","version":4}

```



================================================
FILE: charts/nimbus/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- nimbus container image repository
  repository: statusim/nimbus-eth2
  # -- nimbus container image tag
  tag: multiarch-latest
  # -- nimbus container pull policy
  pullPolicy: IfNotPresent


# -- Path within the container to the beacon node binary
defaultBinaryPath: /home/user/nimbus-eth2/build/nimbus_beacon_node

# -- Extra args for the nimbus container
extraArgs: []
  #- --network=holesky
  #- --web3-url=http://your-eth1-node:8551
  # Nimbus requires trustedNodeSync command to be run before the beacon is launched.
  # Read more here: https://nimbus.guide/trusted-node-sync.html

# -- JWT secret used by client as a secret. Change this value.
jwt: ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a

# -- Checkpoint Sync
checkpointSync:
  enabled: false
  url: ""
  # If you enable checkpointSync, you must provide which network you are using
  network: ""

# -- Template used for the default command
# @default -- See `values.yaml`
defaultCommandTemplate: |
  - sh
  - -ac
  - >
  {{- if .Values.p2pNodePort.enabled }}
    . /env/init-nodeport;
  {{- end }}
    exec {{ .Values.defaultBinaryPath }}
    --data-dir=/data
    --enr-auto-update=false
  {{- if .Values.p2pNodePort.enabled }}
    {{- if not (contains "--nat=" (.Values.extraArgs | join ",")) }}
    --nat=extip:$EXTERNAL_IP
    {{- end }}
    {{- if not (contains "--udp-port=" (.Values.extraArgs | join ",")) }}
    --udp-port=$EXTERNAL_PORT
    {{- end }}
    {{- if not (contains "--tcp-port=" (.Values.extraArgs | join ",")) }}
    --tcp-port=$EXTERNAL_PORT
    {{- end }}
  {{- else }}
    {{- if not (contains "--nat=" (.Values.extraArgs | join ",")) }}
    --nat=extip:$(POD_IP)
    {{- end }}
    {{- if not (contains "--udp-port=" (.Values.extraArgs | join ",")) }}
    --udp-port={{ include "nimbus.p2pPort" . }}
    {{- end }}
    {{- if not (contains "--tcp-port=" (.Values.extraArgs | join ",")) }}
    --tcp-port={{ include "nimbus.p2pPort" . }}
    {{- end }}
  {{- end }}
    --rest=true
    --rest-address=0.0.0.0
    --rest-port={{ .Values.httpPort }}
    --jwt-secret=/data/jwt.hex
    --metrics=true
    --metrics-address=0.0.0.0
    --metrics-port={{ .Values.metricsPort }}
  {{- if .Values.checkpointSync.enabled }}
    --network={{ tpl .Values.checkpointSync.network $ }}
  {{- end }}
  {{- range .Values.extraArgs }}
    {{ tpl . $ }}
  {{- end }}

# -- Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplate instead.
customCommand: []

# When p2pNodePort is enabled, your P2P port will be exposed via service type NodePort.
# This is useful if you want to expose and announce your node to the Internet.
# Limitation: You can only one have one replica when exposing via NodePort.
#             Check the chart README.md for more details
p2pNodePort:
  # -- Expose P2P port via NodePort
  enabled: false
  # -- NodePort to be used
  port: 31000
  initContainer:
    image:
      # -- Container image to fetch nodeport information
      repository: lachlanevenson/k8s-kubectl
      # -- Container tag
      tag: v1.25.4
      # -- Container pull policy
      pullPolicy: IfNotPresent
  portForwardContainer:
    image:
      # -- Container image for the port forwarder
      repository: alpine/socat
      # -- Container tag
      tag: latest
      # -- Container pull policy
      pullPolicy: IfNotPresent

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http-api
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http-api
  initialDelaySeconds: 10
  periodSeconds: 10

# -- P2P Port
p2pPort: 9000

# -- HTTP Port
httpPort: 5052

# -- Metrics Port
metricsPort: 8008

# -- Node selector for pods
nodeSelector: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 20Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

rbac:
  # -- Specifies whether RBAC resources are to be created
  create: true
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  clusterRules:
     # Required to obtain the nodes external IP
    - apiGroups: [""]
      resources:
      - "nodes"
      verbs:
      - "get"
      - "list"
      - "watch"
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  rules:
    # Required to get information about the services nodePort.
    - apiGroups: [""]
      resources:
      - "services"
      verbs:
      - "get"
      - "list"
      - "watch"

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 300

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
# @default -- See `values.yaml`
initContainers:
  - name: init-checkpoint-sync
    image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
    imagePullPolicy: "{{ .Values.image.pullPolicy }}"
    securityContext:
      runAsNonRoot: false
      runAsUser: 0
    command:
      - sh
      - -ac
      - >-
        {{- if .Values.checkpointSync.enabled }}
        exec {{ .Values.defaultBinaryPath }}
        trustedNodeSync
        --data-dir=/data
        --network={{ tpl .Values.checkpointSync.network $ }}
        --backfill=false
        --trusted-node-url={{ tpl .Values.checkpointSync.url $ }}
        {{- else }}
        echo "Checkpoint-sync isn't enabled. Nothing to do."
        {{- end }}
    volumeMounts:
    - name: storage
      mountPath: "/data"

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []
#- name: JAVA_OPTS
#  value: "-Xmx6000m -Xms6000m"

# -- Additional env variables injected via a created secret
secretEnv: {}
# MY_PASSWORD: supersecret

initChownData:
  # -- Init container to set the correct permissions to access data directories
  enabled: true
  image:
    # -- Container repository
    repository: busybox
    # -- Container tag
    tag: "1.34.0"
    # -- Container pull policy
    pullPolicy: IfNotPresent
  # -- Resource requests and limits
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/nimbus/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/nimbus/ci/default-values.yaml
================================================
# Leave empty so that CT tests with default values



================================================
FILE: charts/nimbus/ci/validator-values.yaml
================================================
replicas: 1

initContainers:
  - name: init-keystore
    image: bash:latest
    imagePullPolicy: IfNotPresent
    securityContext:
      runAsNonRoot: false
      runAsUser: 0
    command:
    - bash
    - -c
    - >
      apk add jq;
      export INDEX=$(echo $(hostname)| rev | cut -d'-' -f 1 | rev);
      mkdir -p /data/validator/keys;
      mkdir -p /data/validator/secrets;
      KEY_COUNT="NODE_${INDEX}_KEY_COUNT";
      for ((i = 0 ; i < "${!KEY_COUNT}" ; i++ ));
      do
        echo "====";
        key="NODE_${INDEX}_KEY_${i}";
        PUBKEY=$(echo ${!key} | jq '.pubkey' -j);
        mkdir -p "/data/validator/keys/0x${PUBKEY}";
        echo ${!key} > "/data/validator/keys/0x${PUBKEY}/keystore.json";
        secret="NODE_${INDEX}_SECRET_${i}";
        echo ${!secret} > "/data/validator/secrets/0x${PUBKEY}";
        echo "Added 0x${PUBKEY}";
      done
    volumeMounts:
      - name: storage
        mountPath: "/data"
        readOnly:
    env:
      - name: NODE_0_KEY_COUNT
        value: "1"
      - name: NODE_0_SECRET_0
        value: Mrc085nWbjTc1mhAPt_Ukj4m_vui2iUQWr6TwNRq_4k=
      - name: NODE_0_KEY_0
        value: >
          {"crypto":{"checksum":{"function":"sha256","message":"7bbdd8cda652d792dceae7477b911106296620c44a6c1d0356c6ff52daca2b5b","params":{}},"cipher":{"function":"aes-128-ctr","message":"689f5c97fad87665e2fe8acbc0aad91bdc85de7756ebdc496f1373bae01c02c8","params":{"iv":"7b8e1ed4480dee19cbb1528394ad2095"}},"kdf":{"function":"pbkdf2","message":"","params":{"c":262144,"dklen":32,"prf":"hmac-sha256","salt":"bb560dfbb56016e0630e4415b74d86ede9090c0545854ed7c0ad921047a39cef"}}},"path":"","pubkey":"8e48cbd28d25847a6b122a62179b6ac11ee7877a4c489799918308e6252b7f6601f969179ac7465e256c01815b71b6d1","uuid":"f13ece4f-d57e-4789-accc-ad50f0fef882","version":4}


extraArgs:
  - --validators-dir=/data/validator/keys
  - --secrets-dir=/data/validator/secrets

livenessProbe:
  tcpSocket: null
  httpGet:
    path: /metrics
    port: 8008

readinessProbe:
  tcpSocket: null
  httpGet:
    path: /metrics
    port: 8008



================================================
FILE: charts/nimbus/templates/_cmd.tpl
================================================
{{/*
# Beacon command
*/}}
{{- define "nimbus.defaultCommand" -}}
{{- tpl .Values.defaultCommandTemplate . }}
{{- end }}



================================================
FILE: charts/nimbus/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "nimbus.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "nimbus.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "nimbus.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "nimbus.labels" -}}
helm.sh/chart: {{ include "nimbus.chart" . }}
{{ include "nimbus.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "nimbus.selectorLabels" -}}
app.kubernetes.io/name: {{ include "nimbus.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "nimbus.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "nimbus.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{/*
Create the name of the cluster role.
It needs to be namespace prefixed to avoid naming conflicts when using the same deployment name across namespaces.
*/}}
{{- define "nimbus.clusterRoleName" -}}
{{ .Release.Namespace }}-{{ include "nimbus.fullname" . }}
{{- end }}

{{- define "nimbus.p2pPort" -}}
{{- if .Values.p2pNodePort.enabled }}
{{- print .Values.p2pNodePort.port }}
{{- else }}
{{- print .Values.p2pPort }}
{{- end }}
{{- end -}}

{{- define "nimbus.replicas" -}}
{{- if and (.Values.p2pNodePort.enabled) (gt (int .Values.replicas)  1) }}
{{- print 1 }}
{{ else }}
{{- print .Values.replicas }}
{{- end }}
{{- end -}}



================================================
FILE: charts/nimbus/templates/clusterrole.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "nimbus.clusterRoleName" . }}
  labels:
    {{- include "nimbus.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.clusterRules | nindent 0 }}
{{- end }}



================================================
FILE: charts/nimbus/templates/clusterrolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "nimbus.clusterRoleName" . }}
  labels:
    {{- include "nimbus.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "nimbus.clusterRoleName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "nimbus.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/nimbus/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "nimbus.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "nimbus.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/nimbus/templates/NOTES.txt
================================================



================================================
FILE: charts/nimbus/templates/poddisruptionbudget.yaml
================================================
{{- if .Values.podDisruptionBudget }}
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ include "nimbus.fullname" . }}
  labels:
    {{- include "nimbus.labels" . | nindent 4 }}
spec:
{{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
{{- end }}
{{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
{{- end }}
  selector:
    matchLabels:
      {{- include "nimbus.selectorLabels" . | nindent 6 }}
{{- end }}



================================================
FILE: charts/nimbus/templates/role.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "nimbus.serviceAccountName" . }}
  labels:
    {{- include "nimbus.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.rules | nindent 0 }}
{{- end }}



================================================
FILE: charts/nimbus/templates/rolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "nimbus.serviceAccountName" . }}
  labels:
    {{- include "nimbus.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "nimbus.serviceAccountName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "nimbus.serviceAccountName" . }}
{{- end }}



================================================
FILE: charts/nimbus/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "nimbus.fullname" . }}-env
  labels:
    {{- include "nimbus.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "nimbus.fullname" . }}-jwt
type: Opaque
data:
  jwt.hex: {{ .Values.jwt | b64enc }}


================================================
FILE: charts/nimbus/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "nimbus.fullname" . }}-headless
  labels:
    {{- include "nimbus.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "nimbus.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "nimbus.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: {{ .Values.httpPort }}
      targetPort: http-api
      protocol: TCP
      name: http-api
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "nimbus.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/nimbus/templates/service.p2p.nodeport.yaml
================================================
{{- if .Values.p2pNodePort.enabled -}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "nimbus.fullname" $ }}-p2p-0
  labels:
    {{- include "nimbus.labels" $ | nindent 4 }}
    pod: {{ include "nimbus.fullname" $ }}-0
    type: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p-tcp
      port: {{ include "nimbus.p2pPort" $ }}
      protocol: TCP
      targetPort: p2p-tcp
      nodePort: {{ include "nimbus.p2pPort" $ }}
    - name: p2p-udp
      port: {{ include "nimbus.p2pPort" $ }}
      protocol: UDP
      targetPort: p2p-udp
      nodePort: {{ include "nimbus.p2pPort" $ }}
  selector:
    {{- include "nimbus.selectorLabels" $ | nindent 4 }}
    statefulset.kubernetes.io/pod-name: "{{ include "nimbus.fullname" $ }}-0"
{{- end }}



================================================
FILE: charts/nimbus/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "nimbus.fullname" . }}
  labels:
    {{- include "nimbus.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - port: {{ include "nimbus.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "nimbus.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: {{ .Values.httpPort }}
      targetPort: http-api
      protocol: TCP
      name: http-api
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "nimbus.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/nimbus/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "nimbus.serviceAccountName" . }}
  labels:
    {{- include "nimbus.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/nimbus/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "nimbus.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "nimbus.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "nimbus.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/nimbus/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "nimbus.fullname" . }}
  labels:
    {{- include "nimbus.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ include "nimbus.replicas" . }}
  selector:
    matchLabels:
      {{- include "nimbus.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "nimbus.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "nimbus.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "nimbus.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- tpl (toYaml .Values.initContainers | nindent 8) $ }}
      {{- end }}
      {{- if .Values.p2pNodePort.enabled }}
        - name: init-nodeport
          image: "{{ .Values.p2pNodePort.initContainer.image.repository }}:{{ .Values.p2pNodePort.initContainer.image.tag }}"
          imagePullPolicy: {{.Values.p2pNodePort.initContainer.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - sh
            - -c
            - >
              export EXTERNAL_PORT=$(kubectl get services -l "pod in (${POD_NAME}), type in (p2p)" -o jsonpath='{.items[0].spec.ports[0].nodePort}');
              export EXTERNAL_IP=$(kubectl get nodes "${NODE_NAME}" -o jsonpath='{.status.addresses[?(@.type=="ExternalIP")].address}');
              echo "EXTERNAL_PORT=$EXTERNAL_PORT" >  /env/init-nodeport;
              echo "EXTERNAL_IP=$EXTERNAL_IP"     >> /env/init-nodeport;
              cat /env/init-nodeport;
          volumeMounts:
            - name: env-nodeport
              mountPath: /env
      {{- end }}
      {{- if .Values.initChownData.enabled }}
        - name: init-chown-data
          image: "{{ .Values.initChownData.image.repository }}:{{ .Values.initChownData.image.tag }}"
          imagePullPolicy: {{ .Values.initChownData.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }}", "/data"]
          resources:
      {{ toYaml .Values.initChownData.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: "/data"
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
            {{- include "nimbus.defaultCommand" . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            {{- if .Values.p2pNodePort.enabled }}
            - name: env-nodeport
              mountPath: /env
            {{- end }}
            - name: storage
              mountPath: "/data"
            - name: jwt
              mountPath: "/data/jwt.hex"
              subPath: jwt.hex
              readOnly: true
          ports:
            - name: p2p-tcp
              containerPort: {{ include "nimbus.p2pPort" . }}
              protocol: TCP
            - name: p2p-udp
              containerPort: {{ include "nimbus.p2pPort" . }}
              protocol: UDP
            - name: http-api
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "nimbus.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ tpl (toYaml .Values.extraContainers | nindent 8) $ }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: jwt
          secret:
            secretName: {{ include "nimbus.fullname" . }}-jwt
      {{- if .Values.p2pNodePort.enabled }}
        - name: env-nodeport
          emptyDir: {}
      {{- end }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/nimbus/templates/tests/test-connection.yaml
================================================

apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "nimbus.fullname" . }}-test-connection"
  labels:
    {{- include "nimbus.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args: ['{{ include "nimbus.fullname" . }}:{{ .Values.httpPort }}/eth/v1/node/version']
  restartPolicy: Never



================================================
FILE: charts/powfaucet/README.md
================================================

# powfaucet

![Version: 0.0.5](https://img.shields.io/badge/Version-0.0.5-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

PoW Faucet for EVM chains

**Homepage:** <https://github.com/pk910/PoWFaucet>

## Source Code

* <https://github.com/pk910/PoWFaucet>

## Example Configuration

[Upstream docs](https://github.com/pk910/PoWFaucet/wiki/Operator-Wiki)

```yaml
faucetTitle: "PoW Faucet"
faucetPrivkey: "feedbeef12340000feedbeef12340000feedbeef12340000feedbeef12340000"
faucetRpcUrl: "http://your-el-node:8545"
faucetExplorerLink: "https://your-el-block-explorer.com/tx/{txid}"
faucetHomeHtml: ""

faucetMaxDropWei: 50000000000000000000 # 50 ETH
faucetPowEnabled: true
faucetPowRewardPerHash: 500000000000000000 # 0.5 ETH
```

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| config | string | See `values.yaml` | Config file |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `["--datadir=/data"]` | Custom args for the powfaucet container |
| customCommand | list | `[]` | Command replacement for the powfaucet container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| faucetCaptchaEnabled | bool | `false` | Enable captcha module |
| faucetCaptchaProvider | string | `"hcaptcha"` | Captcha module: provider (hcaptcha / recaptcha) |
| faucetCaptchaSecret | string | `"0xCensoredHCaptchaSecretKey"` | Captcha module: provider secret |
| faucetCaptchaSitekey | string | `"00000000-0000-0000-0000-000000000000"` | Captcha module: provider site key |
| faucetEnsEnabled | bool | `true` | Enable ENS module |
| faucetEnsRequired | bool | `false` | ENS module: enforce ens name to use the faucet |
| faucetEnsRpcUrl | string | `"https://rpc.flashbots.net/"` | ENS module: rpc url (mainnet) |
| faucetEthinfoDenyContract | bool | `true` | Ethinfo module: deny contract addresses |
| faucetEthinfoEnabled | bool | `true` | Enable ethinfo module (check target wallet balance / type) |
| faucetEthinfoMaxbalanceWei | float | `100000000000000000000` | Ethinfo module: check balance and deny session if balance exceeds the limit (in wei) |
| faucetExplorerLink | string | `"https://your-el-block-explorer.com/tx/{txid}"` | Link to el block explorer ({txid} as placeholder for transaction hash) |
| faucetGithubClientid | string | `""` | Github module: github app client id |
| faucetGithubEnabled | bool | `false` | Enable github module (require login to github) |
| faucetGithubLimitAmountWei | float | `100000000000000000000` | Github module: max amount each github user is allowed to request in total |
| faucetGithubLimitDuration | int | `86400` | Github module: aggregation duration for the max request amount check |
| faucetGithubMinAge | int | `604800` | Github module: minimum account age (in seconds) |
| faucetGithubMinFollowers | int | `5` | Github module: minimum number of followers |
| faucetGithubMinRepos | int | `5` | Github module: minimum number of repositories |
| faucetGithubSecret | string | `""` | Github module: github app client secret |
| faucetHomeHtml | string | `""` | Additional html to show on the faucet page |
| faucetIpinfoEnabled | bool | `true` | Enable ipinfo module (resolve ip infos from ip-api.com) |
| faucetIpinfoHostingRewards | int | `10` | Ipinfo module: reward rate if ip is in a hosting range (in %) |
| faucetIpinfoProxyRewards | int | `10` | Ipinfo module: reward rate if ip is in a proxy range (in %) |
| faucetMainnetEnabled | bool | `false` | Enable mainnet module (check mainnet wallet balance / nonce) |
| faucetMainnetMinBalanceWei | int | `10000000000000000` | Mainnet module: min balance the user needs to hold in his mainnet wallet to use the faucet |
| faucetMainnetMinTxCount | int | `5` | Mainnet module: min number of transactions the user needs to have sent from the mainnet wallet to use the faucet |
| faucetMainnetRpcUrl | string | `"https://rpc.flashbots.net/"` | Mainnet module: rpc url (mainnet) |
| faucetMaxDropWei | float | `50000000000000000000` | Default/Maximum drop amount in wei |
| faucetMinDropWei | int | `1000000000000000000` | Minimum drop amount in wei |
| faucetOutflowAmountWei | float | `1e+21` | Outflow module: allowed amount of ETH (amount/duration) (in wei) |
| faucetOutflowBufferWei | float | `500000000000000000000` | Outflow module: amount overflow buffer (in wei) |
| faucetOutflowDuration | int | `86400` | Outflow module: duration for the allowed amouunt (amount/duration) (in wei) |
| faucetOutflowEnabled | bool | `false` | Enable outflow module (limit global faucet outflow) |
| faucetPowDifficulty | int | `12` | PoW module: mining difficulty (see https://github.com/pk910/PoWFaucet/wiki/Operator-Wiki#eligible-hashes) |
| faucetPowEnabled | bool | `false` | Enable PoW module (require mining) |
| faucetPowMaxDuration | int | `18000` | PoW module: max mining time (in seconds) |
| faucetPowPingInterval | int | `45` | PoW module: ping interval for websocket connection |
| faucetPowPingTimeout | int | `90` | PoW module: ping timeout for websocket connection |
| faucetPowRewardPerHash | int | `500000000000000000` | PoW module: drop amount per eligible hash |
| faucetPrivkey | string | `"feedbeef12340000feedbeef12340000feedbeef12340000feedbeef12340000"` | Faucet wallet private key |
| faucetRecurringLimitsAmountWei | float | `100000000000000000000` | Recurring module: max amount a recurring user is allowed to request in total |
| faucetRecurringLimitsDuration | int | `86400` | Recurring module: aggregation duration for the max request amount check |
| faucetRecurringLimitsEnabled | bool | `true` | Enable recurring module (enforce limits for recurring users) |
| faucetRpcUrl | string | `"http://your-el-node:8545"` | Faucet el node rpc |
| faucetTitle | string | `"PoW Faucet"` | Faucet title |
| faucetTxGasLimit | int | `21000` | Transaction gas limit |
| faucetTxMaxFee | int | `100000000000` | Max transaction gas fee (in wei) |
| faucetTxMaxPrioFee | int | `2000000000` | Max transaction priority fee (in wei) |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `8080` | HTTP port for faucet interface |
| httpProxyCount | int | `1` | number of HTTP proxies in front of the faucet |
| image.pullPolicy | string | `"IfNotPresent"` | powfaucet container pull policy |
| image.repository | string | `"pk910/powfaucet"` | powfaucet container image repository |
| image.tag | string | `"v2-stable"` | powfaucet container image tag |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"5Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| resources | object | `{}` | Resource requests and limits |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |



================================================
FILE: charts/powfaucet/Chart.yaml
================================================
apiVersion: v2
name: powfaucet
description: >
  PoW Faucet for EVM chains
home: https://github.com/pk910/PoWFaucet
sources:
  - https://github.com/pk910/PoWFaucet
type: application
version: 0.0.5
appVersion: "2.0.0"
maintainers:
  - name: pk910
    email: philipp@pk910.de



================================================
FILE: charts/powfaucet/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}


{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}


## Example Configuration

[Upstream docs](https://github.com/pk910/PoWFaucet/wiki/Operator-Wiki)

```yaml
faucetTitle: "PoW Faucet"
faucetPrivkey: "feedbeef12340000feedbeef12340000feedbeef12340000feedbeef12340000"
faucetRpcUrl: "http://your-el-node:8545"
faucetExplorerLink: "https://your-el-block-explorer.com/tx/{txid}"
faucetHomeHtml: ""

faucetMaxDropWei: 50000000000000000000 # 50 ETH
faucetPowEnabled: true
faucetPowRewardPerHash: 500000000000000000 # 0.5 ETH
```

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/powfaucet/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- powfaucet container image repository
  repository: pk910/powfaucet
  # -- powfaucet container image tag
  tag: "v2-stable"
  # -- powfaucet container pull policy
  pullPolicy: IfNotPresent

# -- Custom args for the powfaucet container
customArgs:
  - --datadir=/data

# -- Command replacement for the powfaucet container
customCommand: [] # Only change this if you need to change the default command

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Annotations for the StatefulSet
annotations: {}

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 5Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something


# -- HTTP port for faucet interface
httpPort: 8080

# -- number of HTTP proxies in front of the faucet
httpProxyCount: 1

# -- Faucet title
faucetTitle: "PoW Faucet"

# -- Faucet wallet private key
faucetPrivkey: "feedbeef12340000feedbeef12340000feedbeef12340000feedbeef12340000"

# -- Faucet el node rpc
faucetRpcUrl: "http://your-el-node:8545"

# -- Link to el block explorer ({txid} as placeholder for transaction hash)
faucetExplorerLink: "https://your-el-block-explorer.com/tx/{txid}"

# -- Additional html to show on the faucet page
faucetHomeHtml: ""

# -- Transaction gas limit
faucetTxGasLimit: 21000

# -- Max transaction gas fee (in wei)
faucetTxMaxFee: 100000000000

# -- Max transaction priority fee (in wei)
faucetTxMaxPrioFee: 2000000000

# -- Minimum drop amount in wei
faucetMinDropWei: 1000000000000000000 # 1 ETH

# -- Default/Maximum drop amount in wei
faucetMaxDropWei: 50000000000000000000 # 50 ETH

# -- Enable captcha module
faucetCaptchaEnabled: false

# -- Captcha module: provider (hcaptcha / recaptcha)
faucetCaptchaProvider: "hcaptcha"

# -- Captcha module: provider site key
faucetCaptchaSitekey: "00000000-0000-0000-0000-000000000000"

# -- Captcha module: provider secret
faucetCaptchaSecret: "0xCensoredHCaptchaSecretKey"

# -- Enable ENS module
faucetEnsEnabled: true

# -- ENS module: rpc url (mainnet)
faucetEnsRpcUrl: "https://rpc.flashbots.net/"

# -- ENS module: enforce ens name to use the faucet
faucetEnsRequired: false

# -- Enable ipinfo module (resolve ip infos from ip-api.com)
faucetIpinfoEnabled: true

# -- Ipinfo module: reward rate if ip is in a hosting range (in %)
faucetIpinfoHostingRewards: 10 # 10%

# -- Ipinfo module: reward rate if ip is in a proxy range (in %)
faucetIpinfoProxyRewards: 10 # 10%

# -- Enable ethinfo module (check target wallet balance / type)
faucetEthinfoEnabled: true

# -- Ethinfo module: check balance and deny session if balance exceeds the limit (in wei)
faucetEthinfoMaxbalanceWei: 100000000000000000000 # 100 ETH

# -- Ethinfo module: deny contract addresses
faucetEthinfoDenyContract: true

# -- Enable outflow module (limit global faucet outflow)
faucetOutflowEnabled: false

# -- Outflow module: allowed amount of ETH (amount/duration) (in wei)
faucetOutflowAmountWei: 1000000000000000000000 # 1000 ETH

# -- Outflow module: duration for the allowed amouunt (amount/duration) (in wei)
faucetOutflowDuration: 86400 # 1 day

# -- Outflow module: amount overflow buffer (in wei)
faucetOutflowBufferWei: 500000000000000000000 # 500 ETH

# -- Enable github module (require login to github)
faucetGithubEnabled: false

# -- Github module: github app client id
faucetGithubClientid: ""

# -- Github module: github app client secret
faucetGithubSecret: ""

# -- Github module: minimum account age (in seconds)
faucetGithubMinAge: 604800

# -- Github module: minimum number of repositories
faucetGithubMinRepos: 5

# -- Github module: minimum number of followers
faucetGithubMinFollowers: 5

# -- Github module: max amount each github user is allowed to request in total
faucetGithubLimitAmountWei: 100000000000000000000 # 100 ETH

# -- Github module: aggregation duration for the max request amount check
faucetGithubLimitDuration: 86400 # 1 day

# -- Enable mainnet module (check mainnet wallet balance / nonce)
faucetMainnetEnabled: false

# -- Mainnet module: rpc url (mainnet)
faucetMainnetRpcUrl: "https://rpc.flashbots.net/"

# -- Mainnet module: min balance the user needs to hold in his mainnet wallet to use the faucet
faucetMainnetMinBalanceWei: 10000000000000000 # 0.01 ETH

# -- Mainnet module: min number of transactions the user needs to have sent from the mainnet wallet to use the faucet
faucetMainnetMinTxCount: 5

# -- Enable recurring module (enforce limits for recurring users)
faucetRecurringLimitsEnabled: true

# -- Recurring module: max amount a recurring user is allowed to request in total
faucetRecurringLimitsAmountWei: 100000000000000000000 # 100 ETH

# -- Recurring module: aggregation duration for the max request amount check
faucetRecurringLimitsDuration: 86400 # 1 day

# -- Enable PoW module (require mining)
faucetPowEnabled: false

# -- PoW module: drop amount per eligible hash
faucetPowRewardPerHash: 500000000000000000 # 0.5 ETH

# -- PoW module: max mining time (in seconds)
faucetPowMaxDuration: 18000 # 5h

# -- PoW module: mining difficulty (see https://github.com/pk910/PoWFaucet/wiki/Operator-Wiki#eligible-hashes)
faucetPowDifficulty: 12

# -- PoW module: ping interval for websocket connection
faucetPowPingInterval: 45

# -- PoW module: ping timeout for websocket connection
faucetPowPingTimeout: 90

# -- Config file
# @default -- See `values.yaml`
config: |
  # PoWFaucet config (example)
  version: 2

  ### General Settings

  # faucet database (defaults to local sqlite)
  database:
    driver: "sqlite"
    file: "/data/faucet-store.db"

  # logfile for faucet events (comment out for no logging)
  faucetLogFile: "/data/faucet-events.log"

  # path to file to write the process pid to (comment out to disable)
  faucetPidFile: "/data/faucet-pid.txt"

  # faucet http/ws server port
  serverPort: {{ .Values.httpPort }}

  # number of http proxies in front of this faucet
  httpProxyCount: {{ .Values.httpProxyCount }}

  # title of the faucet
  faucetTitle: "{{ .Values.faucetTitle }}"

  # url to image displayed on the startpage
  faucetImage: "/images/fauceth_420.jpg"

  # some additional html to show on the startpage
  faucetHomeHtml: |
    {{ .Values.faucetHomeHtml | nindent 4 }}

  # random secret string that is used by the faucet to "sign" session data.
  # use a random string and do not share / reuse it anywhere.
  faucetSecret: "{{ .Values.faucetPrivkey }}-secret"

  # ETH execution layer RPC host
  ethRpcHost: "{{ .Values.faucetRpcUrl }}"

  # faucet wallet private key (hex, without 0x prefix)
  ethWalletKey: "{{ .Values.faucetPrivkey }}"

  # EVM chain id (null for auto-detect from RPC)
  ethChainId: null

  # symbol (short name) of the coin that can be mined
  faucetCoinSymbol: "ETH"

  # type of coin that can be mined
  # native = native coin (ETH)
  # erc20 = ERC20 token
  faucetCoinType: "native"

  # transaction gas limit
  # use 21000 to prevent transactions to contracts
  ethTxGasLimit: {{ .Values.faucetTxGasLimit }}

  # use legacy (non-eip1559) transaction type
  # true: Type 0 (Legacy Transactions), false: Type 2 (EIP1559 Transactions)
  ethLegacyTx: false

  # max transaction gas fee (in wei)
  # used as limit for legacy transactions (faucet won't build transactions with higher gas price)
  ethTxMaxFee: {{ .Values.faucetTxMaxFee }}

  # max transaction priority fee (in wei)
  ethTxPrioFee: {{ .Values.faucetTxMaxPrioFee }}

  # max number of unconfirmed transactions to create simultaneously
  ethMaxPending: 12

  # queue transactions and wait for funding when faucet is out of funds (show "No Funds" error when false)
  ethQueueNoFunds: false

  # link to eth transaction explorer with {txid} as placeholder for transaction id or null for no link
  ethTxExplorerLink: "{{ .Values.faucetExplorerLink }}"


  # min/max drop amount (max is the default if no module lowers it)
  maxDropAmount: {{ .Values.faucetMaxDropWei }}
  minDropAmount: {{ .Values.faucetMinDropWei }}

  # maximum session time (from start till payout)
  # only relevant if one of the enabled protection mechanisms introduces a session delay (eg. mining)
  sessionTimeout: 86400  # 24h

  # session cleanup time
  # session data will be removed from the faucet DB after that time
  sessionCleanup: 2592000 # 30 days

  # session save time
  # how often session updates will be written to DB
  sessionSaveTime: 120


  ### Protection mechanisms
  modules:

    ## Captcha Protection
    captcha:
      # enable / disable captcha protection
      enabled: {{ .Values.faucetCaptchaEnabled }}

      # captcha provider
      # hcaptcha:  HCaptcha (https://hcaptcha.com)
      # recaptcha: ReCAPTCHA (https://developers.google.com/recaptcha)
      provider: "{{ .Values.faucetCaptchaProvider }}"

      # captcha site key
      siteKey: "{{ .Values.faucetCaptchaSitekey }}"

      # captcha secret key
      secret: "{{ .Values.faucetCaptchaSecret }}"

      # require captcha to start a new session (default: false)
      checkSessionStart: true

      # require captcha to start claim payout (default: false)
      checkBalanceClaim: false

    ## ENS Name
    ensname:
      enabled: {{ .Values.faucetEnsEnabled }}

      # RPC Host for ENS name resolver (mainnet)
      rpcHost: "{{ .Values.faucetEnsRpcUrl }}"

      # require ENS name
      required: {{ .Values.faucetEnsRequired }}

    ## IP-Info module
    ipinfo:
      # enable / disable IP-Info protection
      enabled: {{ .Values.faucetIpinfoEnabled }}

      # ip info lookup api url (default: http://ip-api.com/json/{ip}?fields=21155839)
      apiUrl: "http://ip-api.com/json/{ip}?fields=21155839"

      # ip info caching time
      cacheTime: 86400 # 1 day

      # require valid ip info (throw error if lookup failed)
      required: true

      # ip info based restrictions
      restrictions:
        # percentage of drop amount if IP is in a hosting range (default: 100), 0 to block entirely
        hosting: {{ .Values.faucetIpinfoHostingRewards }}

        # percentage of drop amount if IP is in a proxy range (default: 100), 0 to block entirely
        proxy: {{ .Values.faucetIpinfoProxyRewards }}

      # ip info pattern based restrictions
      restrictionsPattern:
        "^.*Tencent Cloud.*$": {{ .Values.faucetIpinfoHostingRewards }}
        "^.*UCLOUD.*$": {{ .Values.faucetIpinfoHostingRewards }}
        "^.*Server Hosting.*$": {{ .Values.faucetIpinfoHostingRewards }}
        "^.*SCloud.*$": {{ .Values.faucetIpinfoHostingRewards }}

    ethinfo:
      # enable / disable max balance protection
      enabled: {{ .Values.faucetEthinfoEnabled }}

      # check balance and deny session if balance exceeds the limit (in wei)
      maxBalance: {{ .Values.faucetEthinfoMaxbalanceWei }}

      # deny sessions for contract addresses
      denyContract: {{ .Values.faucetEthinfoDenyContract }}

    ## Faucet Outflow module
    faucet-outflow:
      # enable / disable faucet outflow protection
      enabled: {{ .Values.faucetOutflowEnabled }}

      # limit outflow to 1000ETH per day
      amount: {{ .Values.faucetOutflowAmountWei }}
      duration: {{ .Values.faucetOutflowDuration }}

      # outflow balance limits
      lowerLimit: -{{ .Values.faucetOutflowBufferWei }}
      upperLimit: {{ .Values.faucetOutflowBufferWei }}

    ## Github login protection
    github:
      # enable / disable github login protection
      enabled: {{ .Values.faucetGithubEnabled }}

      # github api credentials
      appClientId: "{{ .Values.faucetGithubClientid }}"
      appSecret: "{{ .Values.faucetGithubSecret }}"

      # authentication timeout
      authTimeout: 86400

      # github account checks
      checks:
        - minAccountAge: {{ .Values.faucetGithubMinAge }} # min account age (7 days)
          minRepoCount: {{ .Values.faucetGithubMinRepos }} # min number of repositories (includes forked ones)
          minFollowers: {{ .Values.faucetGithubMinFollowers }} # min number of followers
          required: true # require passing this check or throw error
          message: "Your github account does not meet the minimum requirements" # custom error message

      # recurring restrictions based on github account
      restrictions:
        - limitAmount: {{ .Values.faucetGithubLimitAmountWei }}
          duration: {{ .Values.faucetGithubLimitDuration }}

    ## Mainnet Wallet module
    mainnet-wallet:
      # enable / disable mainnet wallet protection
      enabled: {{ .Values.faucetMainnetEnabled }}

      # RPC host for mainnet
      rpcHost: "{{ .Values.faucetMainnetRpcurl }}"

      # require minimum balance on mainnet wallet
      minBalance: {{ .Values.faucetMainnetMinBalanceWei }}

      # require minimum number of transactions from mainnet wallet (nonce count)
      minTxCount: {{ .Values.faucetMainnetMinTxCount }}

    ## Recurring Limits module
    recurring-limits:
      # enable / disable recurring limits protection
      enabled: {{ .Values.faucetRecurringLimitsEnabled }}

      limits: # array of individual limits, which all need to be passed
        - limitAmount: {{ .Values.faucetRecurringLimitsAmountWei }}
          duration: {{ .Values.faucetRecurringLimitsDuration }}

    ## Concurrency Limit module
    concurrency-limit:
      # enable / disable concurrency limit
      enabled: true

      concurrencyLimit: 1 # only allow 1 concurrent session (sessions in 'running' state at the same time for the same ip / target addr)
      byAddrOnly: false # only check concurrency by target address
      byIPOnly: false # only check concurrency by IP address
      #messageByAddr: "" # custom error message when limit is exceeded by same target address
      #messageByIP: "" # custom error message when limit is exceeded by same IP address

    ## Proof of Work (mining) protection
    pow:
      # enable / disable PoW protection
      enabled: {{ .Values.faucetPowEnabled }}

      # reward amount per eligible hash (in wei)
      powShareReward: {{ .Values.faucetPowRewardPerHash }}

      # penalty for not responding to a verification request (percent of powShareReward)
      # shouldn't be too high as this can happen regularly in case of connection loss or so
      verifyMinerMissPenaltyPerc: 10  # 10% of powShareReward

      # reward for responding to a verification request in time (percent of powShareReward)
      # some extra reward for slow miners
      # comment out to disable rewards for verification requests
      verifyMinerRewardPerc:   15  # 15% of powShareReward

      # maximum mining session time (in seconds)
      powSessionTimeout: {{ .Values.faucetPowMaxDuration }}

      # maximum number of seconds a session can idle until it gets closed
      powIdleTimeout: 1800 # 30min

      # maximum allowed mining hashrate (will be throttled to this rate when faster)
      powHashrateSoftLimit: 1000 # soft limit (enforced client side)
      powHashrateHardLimit: 1100 # hard limit (reject shares with too high nonces)

      # number of 0-bits the scrypt hash needs to start with to be eligible for a reward
      powDifficulty: {{ .Values.faucetPowDifficulty }}

      # mining algorithm to use
      powHashAlgo: "argon2"  # scrypt / cryptonight / argon2

      # pow module settings have been trimmed for readability.
      # you can find all available settings on https://github.com/pk910/PoWFaucet/wiki/Operator-Wiki#module-pow

      powPingInterval: {{ .Values.faucetPowPingInterval }}
      powPingTimeout: {{ .Values.faucetPowPingTimeout }}

  ### Fund Management

  # minimum balance to keep in the faucet wallet (in wei)
  spareFundsAmount: 100000000000000000  # 0.1 ETH

  # minimum balance to show the empty faucet error message
  noFundsBalance:   1000000000000000000  # 1 ETH

  # minimum balance to show the low funds warning
  lowFundsBalance: 1000000000000000000000  # 1000 ETH

  # low faucet balance warning message / false to disable the warning
  lowFundsWarning: "The faucet is running out of funds! Faucet Balance: {1}"

  # empty faucet error message / false to disable the error
  noFundsError: "Sorry, the faucet is out of funds :("

  # RPC unreachable error message / true to show the generic message / false to disable the error
  rpcConnectionError: "The Faucet is currently not working properly (RPC error)"

  # prevent creation of new sessions (used for maintenance)
  #denyNewSessions: "Sorry, the faucet is currently in maintenance mode. Please try again later."

  ### Other Settings

  # print faucet stats to log interval (10min default)
  #faucetLogStatsInterval: 600

  # build SEO optimized index.seo.html and deliver as index page
  # the blank loader page just looks bad when parsed by search engines
  buildSeoIndex: true

  # some additional meta tags to add to the SEO optimized page
  buildSeoMeta:
    keywords: "powfaucet,faucet,ethereum,ethereum faucet,evm,eth,pow"

  resultSharing:
    preHtml: |
      <div class="sh-opt">
        Did you like the faucet? Give that project a
        <iframe src="https://ghbtns.com/github-btn.html?user=pk910&repo=PoWFaucet&type=star&count=true"
         frameborder="0" scrolling="0" width="150" height="20" title="GitHub"></iframe>
      </div>
    caption: ""



================================================
FILE: charts/powfaucet/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/powfaucet/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "powfaucet.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "powfaucet.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "powfaucet.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "powfaucet.labels" -}}
helm.sh/chart: {{ include "powfaucet.chart" . }}
{{ include "powfaucet.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "powfaucet.selectorLabels" -}}
app.kubernetes.io/name: {{ include "powfaucet.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "powfaucet.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "powfaucet.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "powfaucet.httpPort" -}}
{{- printf "8080" -}}
{{- end -}}



================================================
FILE: charts/powfaucet/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "powfaucet.fullname" . }}
  labels:
    {{- include "powfaucet.labels" . | nindent 4 }}
data:
  faucet-config.yaml: |
    {{- tpl .Values.config . | nindent 4 }}





================================================
FILE: charts/powfaucet/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "powfaucet.fullname" . -}}
{{- $svcPort := include "powfaucet.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "powfaucet.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/powfaucet/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "powfaucet.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "powfaucet.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "powfaucet.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "powfaucet.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "powfaucet.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/powfaucet/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "powfaucet.fullname" . }}-headless
  labels:
    {{- include "powfaucet.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "powfaucet.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "powfaucet.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/powfaucet/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "powfaucet.fullname" . }}
  labels:
    {{- include "powfaucet.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "powfaucet.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "powfaucet.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/powfaucet/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "powfaucet.serviceAccountName" . }}
  labels:
    {{- include "powfaucet.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/powfaucet/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "powfaucet.fullname" . }}
  labels:
    {{- include "powfaucet.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "powfaucet.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "powfaucet.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "powfaucet.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "powfaucet.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if gt (len .Values.customCommand) 0 }}
          command:
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: storage
              mountPath: "/data"
            - name: config
              mountPath: "/data/faucet-config.yaml"
              subPath: faucet-config.yaml
              readOnly: true
          ports:
            - name: http
              containerPort: {{ include "powfaucet.httpPort" . }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: config
          configMap:
            name: {{ include "powfaucet.fullname" . }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}


================================================
FILE: charts/powfaucet/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "powfaucet.fullname" . }}-test-connection"
  labels:
    {{- include "powfaucet.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - --location
       - --request
       - GET
       - '{{ include "powfaucet.fullname" . }}:{{ include "powfaucet.httpPort" . }}/'
  restartPolicy: Never



================================================
FILE: charts/prysm/README.md
================================================

# prysm

![Version: 1.1.5](https://img.shields.io/badge/Version-1.1.5-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

An open-source Ethereum 2.0 client, written in Go

**Homepage:** <https://docs.prylabs.network/docs/getting-started/>

## Source Code

* <https://github.com/prysmaticlabs/prysm>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| checkpointSync | object | `{"enabled":false,"url":""}` | Checkpoint Sync |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customCommand | list | `[]` | Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplates instead. |
| defaultBeaconCommandTemplate | string | See `values.yaml` | Template used for the default beacon command |
| defaultValidatorCommandTemplate | string | See `values.yaml` | Template used for the default validator command |
| extraArgs | list | `[]` | Extra args for the prysm container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `3500` | HTTP Port |
| image.pullPolicy | string | `"IfNotPresent"` | Prysm container pull policy |
| image.repository | string | `"gcr.io/prysmaticlabs/prysm/beacon-chain"` | Prysm container image repository Multi-Arch (arm64/amd64) image Official image |
| image.tag | string | `"latest"` |  |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initChownData.enabled | bool | `true` | Init container to set the correct permissions to access data directories |
| initChownData.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| initChownData.image.repository | string | `"busybox"` | Container repository |
| initChownData.image.tag | string | `"1.34.0"` | Container tag |
| initChownData.resources | object | `{}` | Resource requests and limits |
| initContainers | list | `[]` | Additional init containers |
| jwt | string | `"ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a"` | JWT secret used by client as a secret. Change this value. |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| metricsPort | int | `8080` | Metrics Port |
| mode | string | `"beacon"` | Mode can be 'beacon' or 'validator' |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| p2pNodePort.enabled | bool | `false` | Expose P2P port via NodePort |
| p2pNodePort.initContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.initContainer.image.repository | string | `"lachlanevenson/k8s-kubectl"` | Container image to fetch nodeport information |
| p2pNodePort.initContainer.image.tag | string | `"v1.25.4"` | Container tag |
| p2pNodePort.port | int | `31000` | NodePort to be used |
| p2pPort | int | `13000` | P2P Port |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"20Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| rbac.clusterRules | list | See `values.yaml` | Required ClusterRole rules |
| rbac.create | bool | `true` | Specifies whether RBAC resources are to be created |
| rbac.rules | list | See `values.yaml` | Required ClusterRole rules |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| rpcPort | int | `4000` | RPC Port |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `300` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |
| validatorLivenessProbe | object | See `values.yaml` | Validator Liveness probe |
| validatorReadinessProbe | object | See `values.yaml` | Validator Readiness probe |

# Examples

## Beacon node on the Holesky testnet connected to Holesky via Infura

```yaml
mode: "beacon"

extraArgs:
  - --holesky
  - --execution-endpoint=<EXECUTION-ENDPOINT>
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```

## Validator node targeting a beacon node service

This example runs a validator on the holesky network that targets a pre-existing `prysm-beacon`
service by injecting the all-accounts.keystore.json` file via a secret ENV var. You could use a similar
approach to fetch your secrets from some external secret management system (Hashicorp Vault, Azure key vault, etc.):

```yaml
replicas: 1

mode: validator

image:
  repository: gcr.io/prysmaticlabs/prysm/validator

initContainers:
  - name: init-keystore
    image: bash:latest
    imagePullPolicy: IfNotPresent
    command:
    - bash
    - -c
    - >
      export INDEX=$(echo $(hostname)| rev | cut -d'-' -f 1 | rev);
      mkdir -p /data/wallet/direct/accounts/;
      keystore="KEYSTORE_$INDEX";
      echo ${!keystore} > /data/wallet/direct/accounts/all-accounts.keystore.json;
      password="PASSWORD_$INDEX";
      echo ${!password} > /data/wallet-password.txt;
    volumeMounts:
      - name: storage
        mountPath: "/data"
        readOnly:
    env:
      - name: PASSWORD_0
        valueFrom:
          secretKeyRef:
            # Name of the secret that will be generated for you. This is normally `${RELEASE-name}-env`
            # You might need to change this
            name: prysm-env
            key: PASSWORD_0
      - name: KEYSTORE_0
        valueFrom:
          secretKeyRef:
            # See comment on the previous secretKeyRef
            name: prysm-env
            key: KEYSTORE_0

extraArgs:
  - --wallet-dir=/data/wallet
  - --wallet-password-file=/data/wallet-password.txt
  - --beacon-rpc-provider=prysm-beacon:4000

livenessProbe:
  tcpSocket: null
  exec:
    command:
      - /app/cmd/validator/validator
      - accounts
      - list
      - --accept-terms-of-use=true
      - --wallet-dir=/data/wallet
      - --wallet-password-file=/data/wallet-password.txt
  initialDelaySeconds: 60
  periodSeconds: 120

readinessProbe:
  tcpSocket: null
  exec:
    command:
      - /app/cmd/validator/validator
      - accounts
      - list
      - --accept-terms-of-use=true
      - --wallet-dir=/data/wallet
      - --wallet-password-file=/data/wallet-password.txt
  initialDelaySeconds: 10
  periodSeconds: 10

secretEnv:
  # Note: Never publish any of your production secrets online. These are just used for testing purposes.
  PASSWORD_0: NotSoSuperSecret1234!
  KEYSTORE_0: >
    {
            "crypto": {
                    "checksum": {
                            "function": "sha256",
                            "message": "303fd570c747d33a4ceb8b1484fd792ca023c6f0563c492215808e4b1ea138fe",
                            "params": {}
                    },
                    "cipher": {
                            "function": "aes-128-ctr",
                            "message": "1f6589828cc7d325429753ea84bfe23ad72d64d12622c07c5121595d3f599c820ed63834b7a659650819e9aaa5a485d6736195b6aeb698861b91a3cb9d63a4864f844308e990d675fee8dc1d16f41a759372b642954e2d20de535961444f509964362ccda21f5e47a07e73c889f6288a93fe6ff315207e8aaba5f12de5e1e89351a0fa7e1c8d08252de8eef8304be5eb2eb649600f235c9e4e7cb4635d7217a7caf6af8cdedc7da4ff2c6fdf95cefeb119a1ae6376f1cf603b68028677df5e3114640b584f20f9173b348491fad52c3b7af92cd0f96fcf032f80d45b3855d0cfb90ecb3e85a3515cf5e4a9fcf849a982909ae69c249fbad1c28c0b91797ff2e555f3a3e4cc0f8e14a7c18ef8ac90bf9c6ed4b094b61bf07b7cfb7bb2a9531f24a2beeb930fd7383eb515f1f99512c1bd7fccfacce1f9b447234a36df9c89d2536281915408b18b04b1dae85565bc0a794ef4a40279afb072fa1bc012c4b668489bec8d5d4c2b29372a1bb97f299992b8eaab80648061f1094e6f790a1a007abda7c675737ac888bf360506e8378b252578bbb811c7d8dc76d76b9f845d38a3d00ee62da62113766406b78a29f9797bb24b36d5bda13063d2407b7ef3b0eb71f9a942484254611af1c2ac43622046a9aaeb04ba7d0b6a2ef2932eb7a316afb1f459d153c16dc6a7328cc362ea7312c646f1a8b86150d90da9adaf0a0eb9bdb7bb05a7ef033af81af9c015d7932603e2c57f015914454d4f1e18cc7c1185690384f8a958fe4727e01314d82588fcca268fdeefcdcc6a2c21c2fdad9db56601e02ce87a1059e980e7f266539810705a07ad4a84df8366ea04f8b5763d28cfc9c4b8ce5a9c101c75e359ef5736e843bbe0ba344c161fa9da48701a8d96b5c45edf15da99da72ab",
                            "params": {
                                    "iv": "964bc953dbdda657f2876c3e89cc2c90"
                            }
                    },
                    "kdf": {
                            "function": "pbkdf2",
                            "message": "",
                            "params": {
                                    "c": 262144,
                                    "dklen": 32,
                                    "prf": "hmac-sha256",
                                    "salt": "4c8970475c27f4aff9eb4d9c7145b39d0110c964c1979fc334def2f322fda7fd"
                            }
                    }
            },
            "uuid": "727cf6d4-41e7-46ea-98a4-da6a3b2d6a91",
            "version": 4,
            "name": "keystore"
    }

```



================================================
FILE: charts/prysm/Chart.yaml
================================================
apiVersion: v2
name: prysm
description: An open-source Ethereum 2.0 client, written in Go
home: https://docs.prylabs.network/docs/getting-started/
icon: https://launchpad.ethereum.org/static/media/prysmatic-labs-circle.96c803fe.png
sources:
  - https://github.com/prysmaticlabs/prysm
type: application
version: 1.1.5
maintainers:
  - name: skylenet
    email: rafael@skyle.net
  - name: barnabasbusa
    email: busa.barnabas@gmail.com



================================================
FILE: charts/prysm/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Beacon node on the Holesky testnet connected to Holesky via Infura

```yaml
mode: "beacon"

extraArgs:
  - --holesky
  - --execution-endpoint=<EXECUTION-ENDPOINT>
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```

## Validator node targeting a beacon node service

This example runs a validator on the holesky network that targets a pre-existing `prysm-beacon`
service by injecting the all-accounts.keystore.json` file via a secret ENV var. You could use a similar
approach to fetch your secrets from some external secret management system (Hashicorp Vault, Azure key vault, etc.):

```yaml
replicas: 1

mode: validator

image:
  repository: gcr.io/prysmaticlabs/prysm/validator

initContainers:
  - name: init-keystore
    image: bash:latest
    imagePullPolicy: IfNotPresent
    command:
    - bash
    - -c
    - >
      export INDEX=$(echo $(hostname)| rev | cut -d'-' -f 1 | rev);
      mkdir -p /data/wallet/direct/accounts/;
      keystore="KEYSTORE_$INDEX";
      echo ${!keystore} > /data/wallet/direct/accounts/all-accounts.keystore.json;
      password="PASSWORD_$INDEX";
      echo ${!password} > /data/wallet-password.txt;
    volumeMounts:
      - name: storage
        mountPath: "/data"
        readOnly:
    env:
      - name: PASSWORD_0
        valueFrom:
          secretKeyRef:
            # Name of the secret that will be generated for you. This is normally `${RELEASE-name}-env`
            # You might need to change this
            name: prysm-env
            key: PASSWORD_0
      - name: KEYSTORE_0
        valueFrom:
          secretKeyRef:
            # See comment on the previous secretKeyRef
            name: prysm-env
            key: KEYSTORE_0

extraArgs:
  - --wallet-dir=/data/wallet
  - --wallet-password-file=/data/wallet-password.txt
  - --beacon-rpc-provider=prysm-beacon:4000

livenessProbe:
  tcpSocket: null
  exec:
    command:
      - /app/cmd/validator/validator
      - accounts
      - list
      - --accept-terms-of-use=true
      - --wallet-dir=/data/wallet
      - --wallet-password-file=/data/wallet-password.txt
  initialDelaySeconds: 60
  periodSeconds: 120

readinessProbe:
  tcpSocket: null
  exec:
    command:
      - /app/cmd/validator/validator
      - accounts
      - list
      - --accept-terms-of-use=true
      - --wallet-dir=/data/wallet
      - --wallet-password-file=/data/wallet-password.txt
  initialDelaySeconds: 10
  periodSeconds: 10

secretEnv:
  # Note: Never publish any of your production secrets online. These are just used for testing purposes.
  PASSWORD_0: NotSoSuperSecret1234!
  KEYSTORE_0: >
    {
            "crypto": {
                    "checksum": {
                            "function": "sha256",
                            "message": "303fd570c747d33a4ceb8b1484fd792ca023c6f0563c492215808e4b1ea138fe",
                            "params": {}
                    },
                    "cipher": {
                            "function": "aes-128-ctr",
                            "message": "1f6589828cc7d325429753ea84bfe23ad72d64d12622c07c5121595d3f599c820ed63834b7a659650819e9aaa5a485d6736195b6aeb698861b91a3cb9d63a4864f844308e990d675fee8dc1d16f41a759372b642954e2d20de535961444f509964362ccda21f5e47a07e73c889f6288a93fe6ff315207e8aaba5f12de5e1e89351a0fa7e1c8d08252de8eef8304be5eb2eb649600f235c9e4e7cb4635d7217a7caf6af8cdedc7da4ff2c6fdf95cefeb119a1ae6376f1cf603b68028677df5e3114640b584f20f9173b348491fad52c3b7af92cd0f96fcf032f80d45b3855d0cfb90ecb3e85a3515cf5e4a9fcf849a982909ae69c249fbad1c28c0b91797ff2e555f3a3e4cc0f8e14a7c18ef8ac90bf9c6ed4b094b61bf07b7cfb7bb2a9531f24a2beeb930fd7383eb515f1f99512c1bd7fccfacce1f9b447234a36df9c89d2536281915408b18b04b1dae85565bc0a794ef4a40279afb072fa1bc012c4b668489bec8d5d4c2b29372a1bb97f299992b8eaab80648061f1094e6f790a1a007abda7c675737ac888bf360506e8378b252578bbb811c7d8dc76d76b9f845d38a3d00ee62da62113766406b78a29f9797bb24b36d5bda13063d2407b7ef3b0eb71f9a942484254611af1c2ac43622046a9aaeb04ba7d0b6a2ef2932eb7a316afb1f459d153c16dc6a7328cc362ea7312c646f1a8b86150d90da9adaf0a0eb9bdb7bb05a7ef033af81af9c015d7932603e2c57f015914454d4f1e18cc7c1185690384f8a958fe4727e01314d82588fcca268fdeefcdcc6a2c21c2fdad9db56601e02ce87a1059e980e7f266539810705a07ad4a84df8366ea04f8b5763d28cfc9c4b8ce5a9c101c75e359ef5736e843bbe0ba344c161fa9da48701a8d96b5c45edf15da99da72ab",
                            "params": {
                                    "iv": "964bc953dbdda657f2876c3e89cc2c90"
                            }
                    },
                    "kdf": {
                            "function": "pbkdf2",
                            "message": "",
                            "params": {
                                    "c": 262144,
                                    "dklen": 32,
                                    "prf": "hmac-sha256",
                                    "salt": "4c8970475c27f4aff9eb4d9c7145b39d0110c964c1979fc334def2f322fda7fd"
                            }
                    }
            },
            "uuid": "727cf6d4-41e7-46ea-98a4-da6a3b2d6a91",
            "version": 4,
            "name": "keystore"
    }

```



================================================
FILE: charts/prysm/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- Prysm container image repository
  # Multi-Arch (arm64/amd64) image
  #repository: gcr.io/prylabs-dev/prysm/beacon-chain
  # Official image
  repository: gcr.io/prysmaticlabs/prysm/beacon-chain
  # When using a validator:
  # repository: gcr.io/prysmaticlabs/prysm/validator
  # -- Prysm container image tag
  tag: latest
  # -- Prysm container pull policy
  pullPolicy: IfNotPresent

# -- Mode can be 'beacon' or 'validator'
mode: "beacon"

# -- Extra args for the prysm container
extraArgs: []
  ## Example for beacon mode
  #- --holesky
  #- --execution-endpoint=http://your-eth1-node:8551
  #- --checkpoint-sync-url=https://holesky.checkpoint-sync.ethdevops.io
  #- --genesis-beacon-api-url=https://holesky.checkpoint-sync.ethdevops.io
  #
  ##
  ## Example for validator mode
  #- --holesky
  #- --enable-doppelganger-protection
  #- --beacon-nodes=http://prysm-beacon:5052

# -- JWT secret used by client as a secret. Change this value.
jwt: ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a

# -- Checkpoint Sync
checkpointSync:
  enabled: false
  url: ""

# -- Template used for the default beacon command
# @default -- See `values.yaml`
defaultBeaconCommandTemplate: |
  - /bin/bash
  - -ac
  - >
  {{- if .Values.p2pNodePort.enabled }}
    . /env/init-nodeport;
  {{- end }}
    exec /app/cmd/beacon-chain/beacon-chain
    --accept-terms-of-use=true
    --datadir=/data
  {{- if .Values.p2pNodePort.enabled }}
    {{- if not (contains "--p2p-host-ip=" (.Values.extraArgs | join ",")) }}
    --p2p-host-ip=$EXTERNAL_IP
    {{- end }}
    {{- if not (contains "--p2p-tcp-port=" (.Values.extraArgs | join ",")) }}
    --p2p-tcp-port=$EXTERNAL_PORT
    {{- end }}
    {{- if not (contains "--p2p-udp-port" (.Values.extraArgs | join ",")) }}
    --p2p-udp-port=$EXTERNAL_PORT
    {{- end }}
  {{- else }}
    {{- if not (contains "--p2p-host-ip=" (.Values.extraArgs | join ",")) }}
    --p2p-host-ip=$(POD_IP)
    {{- end }}
    {{- if not (contains "--p2p-tcp-port=" (.Values.extraArgs | join ",")) }}
    --p2p-tcp-port={{ include "prysm.p2pPort" . }}
    {{- end }}
    {{- if not (contains "--p2p-udp-port=" (.Values.extraArgs | join ",")) }}
    --p2p-udp-port={{ include "prysm.p2pPort" . }}
    {{- end }}
  {{- end }}
    --rpc-host=0.0.0.0
    --rpc-port={{ .Values.rpcPort }}
    --jwt-secret=/data/jwt.hex
    --grpc-gateway-host=0.0.0.0
    --grpc-gateway-port={{ .Values.httpPort }}
    --monitoring-host=0.0.0.0
    --monitoring-port={{ .Values.metricsPort }}
  {{- if .Values.checkpointSync.enabled }}
    --checkpoint-sync-url={{ tpl .Values.checkpointSync.url $ }}
    --genesis-beacon-api-url={{ tpl .Values.checkpointSync.url $ }}
  {{- end }}
  {{- range .Values.extraArgs }}
    {{ tpl . $ }}
  {{- end }}

# -- Template used for the default validator command
# @default -- See `values.yaml`
defaultValidatorCommandTemplate: |
  - /bin/bash
  - -ac
  - >-
    exec /app/cmd/validator/validator
    --accept-terms-of-use=true
    --datadir=/data
    --monitoring-host=0.0.0.0
    --monitoring-port={{ .Values.metricsPort }}
  {{- range .Values.extraArgs }}
    {{ tpl . $ }}
  {{- end }}

# -- Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplates instead.
customCommand: []

# When p2pNodePort is enabled, your P2P port will be exposed via service type NodePort.
# This will generate a service for each replica, with a port binding via NodePort.
# This is useful if you want to expose and announce your node to the Internet.
p2pNodePort:
  # -- Expose P2P port via NodePort
  enabled: false
  # -- NodePort to be used
  port: 31000
  initContainer:
    image:
      # -- Container image to fetch nodeport information
      repository: lachlanevenson/k8s-kubectl
      # -- Container tag
      tag: v1.25.4
      # -- Container pull policy
      pullPolicy: IfNotPresent

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http-api
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http-api
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Validator Liveness probe
# @default -- See `values.yaml`
validatorLivenessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Validator Readiness probe
# @default -- See `values.yaml`
validatorReadinessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 10
  periodSeconds: 10

# -- P2P Port
p2pPort: 13000

# -- HTTP Port
httpPort: 3500

# -- Metrics Port
metricsPort: 8080

# -- RPC Port
rpcPort: 4000

# -- Node selector for pods
nodeSelector: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 20Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

rbac:
  # -- Specifies whether RBAC resources are to be created
  create: true
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  clusterRules:
     # Required to obtain the nodes external IP
    - apiGroups: [""]
      resources:
      - "nodes"
      verbs:
      - "get"
      - "list"
      - "watch"
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  rules:
    # Required to get information about the services nodePort.
    - apiGroups: [""]
      resources:
      - "services"
      verbs:
      - "get"
      - "list"
      - "watch"

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 300

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['/bin/bash', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

# -- Additional env variables injected via a created secret
secretEnv: {}
# MY_PASSWORD: supersecret

initChownData:
  # -- Init container to set the correct permissions to access data directories
  enabled: true
  image:
    # -- Container repository
    repository: busybox
    # -- Container tag
    tag: "1.34.0"
    # -- Container pull policy
    pullPolicy: IfNotPresent
  # -- Resource requests and limits
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/prysm/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/prysm/ci/default-values.yaml
================================================
# Leave empty so that CT tests with default values



================================================
FILE: charts/prysm/ci/validator-values.yaml
================================================
replicas: 1

mode: validator
image:
  repository: gcr.io/prysmaticlabs/prysm/validator
  tag: latest
  pullPolicy: IfNotPresent
initContainers:
  - name: init-keystore
    image: bash:latest
    imagePullPolicy: IfNotPresent
    command:
    - bash
    - -c
    - >
      export INDEX=$(echo $(hostname)| rev | cut -d'-' -f 1 | rev);
      mkdir -p /data/wallet/direct/accounts/;
      keystore="KEYSTORE_$INDEX";
      echo ${!keystore} > /data/wallet/direct/accounts/all-accounts.keystore.json;
      password="PASSWORD_$INDEX";
      echo ${!password} > /data/wallet-password.txt;
      echo "=================";
      cat /data/wallet/direct/accounts/all-accounts.keystore.json;
      echo "===============";
      cat /data/wallet-password.txt;
    volumeMounts:
      - name: storage
        mountPath: "/data"
        readOnly:
    env:
      - name: PASSWORD_0
        value: NotSoSuperSecret1234!
      - name: KEYSTORE_0
        value: >
          {
                  "crypto": {
                          "checksum": {
                                  "function": "sha256",
                                  "message": "303fd570c747d33a4ceb8b1484fd792ca023c6f0563c492215808e4b1ea138fe",
                                  "params": {}
                          },
                          "cipher": {
                                  "function": "aes-128-ctr",
                                  "message": "1f6589828cc7d325429753ea84bfe23ad72d64d12622c07c5121595d3f599c820ed63834b7a659650819e9aaa5a485d6736195b6aeb698861b91a3cb9d63a4864f844308e990d675fee8dc1d16f41a759372b642954e2d20de535961444f509964362ccda21f5e47a07e73c889f6288a93fe6ff315207e8aaba5f12de5e1e89351a0fa7e1c8d08252de8eef8304be5eb2eb649600f235c9e4e7cb4635d7217a7caf6af8cdedc7da4ff2c6fdf95cefeb119a1ae6376f1cf603b68028677df5e3114640b584f20f9173b348491fad52c3b7af92cd0f96fcf032f80d45b3855d0cfb90ecb3e85a3515cf5e4a9fcf849a982909ae69c249fbad1c28c0b91797ff2e555f3a3e4cc0f8e14a7c18ef8ac90bf9c6ed4b094b61bf07b7cfb7bb2a9531f24a2beeb930fd7383eb515f1f99512c1bd7fccfacce1f9b447234a36df9c89d2536281915408b18b04b1dae85565bc0a794ef4a40279afb072fa1bc012c4b668489bec8d5d4c2b29372a1bb97f299992b8eaab80648061f1094e6f790a1a007abda7c675737ac888bf360506e8378b252578bbb811c7d8dc76d76b9f845d38a3d00ee62da62113766406b78a29f9797bb24b36d5bda13063d2407b7ef3b0eb71f9a942484254611af1c2ac43622046a9aaeb04ba7d0b6a2ef2932eb7a316afb1f459d153c16dc6a7328cc362ea7312c646f1a8b86150d90da9adaf0a0eb9bdb7bb05a7ef033af81af9c015d7932603e2c57f015914454d4f1e18cc7c1185690384f8a958fe4727e01314d82588fcca268fdeefcdcc6a2c21c2fdad9db56601e02ce87a1059e980e7f266539810705a07ad4a84df8366ea04f8b5763d28cfc9c4b8ce5a9c101c75e359ef5736e843bbe0ba344c161fa9da48701a8d96b5c45edf15da99da72ab",
                                  "params": {
                                          "iv": "964bc953dbdda657f2876c3e89cc2c90"
                                  }
                          },
                          "kdf": {
                                  "function": "pbkdf2",
                                  "message": "",
                                  "params": {
                                          "c": 262144,
                                          "dklen": 32,
                                          "prf": "hmac-sha256",
                                          "salt": "4c8970475c27f4aff9eb4d9c7145b39d0110c964c1979fc334def2f322fda7fd"
                                  }
                          }
                  },
                  "uuid": "727cf6d4-41e7-46ea-98a4-da6a3b2d6a91",
                  "version": 4,
                  "name": "keystore"
          }


extraArgs:
  - --wallet-dir=/data/wallet
  - --wallet-password-file=/data/wallet-password.txt
  - --beacon-rpc-provider=prysm-beacon:4000

livenessProbe:
  tcpSocket: null
  exec:
    command:
      - /app/cmd/validator/validator
      - accounts
      - list
      - --accept-terms-of-use=true
      - --wallet-dir=/data/wallet
      - --wallet-password-file=/data/wallet-password.txt
  initialDelaySeconds: 60
  periodSeconds: 120

readinessProbe:
  tcpSocket: null
  exec:
    command:
      - /app/cmd/validator/validator
      - accounts
      - list
      - --accept-terms-of-use=true
      - --wallet-dir=/data/wallet
      - --wallet-password-file=/data/wallet-password.txt
  initialDelaySeconds: 5
  periodSeconds: 10



================================================
FILE: charts/prysm/templates/_cmd.tpl
================================================
{{/*
# Beacon command
*/}}
{{- define "prysm.beaconCommand" -}}
{{- tpl .Values.defaultBeaconCommandTemplate . }}
{{- end }}


{{/*
# Validator command
*/}}
{{- define "prysm.validatorCommand" -}}
{{- tpl .Values.defaultValidatorCommandTemplate . }}
{{- end }}



================================================
FILE: charts/prysm/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "prysm.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "prysm.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "prysm.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "prysm.labels" -}}
helm.sh/chart: {{ include "prysm.chart" . }}
{{ include "prysm.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "prysm.selectorLabels" -}}
app.kubernetes.io/name: {{ include "prysm.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "prysm.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "prysm.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{/*
Create the name of the cluster role.
It needs to be namespace prefixed to avoid naming conflicts when using the same deployment name across namespaces.
*/}}
{{- define "prysm.clusterRoleName" -}}
{{ .Release.Namespace }}-{{ include "prysm.fullname" . }}
{{- end }}

{{- define "prysm.p2pPort" -}}
{{- if .Values.p2pNodePort.enabled }}
{{- print .Values.p2pNodePort.port }}
{{- else }}
{{- print .Values.p2pPort }}
{{- end }}
{{- end -}}

{{- define "prysm.replicas" -}}
{{- if and (.Values.p2pNodePort.enabled) (gt (int .Values.replicas)  1) }}
{{- print 1 }}
{{ else }}
{{- print .Values.replicas }}
{{- end }}
{{- end -}}



================================================
FILE: charts/prysm/templates/clusterrole.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "prysm.clusterRoleName" . }}
  labels:
    {{- include "prysm.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.clusterRules | nindent 0 }}
{{- end }}



================================================
FILE: charts/prysm/templates/clusterrolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "prysm.clusterRoleName" . }}
  labels:
    {{- include "prysm.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "prysm.clusterRoleName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "prysm.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/prysm/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "prysm.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "prysm.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/prysm/templates/NOTES.txt
================================================



================================================
FILE: charts/prysm/templates/poddisruptionbudget.yaml
================================================
{{- if .Values.podDisruptionBudget }}
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ include "prysm.fullname" . }}
  labels:
    {{- include "prysm.labels" . | nindent 4 }}
spec:
{{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
{{- end }}
{{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
{{- end }}
  selector:
    matchLabels:
      {{- include "prysm.selectorLabels" . | nindent 6 }}
{{- end }}



================================================
FILE: charts/prysm/templates/role.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "prysm.serviceAccountName" . }}
  labels:
    {{- include "prysm.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.rules | nindent 0 }}
{{- end }}



================================================
FILE: charts/prysm/templates/rolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "prysm.serviceAccountName" . }}
  labels:
    {{- include "prysm.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "prysm.serviceAccountName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "prysm.serviceAccountName" . }}
{{- end }}



================================================
FILE: charts/prysm/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "prysm.fullname" . }}-env
  labels:
    {{- include "prysm.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "prysm.fullname" . }}-jwt
type: Opaque
data:
  jwt.hex: {{ .Values.jwt | b64enc }}


================================================
FILE: charts/prysm/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "prysm.fullname" . }}-headless
  labels:
    {{- include "prysm.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
  {{- if eq .Values.mode "beacon" }}
    - port: {{ include "prysm.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "prysm.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
  {{- end }}
  {{- if or (eq .Values.mode "beacon") (eq .Values.mode "validator") }}
    - port: {{ .Values.httpPort }}
      targetPort: http-api
      protocol: TCP
      name: http-api
    - port: {{ .Values.rpcPort }}
      targetPort: rpc
      protocol: TCP
      name: rpc
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "prysm.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/prysm/templates/service.p2p.nodeport.yaml
================================================
{{- if .Values.p2pNodePort.enabled -}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "prysm.fullname" $ }}-p2p-0
  labels:
    {{- include "prysm.labels" $ | nindent 4 }}
    pod: {{ include "prysm.fullname" $ }}-0
    type: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p-tcp
      port: {{ include "prysm.p2pPort" $ }}
      protocol: TCP
      targetPort: p2p-tcp
      nodePort: {{ include "prysm.p2pPort" $ }}
    - name: p2p-udp
      port: {{ include "prysm.p2pPort" $ }}
      protocol: UDP
      targetPort: p2p-udp
      nodePort: {{ include "prysm.p2pPort" $ }}
  selector:
    {{- include "prysm.selectorLabels" $ | nindent 4 }}
    statefulset.kubernetes.io/pod-name: "{{ include "prysm.fullname" $ }}-0"
{{- end }}



================================================
FILE: charts/prysm/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "prysm.fullname" . }}
  labels:
    {{- include "prysm.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
  {{- if eq .Values.mode "beacon" }}
    - port: {{ include "prysm.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "prysm.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
  {{- end }}
  {{- if or (eq .Values.mode "beacon") (eq .Values.mode "validator") }}
    - port: {{ .Values.httpPort }}
      targetPort: http-api
      protocol: TCP
      name: http-api
    - port: {{ .Values.rpcPort }}
      targetPort: rpc
      protocol: TCP
      name: rpc
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "prysm.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/prysm/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "prysm.serviceAccountName" . }}
  labels:
    {{- include "prysm.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/prysm/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
{{- if or (eq .Values.mode "beacon") (eq .Values.mode "validator") }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "prysm.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "prysm.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "prysm.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}
{{- end }}



================================================
FILE: charts/prysm/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "prysm.fullname" . }}
  labels:
    {{- include "prysm.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ include "prysm.replicas" . }}
  selector:
    matchLabels:
      {{- include "prysm.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "prysm.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "prysm.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "prysm.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- tpl (toYaml .Values.initContainers | nindent 8) $ }}
      {{- end }}
      {{- if .Values.p2pNodePort.enabled }}
        - name: init-nodeport
          image: "{{ .Values.p2pNodePort.initContainer.image.repository }}:{{ .Values.p2pNodePort.initContainer.image.tag }}"
          imagePullPolicy: {{.Values.p2pNodePort.initContainer.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - sh
            - -c
            - >
              export EXTERNAL_PORT=$(kubectl get services -l "pod in (${POD_NAME}), type in (p2p)" -o jsonpath='{.items[0].spec.ports[0].nodePort}');
              export EXTERNAL_IP=$(kubectl get nodes "${NODE_NAME}" -o jsonpath='{.status.addresses[?(@.type=="ExternalIP")].address}');
              echo "EXTERNAL_PORT=$EXTERNAL_PORT" >  /env/init-nodeport;
              echo "EXTERNAL_IP=$EXTERNAL_IP"     >> /env/init-nodeport;
              cat /env/init-nodeport;
          volumeMounts:
            - name: env-nodeport
              mountPath: /env
      {{- end }}
      {{- if .Values.initChownData.enabled }}
        - name: init-chown-data
          image: "{{ .Values.initChownData.image.repository }}:{{ .Values.initChownData.image.tag }}"
          imagePullPolicy: {{ .Values.initChownData.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }}", "/data"]
          resources:
      {{ toYaml .Values.initChownData.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: "/data"
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else if eq .Values.mode "beacon" }}
            {{- include "prysm.beaconCommand" . | nindent 12 }}
          {{- else if eq .Values.mode "validator" }}
            {{- include "prysm.validatorCommand" . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            {{- if .Values.p2pNodePort.enabled }}
            - name: env-nodeport
              mountPath: /env
            {{- end }}
            - name: storage
              mountPath: "/data"
            - name: jwt
              mountPath: "/data/jwt.hex"
              subPath: jwt.hex
              readOnly: true
          ports:
          {{- if eq .Values.mode "beacon" }}
            - name: p2p-tcp
              containerPort: {{ include "prysm.p2pPort" . }}
              protocol: TCP
            - name: p2p-udp
              containerPort: {{ include "prysm.p2pPort" . }}
              protocol: UDP
            - name: http-api
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
            - name: rpc
              containerPort: {{ .Values.rpcPort }}
              protocol: TCP
          {{- end }}
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
              protocol: TCP
          {{- if eq .Values.mode "beacon" }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- else if eq .Values.mode "validator" }}
          livenessProbe:
            {{- toYaml .Values.validatorLivenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.validatorReadinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "prysm.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ tpl (toYaml .Values.extraContainers | nindent 8) $ }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: jwt
          secret:
            secretName: {{ include "prysm.fullname" . }}-jwt
      {{- if .Values.p2pNodePort.enabled }}
        - name: env-nodeport
          emptyDir: {}
      {{- end }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/prysm/templates/tests/test-connection.yaml
================================================

apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "prysm.fullname" . }}-test-connection"
  labels:
    {{- include "prysm.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
    {{- if eq .Values.mode "beacon" }}
      args: ['{{ include "prysm.fullname" . }}:{{ .Values.httpPort }}/eth/v1/node/version']
    {{- else }}
      args: ['{{ include "prysm.fullname" . }}:{{ .Values.metricsPort }}/metrics']
    {{- end }}
  restartPolicy: Never



================================================
FILE: charts/reth/README.md
================================================

# reth

![Version: 0.0.15](https://img.shields.io/badge/Version-0.0.15-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Reth (short for Rust Ethereum, pronunciation) is a new Ethereum full node implementation that is focused on being user-friendly, highly modular, as well as being fast and efficient. Reth is an Execution Layer (EL) and is compatible with all Ethereum Consensus Layer (CL) implementations that support the Engine API. It is originally built and driven forward by Paradigm, and is licensed under the Apache and MIT licenses.

**Homepage:** <https://www.paradigm.xyz/2022/12/reth>

## Source Code

* <https://github.com/paradigmxyz/reth/>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| authPort | int | `8551` | Engine Port (Auth Port) |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customCommand | list | `[]` | Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplate instead. |
| defaultCommandTemplate | string | See `values.yaml` | Template used for the default command |
| extraArgs | list | `[]` | Extra args for the reth container |
| extraContainerPorts | list | `[]` | Additional ports for the main container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers or extraContainerPorts |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `8545` | HTTP Port |
| image.pullPolicy | string | `"IfNotPresent"` | reth container pull policy |
| image.repository | string | `"ethpandaops/reth"` | reth container image repository |
| image.tag | string | `"main"` | reth container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initChownData.enabled | bool | `true` | Init container to set the correct permissions to access data directories |
| initChownData.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| initChownData.image.repository | string | `"busybox"` | Container repository |
| initChownData.image.tag | string | `"1.34.0"` | Container tag |
| initChownData.resources | object | `{}` | Resource requests and limits |
| initContainers | list | `[]` | Additional init containers |
| jwt | string | `"ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a"` | JWT secret is attached as a secret object. Change this value. |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| metricsPort | int | `9001` | Metrics Port |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| p2pNodePort.enabled | bool | `false` | Expose P2P port via NodePort |
| p2pNodePort.initContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.initContainer.image.repository | string | `"lachlanevenson/k8s-kubectl"` | Container image to fetch nodeport information |
| p2pNodePort.initContainer.image.tag | string | `"v1.25.4"` | Container tag |
| p2pNodePort.port | int | `31000` | NodePort to be used |
| p2pNodePort.portForwardContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.portForwardContainer.image.repository | string | `"alpine/socat"` | Container image for the port forwarder |
| p2pNodePort.portForwardContainer.image.tag | string | `"latest"` | Container tag |
| p2pPort | int | `30303` | P2P Port |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"20Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| rbac.clusterRules | list | See `values.yaml` | Required ClusterRole rules |
| rbac.create | bool | `true` | Specifies whether RBAC resources are to be created |
| rbac.rules | list | See `values.yaml` | Required ClusterRole rules |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/debug/metrics/prometheus"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `300` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |
| wsPort | int | `8546` | WS Port |

# Examples

## Connecting to the holesky test network

```yaml
extraArgs:
  - --chain=holesky
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.
Currently reth doesn't allow you to announce a a different discovery port, which would be a requirement to run multiple replicas within the same chart.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```



================================================
FILE: charts/reth/Chart.yaml
================================================
apiVersion: v2
name: reth
description: >
  Reth (short for Rust Ethereum, pronunciation) is a new Ethereum full node implementation that is focused on being user-friendly, highly modular, as well as being fast and efficient. Reth is an Execution Layer (EL) and is compatible with all Ethereum Consensus Layer (CL) implementations that support the Engine API. It is originally built and driven forward by Paradigm, and is licensed under the Apache and MIT licenses.
home: https://www.paradigm.xyz/2022/12/reth
icon: https://github.com/paradigmxyz/reth/raw/main/assets/reth.jpg
sources:
  - https://github.com/paradigmxyz/reth/
type: application
version: 0.0.15
maintainers:
  - name: barnabasbusa
    email: busa.barnabas@gmail.com



================================================
FILE: charts/reth/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Connecting to the holesky test network

```yaml
extraArgs:
  - --chain=holesky
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.
Currently reth doesn't allow you to announce a a different discovery port, which would be a requirement to run multiple replicas within the same chart.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```



================================================
FILE: charts/reth/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- reth container image repository
  repository: ethpandaops/reth
  # -- reth container image tag
  tag: main
  # -- reth container pull policy
  pullPolicy: IfNotPresent

# -- Extra args for the reth container
extraArgs: []
  #- --network=holesky

# -- JWT secret is attached as a secret object. Change this value.
jwt: ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a

# -- Template used for the default command
# @default -- See `values.yaml`
defaultCommandTemplate: |
  - sh
  - -ac
  - >
  {{- if .Values.p2pNodePort.enabled }}
    . /env/init-nodeport;
  {{- end }}
    exec /usr/local/bin/reth node
    --datadir=/data
    --config=/data/config.toml
  {{- if .Values.p2pNodePort.enabled }}
    {{- if not (contains "--nat=" (.Values.extraArgs | join ",")) }}
    --nat=extip:$EXTERNAL_IP
    {{- end }}
    {{- if not (contains "--port=" (.Values.extraArgs | join ",")) }}
    --port=$EXTERNAL_PORT
    {{- end }}
  {{- else }}
    {{- if not (contains "--nat=" (.Values.extraArgs | join ",")) }}
    --nat=extip:$(POD_IP)
    {{- end }}
    {{- if not (contains "--port=" (.Values.extraArgs | join ",")) }}
    --port={{ include "reth.p2pPort" . }}
    {{- end }}
  {{- end }}
    --http
    --http.addr=0.0.0.0
    --http.port={{ .Values.httpPort }}
    --http.corsdomain=*
    --ws
    --ws.addr=0.0.0.0
    --ws.port={{ .Values.wsPort }}
    --ws.origins=*
    --authrpc.jwtsecret=/data/jwt.hex
    --authrpc.addr=0.0.0.0
    --authrpc.port={{ .Values.authPort }}
    --log.file.directory=/data/logs
  {{- if .Values.metricsPort }}
    --metrics=0.0.0.0:{{ .Values.metricsPort }}
  {{- end }}
  {{- range .Values.extraArgs }}
    {{ tpl . $ }}
  {{- end }}

# -- Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplate instead.
customCommand: []

# When p2pNodePort is enabled, your P2P port will be exposed via service type NodePort.
# This is useful if you want to expose and announce your node to the Internet.
# Limitation: You can only one have one replica when exposing via NodePort.
#             Check the chart README.md for more details
p2pNodePort:
  # -- Expose P2P port via NodePort
  enabled: false
  # -- NodePort to be used
  port: 31000
  initContainer:
    image:
      # -- Container image to fetch nodeport information
      repository: lachlanevenson/k8s-kubectl
      # -- Container tag
      tag: v1.25.4
      # -- Container pull policy
      pullPolicy: IfNotPresent
  portForwardContainer:
    image:
      # -- Container image for the port forwarder
      repository: alpine/socat
      # -- Container tag
      tag: latest
      # -- Container pull policy
      pullPolicy: IfNotPresent

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http-rpc
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http-rpc
  initialDelaySeconds: 10
  periodSeconds: 10

# -- P2P Port
p2pPort: 30303

# -- HTTP Port
httpPort: 8545

# -- WS Port
wsPort: 8546

# -- Engine Port (Auth Port)
authPort: 8551

# -- Metrics Port
metricsPort: 9001

# -- Node selector for pods
nodeSelector: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 20Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

rbac:
  # -- Specifies whether RBAC resources are to be created
  create: true
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  clusterRules:
     # Required to obtain the nodes external IP
    - apiGroups: [""]
      resources:
      - nodes
      verbs:
      - get
      - list
      - watch
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  rules:
    # Required to get information about the services nodePort.
    - apiGroups: [""]
      resources:
      - services
      verbs:
      - get
      - list
      - watch

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 300

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers or extraContainerPorts
extraPorts: []

# -- Additional ports for the main container
extraContainerPorts: []

# -- Additional env variables
extraEnv: []

# -- Additional env variables injected via a created secret
secretEnv: {}
# MY_PASSWORD: supersecret

initChownData:
  # -- Init container to set the correct permissions to access data directories
  enabled: true
  image:
    # -- Container repository
    repository: busybox
    # -- Container tag
    tag: 1.34.0
    # -- Container pull policy
    pullPolicy: IfNotPresent
  # -- Resource requests and limits
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /debug/metrics/prometheus
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/reth/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/reth/ci/default-values.yaml
================================================
# Leave empty so that CT tests with default values



================================================
FILE: charts/reth/templates/_cmd.tpl
================================================
{{/*
# Default command
*/}}
{{- define "reth.defaultCommand" -}}
{{- tpl .Values.defaultCommandTemplate . }}
{{- end }}



================================================
FILE: charts/reth/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "reth.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "reth.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "reth.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "reth.labels" -}}
helm.sh/chart: {{ include "reth.chart" . }}
{{ include "reth.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "reth.selectorLabels" -}}
app.kubernetes.io/name: {{ include "reth.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "reth.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "reth.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{/*
Create the name of the cluster role.
It needs to be namespace prefixed to avoid naming conflicts when using the same deployment name across namespaces.
*/}}
{{- define "reth.clusterRoleName" -}}
{{ .Release.Namespace }}-{{ include "reth.fullname" . }}
{{- end }}

{{- define "reth.p2pPort" -}}
{{- if .Values.p2pNodePort.enabled }}
{{- print .Values.p2pNodePort.port }}
{{- else }}
{{- print .Values.p2pPort }}
{{- end }}
{{- end -}}

{{- define "reth.replicas" -}}
{{- if and (.Values.p2pNodePort.enabled) (gt (int .Values.replicas)  1) }}
{{- print 1 }}
{{ else }}
{{- print .Values.replicas }}
{{- end }}
{{- end -}}



================================================
FILE: charts/reth/templates/clusterrole.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "reth.clusterRoleName" . }}
  labels:
    {{- include "reth.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.clusterRules | nindent 0 }}
{{- end }}



================================================
FILE: charts/reth/templates/clusterrolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "reth.clusterRoleName" . }}
  labels:
    {{- include "reth.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "reth.clusterRoleName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "reth.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/reth/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "reth.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "reth.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/reth/templates/NOTES.txt
================================================



================================================
FILE: charts/reth/templates/poddisruptionbudget.yaml
================================================
{{- if .Values.podDisruptionBudget }}
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ include "reth.fullname" . }}
  labels:
    {{- include "reth.labels" . | nindent 4 }}
spec:
{{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
{{- end }}
{{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
{{- end }}
  selector:
    matchLabels:
      {{- include "reth.selectorLabels" . | nindent 6 }}
{{- end }}



================================================
FILE: charts/reth/templates/role.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "reth.serviceAccountName" . }}
  labels:
    {{- include "reth.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.rules | nindent 0 }}
{{- end }}



================================================
FILE: charts/reth/templates/rolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "reth.serviceAccountName" . }}
  labels:
    {{- include "reth.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "reth.serviceAccountName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "reth.serviceAccountName" . }}
{{- end }}



================================================
FILE: charts/reth/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "reth.fullname" . }}-env
  labels:
    {{- include "reth.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "reth.fullname" . }}-jwt
type: Opaque
data:
  jwt.hex: {{ .Values.jwt | b64enc }}


================================================
FILE: charts/reth/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "reth.fullname" . }}-headless
  labels:
    {{- include "reth.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "reth.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "reth.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: {{ .Values.httpPort }}
      targetPort: http-rpc
      protocol: TCP
      name: http-rpc
    - port: {{ .Values.authPort }}
      targetPort: auth-rpc
      protocol: TCP
      name: auth-rpc
    {{- if ne .Values.httpPort .Values.wsPort }}  
    - port: {{ .Values.wsPort }}
      targetPort: ws-rpc
      protocol: TCP
      name: ws-rpc
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "reth.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/reth/templates/service.p2p.nodeport.yaml
================================================
{{- if .Values.p2pNodePort.enabled -}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "reth.fullname" $ }}-p2p-0
  labels:
    {{- include "reth.labels" $ | nindent 4 }}
    pod: {{ include "reth.fullname" $ }}-0
    type: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p-tcp
      port: {{ include "reth.p2pPort" $ }}
      protocol: TCP
      targetPort: p2p-tcp
      nodePort: {{ include "reth.p2pPort" $ }}
    - name: p2p-udp
      port: {{ include "reth.p2pPort" $ }}
      protocol: UDP
      targetPort: p2p-udp
      nodePort: {{ include "reth.p2pPort" $ }}
  selector:
    {{- include "reth.selectorLabels" $ | nindent 4 }}
    statefulset.kubernetes.io/pod-name: "{{ include "reth.fullname" $ }}-0"
{{- end }}



================================================
FILE: charts/reth/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "reth.fullname" . }}
  labels:
    {{- include "reth.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - port: {{ include "reth.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "reth.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
    - port: {{ .Values.httpPort }}
      targetPort: http-rpc
      protocol: TCP
      name: http-rpc
    - port: {{ .Values.authPort }}
      targetPort: auth-rpc
      protocol: TCP
      name: auth-rpc
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    {{- if ne .Values.httpPort .Values.wsPort }}
    - port: {{ .Values.wsPort }}
      targetPort: ws-rpc
      protocol: TCP
      name: ws-rpc
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "reth.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/reth/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "reth.serviceAccountName" . }}
  labels:
    {{- include "reth.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/reth/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "reth.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "reth.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "reth.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/reth/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "reth.fullname" . }}
  labels:
    {{- include "reth.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ include "reth.replicas" . }}
  selector:
    matchLabels:
      {{- include "reth.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "reth.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "reth.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "reth.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- tpl (toYaml .Values.initContainers | nindent 8) $ }}
      {{- end }}
      {{- if .Values.p2pNodePort.enabled }}
        - name: init-nodeport
          image: "{{ .Values.p2pNodePort.initContainer.image.repository }}:{{ .Values.p2pNodePort.initContainer.image.tag }}"
          imagePullPolicy: {{.Values.p2pNodePort.initContainer.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - sh
            - -c
            - >
              export EXTERNAL_PORT=$(kubectl get services -l "pod in (${POD_NAME}), type in (p2p)" -o jsonpath='{.items[0].spec.ports[0].nodePort}');
              export EXTERNAL_IP=$(kubectl get nodes "${NODE_NAME}" -o jsonpath='{.status.addresses[?(@.type=="ExternalIP")].address}');
              echo "EXTERNAL_PORT=$EXTERNAL_PORT" >  /env/init-nodeport;
              echo "EXTERNAL_IP=$EXTERNAL_IP"     >> /env/init-nodeport;
              cat /env/init-nodeport;
          volumeMounts:
            - name: env-nodeport
              mountPath: /env
      {{- end }}
      {{- if .Values.initChownData.enabled }}
        - name: init-chown-data
          image: "{{ .Values.initChownData.image.repository }}:{{ .Values.initChownData.image.tag }}"
          imagePullPolicy: {{ .Values.initChownData.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }}", "/data"]
          resources:
      {{ toYaml .Values.initChownData.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: "/data"
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
            {{- include "reth.defaultCommand" . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            {{- if .Values.p2pNodePort.enabled }}
            - name: env-nodeport
              mountPath: /env
            {{- end }}
            - name: storage
              mountPath: "/data"
            - name: jwt
              mountPath: "/data/jwt.hex"
              subPath: jwt.hex
              readOnly: true
          ports:
            {{- if .Values.extraContainerPorts }}
              {{ toYaml .Values.extraContainerPorts | nindent 12}}
            {{- end }}
            - name: p2p-tcp
              containerPort: {{ include "reth.p2pPort" . }}
              protocol: TCP
            - name: p2p-udp
              containerPort: {{ include "reth.p2pPort" . }}
              protocol: UDP
            - name: http-rpc
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
            - name: ws-rpc
              containerPort: {{ .Values.wsPort }}
              protocol: TCP
            - name: auth-rpc
              containerPort: {{ .Values.authPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "reth.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ tpl (toYaml .Values.extraContainers | nindent 8) $ }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: jwt
          secret:
            secretName: {{ include "reth.fullname" . }}-jwt
      {{- if .Values.p2pNodePort.enabled }}
        - name: env-nodeport
          emptyDir: {}
      {{- end }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/reth/templates/tests/test-connection.yaml
================================================

apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "reth.fullname" . }}-test-connection"
  labels:
    {{- include "reth.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
        - --location
        - --request
        - POST
        - '{{ include "reth.fullname" . }}:{{ .Values.httpPort }}/'
        - --header
        - 'Content-Type: application/json'
        - --data-raw
        - '{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":67}'
  restartPolicy: Never



================================================
FILE: charts/rpc-proxy/README.md
================================================

# rpc-proxy

![Version: 0.1.2](https://img.shields.io/badge/Version-0.1.2-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

A proxy for web3 JSONRPC

**Homepage:** <https://github.com/gochain/rpc-proxy>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `["--url=http://upstream-node:8545","--wsurl=http://upstream-node:8546","--rpm=1000"]` | Command arguments |
| config | string | `"Allow = [\n  \"clique_getSigners\",\n  \"clique_getSignersAtHash\",\n  \"clique_getSnapshot\",\n  \"clique_getSnapshotAtHash\",\n  \"clique_getVoters\",\n  \"clique_getVotersAtHash\",\n  \"eth_blockNumber\",\n  \"eth_call\",\n  \"eth_chainId\",\n  \"eth_estimateGas\",\n  \"eth_gasPrice\",\n  \"eth_genesisAlloc\",\n  \"eth_getBalance\",\n  \"eth_getBlockByHash\",\n  \"eth_getBlockByNumber\",\n  \"eth_getBlockTransactionCountByHash\",\n  \"eth_getBlockTransactionCountByNumber\",\n  \"eth_getCode\",\n  \"eth_getFilterChanges\",\n  \"eth_getLogs\",\n  \"eth_getStorageAt\",\n  \"eth_getTransactionByBlockHashAndIndex\",\n  \"eth_getTransactionByBlockNumberAndIndex\",\n  \"eth_getTransactionByHash\",\n  \"eth_getTransactionCount\",\n  \"eth_getTransactionReceipt\",\n  \"eth_newBlockFilter\",\n  \"eth_newPendingTransactionFilter\",\n  \"eth_sendRawTransaction\",\n  \"eth_subscribe\",\n  \"eth_totalSupply\",\n  \"eth_uninstallFilter\",\n  \"eth_unsubscribe\",\n  \"net_listening\",\n  \"net_version\",\n  \"rpc_modules\",\n  \"web3_clientVersion\",\n]\n"` |  |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the rpc-proxy container |
| customCommand | list | `[]` | Command replacement for the rpc-proxy container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | rpc-proxy container pull policy |
| image.repository | string | `"ghcr.io/gochain/rpc-proxy/rpc-proxy"` | rpc-proxy container image repository |
| image.tag | string | `"latest"` | rpc-proxy container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |

# Examples

## Defining the upstream node

```yaml
args:
  - --url=http://upstream-node:8545
  - --wsurl=http://upstream-node:8546
```



================================================
FILE: charts/rpc-proxy/Chart.yaml
================================================
apiVersion: v2
name: rpc-proxy
description: A proxy for web3 JSONRPC
home: https://github.com/gochain/rpc-proxy
type: application
version: 0.1.2
maintainers:
  - name: skylenet
    email: rafael@skyle.net



================================================
FILE: charts/rpc-proxy/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Defining the upstream node

```yaml
args:
  - --url=http://upstream-node:8545
  - --wsurl=http://upstream-node:8546
```



================================================
FILE: charts/rpc-proxy/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- rpc-proxy container image repository
  repository: ghcr.io/gochain/rpc-proxy/rpc-proxy
  # -- rpc-proxy container image tag
  tag: latest
  # -- rpc-proxy container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args:
  - --url=http://upstream-node:8545
  - --wsurl=http://upstream-node:8546
  - --rpm=1000

config: |
  Allow = [
    "clique_getSigners",
    "clique_getSignersAtHash",
    "clique_getSnapshot",
    "clique_getSnapshotAtHash",
    "clique_getVoters",
    "clique_getVotersAtHash",
    "eth_blockNumber",
    "eth_call",
    "eth_chainId",
    "eth_estimateGas",
    "eth_gasPrice",
    "eth_genesisAlloc",
    "eth_getBalance",
    "eth_getBlockByHash",
    "eth_getBlockByNumber",
    "eth_getBlockTransactionCountByHash",
    "eth_getBlockTransactionCountByNumber",
    "eth_getCode",
    "eth_getFilterChanges",
    "eth_getLogs",
    "eth_getStorageAt",
    "eth_getTransactionByBlockHashAndIndex",
    "eth_getTransactionByBlockNumberAndIndex",
    "eth_getTransactionByHash",
    "eth_getTransactionCount",
    "eth_getTransactionReceipt",
    "eth_newBlockFilter",
    "eth_newPendingTransactionFilter",
    "eth_sendRawTransaction",
    "eth_subscribe",
    "eth_totalSupply",
    "eth_uninstallFilter",
    "eth_unsubscribe",
    "net_listening",
    "net_version",
    "rpc_modules",
    "web3_clientVersion",
  ]

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Custom args for the rpc-proxy container
customArgs: []

# -- Command replacement for the rpc-proxy container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []



================================================
FILE: charts/rpc-proxy/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/rpc-proxy/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "rpc-proxy.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "rpc-proxy.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "rpc-proxy.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "rpc-proxy.labels" -}}
helm.sh/chart: {{ include "rpc-proxy.chart" . }}
{{ include "rpc-proxy.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "rpc-proxy.selectorLabels" -}}
app.kubernetes.io/name: {{ include "rpc-proxy.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "rpc-proxy.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "rpc-proxy.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "rpc-proxy.httpPort" -}}
{{- printf "8545" -}}
{{- end -}}



================================================
FILE: charts/rpc-proxy/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "rpc-proxy.fullname" . }}
  labels:
    {{- include "rpc-proxy.labels" . | nindent 4 }}
data:
  config.toml: |
    {{- .Values.config | nindent 4}}



================================================
FILE: charts/rpc-proxy/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rpc-proxy.fullname" . }}
  labels:
    {{- include "rpc-proxy.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "rpc-proxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "rpc-proxy.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "rpc-proxy.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
            - "rpc-proxy"
            - --config=/config.toml
            - --port={{ include "rpc-proxy.httpPort" . }}
            {{- toYaml .Values.args | nindent 12}}
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: "/config.toml"
              subPath: config.toml
              readOnly: true
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ include "rpc-proxy.httpPort" . }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "rpc-proxy.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "rpc-proxy.fullname" . }}



================================================
FILE: charts/rpc-proxy/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "rpc-proxy.fullname" . -}}
{{- $svcPort := include "rpc-proxy.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "rpc-proxy.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/rpc-proxy/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "rpc-proxy.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "rpc-proxy.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "rpc-proxy.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "rpc-proxy.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "rpc-proxy.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/rpc-proxy/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "rpc-proxy.fullname" . }}-env
  labels:
    {{- include "rpc-proxy.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/rpc-proxy/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "rpc-proxy.fullname" . }}
  labels:
    {{- include "rpc-proxy.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "rpc-proxy.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "rpc-proxy.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/rpc-proxy/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "rpc-proxy.serviceAccountName" . }}
  labels:
    {{- include "rpc-proxy.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/rpc-proxy/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "rpc-proxy.fullname" . }}-test-connection"
  labels:
    {{- include "rpc-proxy.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - '{{ include "rpc-proxy.fullname" . }}:{{ include "rpc-proxy.httpPort" . }}/'
  restartPolicy: Never



================================================
FILE: charts/rpc-snooper/README.md
================================================

# rpc-snooper

![Version: 0.0.1](https://img.shields.io/badge/Version-0.0.1-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Lightweight RPC proxy tool designed for debugging and monitoring RPC calls between Ethereum clients

**Homepage:** <https://github.com/ethpandaops/rpc-snooper>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the rpc-snooper container |
| customCommand | list | `[]` | Command replacement for the rpc-snooper container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `8555` |  |
| image.pullPolicy | string | `"IfNotPresent"` | rpc-snooper container pull policy |
| image.repository | string | `"ethpandaops/rpc-snooper"` | rpc-snooper container image repository |
| image.tag | string | `"latest"` | rpc-snooper container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| url | string | `"http://geth:8545"` | Target RPC URL |

# Examples

## Defining the upstream node (required)

#### Engine snooper configuration (lives between consensus clients and execution clients)
```yaml
url: http://geth:8545
```

#### Beacon snooper configuration (lives between validator and consensus clients)
```yaml
url: http://lighthouse:5052
```



================================================
FILE: charts/rpc-snooper/Chart.yaml
================================================
apiVersion: v2
name: rpc-snooper
description: Lightweight RPC proxy tool designed for debugging and monitoring RPC calls between Ethereum clients
home: https://github.com/ethpandaops/rpc-snooper
type: application
version: 0.0.1
maintainers:
  - name: barnabasbusa
    email: busa.barnabas@gmail.com
  - name: pk910
    email: philipp@pk910.de



================================================
FILE: charts/rpc-snooper/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Defining the upstream node (required)

#### Engine snooper configuration (lives between consensus clients and execution clients)
```yaml
url: http://geth:8545
```

#### Beacon snooper configuration (lives between validator and consensus clients)
```yaml
url: http://lighthouse:5052
```



================================================
FILE: charts/rpc-snooper/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- rpc-snooper container image repository
  repository: ethpandaops/rpc-snooper
  # -- rpc-snooper container image tag
  tag: latest
  # -- rpc-snooper container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Target RPC URL
url: http://geth:8545

# HTTP port for the rpc-snooper container
httpPort: 8555

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Custom args for the rpc-snooper container
customArgs: []

# -- Command replacement for the rpc-snooper container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []



================================================
FILE: charts/rpc-snooper/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/rpc-snooper/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "rpc-snooper.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "rpc-snooper.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "rpc-snooper.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "rpc-snooper.labels" -}}
helm.sh/chart: {{ include "rpc-snooper.chart" . }}
{{ include "rpc-snooper.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "rpc-snooper.selectorLabels" -}}
app.kubernetes.io/name: {{ include "rpc-snooper.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "rpc-snooper.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "rpc-snooper.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "rpc-snooper.httpPort" -}}
{{ .Values.httpPort }}
{{- end -}}



================================================
FILE: charts/rpc-snooper/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rpc-snooper.fullname" . }}
  labels:
    {{- include "rpc-snooper.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "rpc-snooper.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "rpc-snooper.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "rpc-snooper.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
            - ./json_rpc_snoop
            - --bind-address=0.0.0.0
            - --port={{ .Values.httpPort }}
            - "{{ .Values.url }}"
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ include "rpc-snooper.httpPort" . }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "rpc-snooper.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}



================================================
FILE: charts/rpc-snooper/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "rpc-snooper.fullname" . -}}
{{- $svcPort := include "rpc-snooper.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "rpc-snooper.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/rpc-snooper/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "rpc-snooper.fullname" . }}-env
  labels:
    {{- include "rpc-snooper.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/rpc-snooper/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "rpc-snooper.fullname" . }}
  labels:
    {{- include "rpc-snooper.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "rpc-snooper.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "rpc-snooper.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/rpc-snooper/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "rpc-snooper.serviceAccountName" . }}
  labels:
    {{- include "rpc-snooper.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/rpc-snooper/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "rpc-snooper.fullname" . }}-test-connection"
  labels:
    {{- include "rpc-snooper.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - '{{ include "rpc-snooper.fullname" . }}:{{ include "rpc-snooper.httpPort" . }}/'
  restartPolicy: Never



================================================
FILE: charts/smart-contract-verifier-http/README.md
================================================

# smart-contract-verifier-http

![Version: 0.1.4](https://img.shields.io/badge/Version-0.1.4-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Smart-contract verification service. Runs as an HTTP server and allows making verification requests through REST API.

**Homepage:** <https://github.com/blockscout/blockscout-rs/tree/main/smart-contract-verifier-http>

## Source Code

* <https://github.com/blockscout/blockscout-rs/tree/main/smart-contract-verifier-http>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| config | string | See `values.yaml` | Config file |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the smart-contract-verifier-http container |
| customCommand | list | `[]` | Command replacement for the smart-contract-verifier-http container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[{"name":"SMART_CONTRACT_VERIFIER__CONFIG","value":"/app/config.toml"}]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | smart-contract-verifier-http container pull policy |
| image.repository | string | `"ghcr.io/blockscout/smart-contract-verifier"` | smart-contract-verifier-http container image repository |
| image.tag | string | `"main"` | smart-contract-verifier-http container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"2Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | string | `nil` | Env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |

# Examples

## Setting the configuration via Env vars

```yaml
secretEnv:
  HCAPTCHA_SECRET: "your_hcaptcha_secret"
  HCAPTCHA_SITEKEY: "your_hcaptcha_site_key"
  APP_ETHKEY: "key in hex format"
  APP_AMOUNT: "1000000000000000000" # 1 ETH
  APP_CHAINS: "5" # Comma separated chain IDs that you support
  APP_TITLE: "%CHAINNAME smart-contract-verifier-http"
  #APP_IMAGEURL:
```



================================================
FILE: charts/smart-contract-verifier-http/Chart.yaml
================================================
apiVersion: v2
name: smart-contract-verifier-http
description: >
  Smart-contract verification service. Runs as an HTTP server and allows making verification requests through REST API.
home: https://github.com/blockscout/blockscout-rs/tree/main/smart-contract-verifier-http
sources:
  - https://github.com/blockscout/blockscout-rs/tree/main/smart-contract-verifier-http
type: application
version: 0.1.4
maintainers:
  - name: skylenet
    email: rafael@skyle.net



================================================
FILE: charts/smart-contract-verifier-http/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Setting the configuration via Env vars

```yaml
secretEnv:
  HCAPTCHA_SECRET: "your_hcaptcha_secret"
  HCAPTCHA_SITEKEY: "your_hcaptcha_site_key"
  APP_ETHKEY: "key in hex format"
  APP_AMOUNT: "1000000000000000000" # 1 ETH
  APP_CHAINS: "5" # Comma separated chain IDs that you support
  APP_TITLE: "%CHAINNAME smart-contract-verifier-http"
  #APP_IMAGEURL:
```



================================================
FILE: charts/smart-contract-verifier-http/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- smart-contract-verifier-http container image repository
  repository: ghcr.io/blockscout/smart-contract-verifier
  # -- smart-contract-verifier-http container image tag
  tag: main
  # -- smart-contract-verifier-http container pull policy
  pullPolicy: IfNotPresent

# -- Custom args for the smart-contract-verifier-http container
customArgs: []
  #- -config-file=/somewhere-else.yaml
  #- -output-dir=public

# -- Command replacement for the smart-contract-verifier-http container
customCommand: [] # Only change this if you need to change the default command

# -- Env variables injected via a created secret
secretEnv:
  #SOME_SECRET_ENV_VAR: some-secret

# -- Additional env variables
extraEnv:
  - name: SMART_CONTRACT_VERIFIER__CONFIG
    value: /app/config.toml

# -- Config file
# @default -- See `values.yaml`
config: |
  [server.http]
  enabled = true
  addr = "0.0.0.0:{{ include "smart-contract-verifier-http.httpPort" . }}"

  [compilers]
  # if omitted, number of CPU cores would be used
  # max_threads = 8

  [solidity]
  enabled = true
  compilers_dir = "/data/solidity-compilers"
  refresh_versions_schedule = "0 0 * * * * *"
  [solidity.fetcher.list]
  list_url = "https://solc-bin.ethereum.org/linux-amd64/list.json"

  #[solidity.fetcher.s3]
  #access_key = "access_key"
  #secret_key = "secret_key"
  #region = "region"
  #endpoint = "endpoint"
  ## The only required field for the s3 fetcher
  #bucket = "bucket"

  [vyper]
  enabled = true
  compilers_dir = "/data/vyper-compilers"
  refresh_versions_schedule = "0 0 * * * * *"
  [vyper.fetcher.list]
  list_url = "https://raw.githubusercontent.com/blockscout/solc-bin/main/vyper.list.json"

  [sourcify]
  enabled = true
  api_url = "https://sourcify.dev/server/"
  verification_attempts = 3
  request_timeout = 10

  [metrics]
  enabled = false
  addr = "0.0.0.0:6060"
  route = "/metrics"

  [jaeger]
  enabled = false
  agent_endpoint = "localhost:6831"

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 2Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/smart-contract-verifier-http/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/smart-contract-verifier-http/ci/default-values.yaml
================================================



================================================
FILE: charts/smart-contract-verifier-http/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "smart-contract-verifier-http.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "smart-contract-verifier-http.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "smart-contract-verifier-http.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "smart-contract-verifier-http.labels" -}}
helm.sh/chart: {{ include "smart-contract-verifier-http.chart" . }}
{{ include "smart-contract-verifier-http.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "smart-contract-verifier-http.selectorLabels" -}}
app.kubernetes.io/name: {{ include "smart-contract-verifier-http.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "smart-contract-verifier-http.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "smart-contract-verifier-http.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "smart-contract-verifier-http.httpPort" -}}
{{- printf "8050" -}}
{{- end -}}

{{- define "smart-contract-verifier-http.metricsPort" -}}
{{- printf "6060" -}}
{{- end -}}



================================================
FILE: charts/smart-contract-verifier-http/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "smart-contract-verifier-http.fullname" . }}
  labels:
    {{- include "smart-contract-verifier-http.labels" . | nindent 4 }}
data:
  config.toml: |
    {{- tpl .Values.config . | nindent 4 }}



================================================
FILE: charts/smart-contract-verifier-http/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "smart-contract-verifier-http.fullname" . -}}
{{- $svcPort := include "smart-contract-verifier-http.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "smart-contract-verifier-http.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/smart-contract-verifier-http/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "smart-contract-verifier-http.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "smart-contract-verifier-http.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "smart-contract-verifier-http.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "smart-contract-verifier-http.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "smart-contract-verifier-http.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/smart-contract-verifier-http/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "smart-contract-verifier-http.fullname" . }}-env
  labels:
    {{- include "smart-contract-verifier-http.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/smart-contract-verifier-http/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "smart-contract-verifier-http.fullname" . }}-headless
  labels:
    {{- include "smart-contract-verifier-http.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "smart-contract-verifier-http.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "smart-contract-verifier-http.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/smart-contract-verifier-http/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "smart-contract-verifier-http.fullname" . }}
  labels:
    {{- include "smart-contract-verifier-http.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "smart-contract-verifier-http.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "smart-contract-verifier-http.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/smart-contract-verifier-http/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "smart-contract-verifier-http.serviceAccountName" . }}
  labels:
    {{- include "smart-contract-verifier-http.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/smart-contract-verifier-http/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "smart-contract-verifier-http.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "smart-contract-verifier-http.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "smart-contract-verifier-http.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/smart-contract-verifier-http/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "smart-contract-verifier-http.fullname" . }}
  labels:
    {{- include "smart-contract-verifier-http.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "smart-contract-verifier-http.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "smart-contract-verifier-http.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "smart-contract-verifier-http.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "smart-contract-verifier-http.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if gt (len .Values.customCommand) 0 }}
          command:
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: "/app/config.toml"
              subPath: config.toml
              readOnly: true
            - name: storage
              mountPath: "/data"
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ include "smart-contract-verifier-http.httpPort" . }}
              protocol: TCP
            - name: metrics
              containerPort: {{ include "smart-contract-verifier-http.metricsPort" . }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "smart-contract-verifier-http.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: config
          configMap:
            name: {{ include "smart-contract-verifier-http.fullname" . }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
 {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/smart-contract-verifier-http/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "smart-contract-verifier-http.fullname" . }}-test-connection"
  labels:
    {{- include "smart-contract-verifier-http.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - --location
       - --request
       - GET
       - '{{ include "smart-contract-verifier-http.fullname" . }}:{{ include "smart-contract-verifier-http.httpPort" . }}/'
  restartPolicy: Never



================================================
FILE: charts/spamoor/README.md
================================================
# spamoor

![Version: 0.0.1](https://img.shields.io/badge/Version-0.0.1-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square) ![AppVersion: 1.0.2](https://img.shields.io/badge/AppVersion-1.0.2-informational?style=flat-square)

Ethereum transaction spammer for testnets and stress testing

## Installation

```console
helm repo add ethereum-helm-charts https://ethpandaops.github.io/ethereum-helm-charts
helm install [RELEASE_NAME] ethereum-helm-charts/spamoor
```

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the spamoor container |
| customCommand | list | `["./spamoor-daemon"]` | Command replacement for the spamoor container |
| defaultSpamoorArgsTemplate | string | See `values.yaml` | Template used for the default spamoor args |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `8080` | HTTP port for spamoor interface |
| image.pullPolicy | string | `"IfNotPresent"` | spamoor container pull policy |
| image.repository | string | `"ethpandaops/spamoor"` | spamoor container image repository |
| image.tag | string | `"latest"` | spamoor container image tag |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"5Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| privateKey | string | `""` | Required private key for the main wallet |
| resources | object | `{}` | Resource requests and limits |
| rpcEndpoints | list | `["http://execution-client:8545"]` | RPC endpoint to use for transactions |
| rpcEndpointsFile | string | See `values.yaml` | RPC endpoints file content |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |

----------------------------------------------
Autogenerated from chart metadata using [helm-docs v1.5.0](https://github.com/norwoodj/helm-docs/releases/v1.5.0)


================================================
FILE: charts/spamoor/Chart.yaml
================================================
apiVersion: v2
name: spamoor
description: >
  Ethereum transaction spammer for testnets and stress testing
home: https://github.com/ethpandaops/spamoor
sources:
  - https://github.com/ethpandaops/spamoor
type: application
version: 0.0.1
appVersion: "1.0.2"
maintainers:
  - name: barnabasbusa
    email: busa.barnabas@gmail.com
  - name: pk910
    email: philipp@pk910.de



================================================
FILE: charts/spamoor/README.md.gotmpl
================================================
# {{ template "chart.name" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}{{ template "chart.appVersionBadge" . }}

{{ template "chart.description" . }}

## Installation

```console
helm repo add ethereum-helm-charts https://ethpandaops.github.io/ethereum-helm-charts
helm install [RELEASE_NAME] ethereum-helm-charts/{{ template "chart.name" . }}
```

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

{{ template "helm-docs.versionFooter" . }}


================================================
FILE: charts/spamoor/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- spamoor container image repository
  repository: ethpandaops/spamoor
  # -- spamoor container image tag
  tag: "latest"
  # -- spamoor container pull policy
  pullPolicy: IfNotPresent

# -- Command replacement for the spamoor container
customCommand: ["./spamoor-daemon"]

# -- Custom args for the spamoor container
customArgs: []

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host for public service
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Annotations for the StatefulSet
annotations: {}

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 5Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

# -- Required private key for the main wallet
privateKey: ""

# -- RPC endpoint to use for transactions
rpcEndpoints:
  - "http://execution-client:8545"

# -- HTTP port for spamoor interface
httpPort: 8080

# -- Template used for the default spamoor args
# @default -- See `values.yaml`
defaultSpamoorArgsTemplate: |
  - --db=/data/spamoor.sqlite
  - --rpchost-file=/config/rpchosts.txt
  - --port={{ .Values.httpPort }}
  - --privkey={{ .Values.privateKey }}
  {{- if gt (len .Values.customArgs) 0 }}
  {{- range .Values.customArgs }}
  - {{ tpl . $ }}
  {{- end }}
  {{- end }}

# -- RPC endpoints file content
# @default -- See `values.yaml`
rpcEndpointsFile: |
  {{- range .Values.rpcEndpoints }}
  {{ . }}
  {{- end }}



================================================
FILE: charts/spamoor/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/
# Chart-specific files
README.md.gotmpl


================================================
FILE: charts/spamoor/templates/_cmd.tpl
================================================
{{/*
# Beacon command
*/}}
{{- define "spamoor.containerArgs" -}}
{{- tpl .Values.defaultSpamoorArgsTemplate . }}
{{- end }}


================================================
FILE: charts/spamoor/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "spamoor.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "spamoor.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "spamoor.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "spamoor.labels" -}}
helm.sh/chart: {{ include "spamoor.chart" . }}
{{ include "spamoor.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "spamoor.selectorLabels" -}}
app.kubernetes.io/name: {{ include "spamoor.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "spamoor.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "spamoor.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "spamoor.httpPort" -}}
{{- printf "8080" -}}
{{- end -}}



================================================
FILE: charts/spamoor/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "spamoor.fullname" . }}-rpchosts
  labels:
    {{- include "spamoor.labels" . | nindent 4 }}
data:
  rpchosts.txt: |
    {{- tpl .Values.rpcEndpointsFile . | nindent 4 }}



================================================
FILE: charts/spamoor/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "spamoor.fullname" . -}}
{{- $svcPort := include "spamoor.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "spamoor.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/spamoor/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "spamoor.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "spamoor.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "spamoor.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "spamoor.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "spamoor.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

{{- if eq .Values.privateKey "" }}

WARNING: No private key specified!
------------------------------------------------------------------------
You must set a private key with sufficient ETH balance to fund transactions.
Update your deployment with:

  helm upgrade {{ .Release.Name }} {{ .Chart.Name }} --set privateKey=<your-private-key>
------------------------------------------------------------------------
{{- end }}



================================================
FILE: charts/spamoor/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "spamoor.fullname" . }}-headless
  labels:
    {{- include "spamoor.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ include "spamoor.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "spamoor.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/spamoor/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "spamoor.fullname" . }}
  labels:
    {{- include "spamoor.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "spamoor.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
    {{- if eq .Values.service.type "NodePort" }}
      nodePort: {{ .Values.service.nodePort }}
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "spamoor.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/spamoor/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "spamoor.serviceAccountName" . }}
  labels:
    {{- include "spamoor.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/spamoor/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "spamoor.fullname" . }}
  labels:
    {{- include "spamoor.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "spamoor.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "spamoor.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "spamoor.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "spamoor.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if gt (len .Values.customCommand) 0 }}
          command:
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- end }}
          args:
            {{- include "spamoor.containerArgs" . | nindent 12 }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            - name: storage
              mountPath: "/data"
            - name: rpchosts
              mountPath: "/config/rpchosts.txt"
              subPath: rpchosts.txt
              readOnly: true
          ports:
            - name: http
              containerPort: {{ include "spamoor.httpPort" . }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: rpchosts
          configMap:
            name: {{ include "spamoor.fullname" . }}-rpchosts
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/spamoor/templates/tests/test-connection-headless.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "spamoor.fullname" . }}-test-headless"
  labels:
    {{- include "spamoor.labels" . | nindent 4 }}
    helm.sh/chart: {{ include "spamoor.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: {{ .Chart.Name }}-test-headless
      image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
      command: ['sh', '-c', 'sleep 10']
  restartPolicy: Never


================================================
FILE: charts/spamoor/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "spamoor.fullname" . }}-test"
  labels:
    {{- include "spamoor.labels" . | nindent 4 }}
    helm.sh/chart: {{ include "spamoor.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: {{ .Chart.Name }}-test
      image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
      command: ['sh', '-c', 'sleep 10']
  restartPolicy: Never


================================================
FILE: charts/splitoor/README.md
================================================

# splitoor

![Version: 0.0.1](https://img.shields.io/badge/Version-0.0.1-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Monitor 0xSplits, validators, gnosis safe's and provide notifications on relevant events

**Homepage:** <https://github.com/ethpandaops/splitoor>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| config.healthCheckAddr | string | `":9191"` |  |
| config.logging | string | `"info"` |  |
| config.metricsAddr | string | `":9090"` |  |
| config.name | string | `"splitoor"` |  |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the splitoor container |
| customCommand | list | `[]` | Command replacement for the splitoor container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPodPorts | list | `[]` | Extra Pod ports |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| healthCheck.enabled | bool | `true` |  |
| healthCheck.port | int | `9191` |  |
| image.pullPolicy | string | `"IfNotPresent"` | splitoor container pull policy |
| image.repository | string | `"ethpandaops/splitoor"` | splitoor container image repository |
| image.tag | string | `"latest"` | splitoor container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| initContainers | list | `[]` | Additional init containers |
| lifecycle | object | See `values.yaml` | Lifecycle hooks |
| livenessProbe | object | `{"httpGet":{"path":"/healthz","port":"health"},"initialDelaySeconds":60,"periodSeconds":120}` | Liveness probe |
| metrics.enabled | bool | `true` |  |
| metrics.port | int | `9090` |  |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | `{"httpGet":{"path":"/healthz","port":"health"},"initialDelaySeconds":10,"periodSeconds":10}` | Readiness probe |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `90` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/splitoor/Chart.yaml
================================================
apiVersion: v2
name: splitoor
description: Monitor 0xSplits, validators, gnosis safe's and provide notifications on relevant events
home: https://github.com/ethpandaops/splitoor
type: application
version: 0.0.1
maintainers:
  - name: savid
    email: andrew.davis@ethereum.org



================================================
FILE: charts/splitoor/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/splitoor/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- splitoor container image repository
  repository: ethpandaops/splitoor
  # -- splitoor container image tag
  tag: latest
  # -- splitoor container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

config:
  logging: "info" # panic,fatal,warn,info,debug,trace
  name: "splitoor"
  metricsAddr: ":9090"
  healthCheckAddr: ":9191"

# -- Custom args for the splitoor container
customArgs: []

# -- Command replacement for the splitoor container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

metrics:
  enabled: true
  port: 9090
healthCheck:
  enabled: true
  port: 9191

# -- Liveness probe
livenessProbe:
  httpGet:
    path: /healthz
    port: health
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
readinessProbe:
  httpGet:
    path: /healthz
    port: health
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Extra Pod ports
extraPodPorts: []

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Lifecycle hooks
# @default -- See `values.yaml`
lifecycle:
  preStop:
    exec:
      command:
      - /bin/sleep
      - "30"

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 90

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/splitoor/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/splitoor/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "splitoor.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "splitoor.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "splitoor.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "splitoor.labels" -}}
helm.sh/chart: {{ include "splitoor.chart" . }}
{{ include "splitoor.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "splitoor.selectorLabels" -}}
app.kubernetes.io/name: {{ include "splitoor.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "splitoor.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "splitoor.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "splitoor.metricsPort" -}}
{{ (split ":" .Values.config.metricsAddr)._1 | default "9090" }}
{{- end -}}

{{- define "splitoor.healthCheckPort" -}}
{{ (split ":" .Values.config.healthCheckAddr)._1 | default "9191" }}
{{- end -}}

{{- define "splitoor.pprofPort" -}}
{{- if .Values.config.pprofAddr -}}
{{ (split ":" .Values.config.pprofAddr)._1 | default "6060" }}
{{- end -}}
{{- end -}}



================================================
FILE: charts/splitoor/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "splitoor.fullname" . }}
  labels:
    {{- include "splitoor.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{ tpl (toYaml .Values.config | nindent 4) $ }}



================================================
FILE: charts/splitoor/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "splitoor.fullname" . }}
  labels:
    {{- include "splitoor.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "splitoor.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "splitoor.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "splitoor.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/splitoor"
          - "monitor"
          - --config=/config.yaml
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 10}}
          {{- end }}
        ports:
          - name: metrics
            containerPort: {{ include "splitoor.metricsPort" . }}
            protocol: TCP
          {{- if (include "splitoor.healthCheckPort" .) }}
          - name: health
            containerPort: {{ include "splitoor.healthCheckPort" . }}
            protocol: TCP
          {{- end }}
          {{- if (include "splitoor.pprofPort" .) }}
          - name: pprof
            containerPort: {{ include "splitoor.pprofPort" . }}
            protocol: TCP
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        lifecycle:
          {{- toYaml .Values.lifecycle | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "splitoor.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "splitoor.fullname" . }}



================================================
FILE: charts/splitoor/templates/NOTES.txt
================================================



================================================
FILE: charts/splitoor/templates/pdb.yaml
================================================
{{- if or .Values.podDisruptionBudget.minAvailable .Values.podDisruptionBudget.maxUnavailable -}}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "splitoor.fullname" . }}
  labels:
    {{- include "splitoor.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "splitoor.selectorLabels" . | nindent 6 }}
  {{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
  {{- end  }}
  {{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
  {{- end  }}
{{- end -}}


================================================
FILE: charts/splitoor/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "splitoor.fullname" . }}-env
  labels:
    {{- include "splitoor.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/splitoor/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "splitoor.fullname" . }}
  labels:
    {{- include "splitoor.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "splitoor.metricsPort" . }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    {{- if (include "splitoor.healthCheckPort" .) }}
    - port: {{ include "splitoor.healthCheckPort" . }}
      targetPort: health
      protocol: TCP
      name: health
    {{- end }}
    {{- if (include "splitoor.pprofPort" .) }}
    - port: {{ include "splitoor.pprofPort" . }}
      targetPort: pprof
      protocol: TCP
      name: pprof
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "splitoor.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/splitoor/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "splitoor.serviceAccountName" . }}
  labels:
    {{- include "splitoor.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/splitoor/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "splitoor.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "splitoor.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "splitoor.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/stubbies/README.md
================================================

# stubbies

![Version: 0.0.2](https://img.shields.io/badge/Version-0.0.2-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Ethereum execution client stub for consensus layer clients.

**Homepage:** <https://github.com/ethpandaops/stubbies>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| config.addr | string | `":8551"` |  |
| config.logging | string | `"info"` |  |
| config.metricsAddr | string | `":9090"` |  |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the stubbies container |
| customCommand | list | `[]` | Command replacement for the stubbies container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPodPorts | list | `[]` | Extra Pod ports |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | stubbies container pull policy |
| image.repository | string | `"ethpandaops/stubbies"` | stubbies container image repository |
| image.tag | string | `"latest"` | stubbies container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/stubbies/Chart.yaml
================================================
apiVersion: v2
name: stubbies
description: Ethereum execution client stub for consensus layer clients.
home: https://github.com/ethpandaops/stubbies
type: application
version: 0.0.2
maintainers:
  - name: savid
    email: andrew.davis@ethereum.org



================================================
FILE: charts/stubbies/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/stubbies/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- stubbies container image repository
  repository: ethpandaops/stubbies
  # -- stubbies container image tag
  tag: latest
  # -- stubbies container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

config:
  logging: "info"
  addr: ":8551"
  metricsAddr: ":9090"

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Custom args for the stubbies container
customArgs: []

# -- Command replacement for the stubbies container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Extra Pod ports
extraPodPorts: []

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/stubbies/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/stubbies/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "stubbies.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "stubbies.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "stubbies.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "stubbies.labels" -}}
helm.sh/chart: {{ include "stubbies.chart" . }}
{{ include "stubbies.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "stubbies.selectorLabels" -}}
app.kubernetes.io/name: {{ include "stubbies.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "stubbies.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "stubbies.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "stubbies.httpPort" -}}
{{ (split ":" .Values.config.addr)._1 | default ":8080" }}
{{- end }}

{{- define "stubbies.metricsPort" -}}
{{ (split ":" .Values.config.metricsAddr)._1 | default ":9090" }}
{{- end -}}



================================================
FILE: charts/stubbies/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "stubbies.fullname" . }}
  labels:
    {{- include "stubbies.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{ toYaml .Values.config | nindent 4 }}



================================================
FILE: charts/stubbies/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "stubbies.fullname" . }}
  labels:
    {{- include "stubbies.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "stubbies.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "stubbies.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "stubbies.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/stubbies"
          - "server"
          - --config=/config.yaml
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
        ports:
          - name: http
            containerPort: {{ include "stubbies.httpPort" . }}
            protocol: TCP
          - name: metrics
            containerPort: {{ include "stubbies.metricsPort" . }}
            protocol: TCP
          {{- if .Values.extraPodPorts }}
            {{ toYaml .Values.extraPodPorts | nindent 10 }}
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "stubbies.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "stubbies.fullname" . }}



================================================
FILE: charts/stubbies/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "stubbies.fullname" . -}}
{{- $svcPort := include "stubbies.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "stubbies.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/stubbies/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "stubbies.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "stubbies.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "stubbies.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "stubbies.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "stubbies.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/stubbies/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "stubbies.fullname" . }}-env
  labels:
    {{- include "stubbies.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/stubbies/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "stubbies.fullname" . }}
  labels:
    {{- include "stubbies.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "stubbies.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ include "stubbies.metricsPort" . }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "stubbies.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/stubbies/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "stubbies.serviceAccountName" . }}
  labels:
    {{- include "stubbies.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/stubbies/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "stubbies.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "stubbies.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "stubbies.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/teku/README.md
================================================

# teku

![Version: 1.1.4](https://img.shields.io/badge/Version-1.1.4-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

An open-source Ethereum 2.0 client, written in Java

**Homepage:** <https://consensys.net/knowledge-base/ethereum-2/teku/>

## Source Code

* <https://github.com/Consensys/teku/>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| checkpointSync | object | `{"enabled":false,"url":""}` | Checkpoint Sync |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customCommand | list | `[]` | Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplates instead. |
| defaultBeaconCommandTemplate | string | See `values.yaml` | Template used for the default beacon command |
| defaultValidatorCommandTemplate | string | See `values.yaml` | Template used for the default validator command |
| extraArgs | list | `[]` | Extra args for the teku container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `5051` | HTTP Port |
| image.pullPolicy | string | `"IfNotPresent"` | teku container pull policy |
| image.repository | string | `"consensys/teku"` | teku container image repository |
| image.tag | string | `"latest"` | teku container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initChownData.enabled | bool | `true` | Init container to set the correct permissions to access data directories |
| initChownData.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| initChownData.image.repository | string | `"busybox"` | Container repository |
| initChownData.image.tag | string | `"1.34.0"` | Container tag |
| initChownData.resources | object | `{}` | Resource requests and limits |
| initContainers | list | `[]` | Additional init containers |
| jwt | string | `"ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a"` | JWT secret used by client as a secret. Change this value. |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| metricsPort | int | `8008` | Metrics Port |
| mode | string | `"beacon"` | Mode can be 'beacon' or 'validator' |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| p2pNodePort.enabled | bool | `false` | Expose P2P port via NodePort |
| p2pNodePort.initContainer.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| p2pNodePort.initContainer.image.repository | string | `"lachlanevenson/k8s-kubectl"` | Container image to fetch nodeport information |
| p2pNodePort.initContainer.image.tag | string | `"v1.25.4"` | Container tag |
| p2pNodePort.port | int | `31000` | NodePort to be used |
| p2pPort | int | `9000` | P2P Port |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"20Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| rbac.clusterRules | list | See `values.yaml` | Required ClusterRole rules |
| rbac.create | bool | `true` | Specifies whether RBAC resources are to be created |
| rbac.rules | list | See `values.yaml` | Required ClusterRole rules |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `300` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |

# Examples

## Beacon node on the Holesky testnet connected to Holesky via Infura

```yaml
mode: "beacon"

extraArgs:
  - --network=holesky
  - --ee-endpoint=<EXECUTION-ENDPOINT>
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```

This would create 5 beacon nodes, exposed via Node Port services with the following configuration:
- Node 0: `30000`
- Node 1: `30001`
- Node 2: `30002`
- Node 3: `32000`
- Node 4: `30004`

## Validator node targeting a beacon node service

This example runs a validator on the holesky network that targets a pre-existing `teku-beacon`
service by injecting the all-accounts.keystore.json` file via a secret ENV var. You could use a similar
approach to fetch your secrets from some external secret management system (Hashicorp Vault, Azure key vault, etc.):

```yaml
replicas: 1

mode: validator

initContainers:
  - name: init-keystore
    image: bash:latest
    imagePullPolicy: IfNotPresent
    securityContext:
      runAsNonRoot: false
      runAsUser: 0
    command:
    - bash
    - -c
    - >
      apk add jq;
      export INDEX=$(echo $(hostname)| rev | cut -d'-' -f 1 | rev);
      mkdir -p /data/validator/keys;
      mkdir -p /data/validator/secrets;
      KEY_COUNT="NODE_${INDEX}_KEY_COUNT";
      for ((i = 0 ; i < "${!KEY_COUNT}" ; i++ ));
      do
        key="NODE_${INDEX}_KEY_${i}";
        PUBKEY=$(echo ${!key} | jq '.pubkey' -j);
        echo ${!key} > "/data/validator/keys/0x${PUBKEY}.json";
        secret="NODE_${INDEX}_SECRET_${i}";
        echo ${!secret} > "/data/validator/secrets/0x${PUBKEY}.txt";
        echo "Added 0x${PUBKEY}";
      done
    volumeMounts:
      - name: storage
        mountPath: "/data"
        readOnly:
    env:
      - name: NODE_0_KEY_COUNT
        value: "1"
      - name: NODE_0_SECRET_0
        valueFrom:
          secretKeyRef:
            # Name of the secret that will be generated for you. This is normally `${RELEASE-name}-env`
            # You might need to change this
            name: teku-env
            key: NODE_0_SECRET_0
      - name: NODE_0_KEY_0
        valueFrom:
          secretKeyRef:
            # See comment on the previous secretKeyRef
            name: teku-env
            key: NODE_0_KEY_0

extraArgs:
  - --validator-keys=/data/validator/keys:/data/validator/secrets
  - --beacon-node-api-endpoint=http://teku-beacon:5051
  - --network=auto

livenessProbe:
  tcpSocket: null
  httpGet:
    path: /metrics
    port: 8008

readinessProbe:
  tcpSocket: null
  httpGet:
    path: /metrics
    port: 8008

secretEnv:
  # Note: Never publish any of your production secrets online. These are just used for testing purposes.
  NODE_0_SECRET_0: Mrc085nWbjTc1mhAPt_Ukj4m_vui2iUQWr6TwNRq_4k=
  NODE_0_KEY_0: {"crypto":{"checksum":{"function":"sha256","message":"7bbdd8cda652d792dceae7477b911106296620c44a6c1d0356c6ff52daca2b5b","params":{}},"cipher":{"function":"aes-128-ctr","message":"689f5c97fad87665e2fe8acbc0aad91bdc85de7756ebdc496f1373bae01c02c8","params":{"iv":"7b8e1ed4480dee19cbb1528394ad2095"}},"kdf":{"function":"pbkdf2","message":"","params":{"c":262144,"dklen":32,"prf":"hmac-sha256","salt":"bb560dfbb56016e0630e4415b74d86ede9090c0545854ed7c0ad921047a39cef"}}},"path":"","pubkey":"8e48cbd28d25847a6b122a62179b6ac11ee7877a4c489799918308e6252b7f6601f969179ac7465e256c01815b71b6d1","uuid":"f13ece4f-d57e-4789-accc-ad50f0fef882","version":4}

```



================================================
FILE: charts/teku/Chart.yaml
================================================
apiVersion: v2
name: teku
description: An open-source Ethereum 2.0 client, written in Java
home: https://consensys.net/knowledge-base/ethereum-2/teku/
icon: https://launchpad.ethereum.org/static/media/pegasys-teku-circle.4147bb69.png
sources:
  - https://github.com/Consensys/teku/
type: application
version: 1.1.4
maintainers:
  - name: skylenet
    email: rafael@skyle.net
  - name: barnabasbusa
    email: busa.barnabas@gmail.com



================================================
FILE: charts/teku/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Beacon node on the Holesky testnet connected to Holesky via Infura

```yaml
mode: "beacon"

extraArgs:
  - --network=holesky
  - --ee-endpoint=<EXECUTION-ENDPOINT>
```

## Exposing the P2P service via NodePort

This will make your node accessible via the Internet using a service of type [NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport).
When using `p2pNodePort.enabled` the exposed IP address on your ENR record will be the "External IP" of the node where the pod is running.

**Limitations:** You can only run a single replica per chart deployment when using `p2pNodePort.enabled=true`.If you need N nodes, simply deploy the chart N times.

```yaml
replicas: 1

p2pNodePort:
  enabled: true
  port: 31000
```

This would create 5 beacon nodes, exposed via Node Port services with the following configuration:
- Node 0: `30000`
- Node 1: `30001`
- Node 2: `30002`
- Node 3: `32000`
- Node 4: `30004`


## Validator node targeting a beacon node service

This example runs a validator on the holesky network that targets a pre-existing `teku-beacon`
service by injecting the all-accounts.keystore.json` file via a secret ENV var. You could use a similar
approach to fetch your secrets from some external secret management system (Hashicorp Vault, Azure key vault, etc.):

```yaml
replicas: 1

mode: validator

initContainers:
  - name: init-keystore
    image: bash:latest
    imagePullPolicy: IfNotPresent
    securityContext:
      runAsNonRoot: false
      runAsUser: 0
    command:
    - bash
    - -c
    - >
      apk add jq;
      export INDEX=$(echo $(hostname)| rev | cut -d'-' -f 1 | rev);
      mkdir -p /data/validator/keys;
      mkdir -p /data/validator/secrets;
      KEY_COUNT="NODE_${INDEX}_KEY_COUNT";
      for ((i = 0 ; i < "${!KEY_COUNT}" ; i++ ));
      do
        key="NODE_${INDEX}_KEY_${i}";
        PUBKEY=$(echo ${!key} | jq '.pubkey' -j);
        echo ${!key} > "/data/validator/keys/0x${PUBKEY}.json";
        secret="NODE_${INDEX}_SECRET_${i}";
        echo ${!secret} > "/data/validator/secrets/0x${PUBKEY}.txt";
        echo "Added 0x${PUBKEY}";
      done
    volumeMounts:
      - name: storage
        mountPath: "/data"
        readOnly:
    env:
      - name: NODE_0_KEY_COUNT
        value: "1"
      - name: NODE_0_SECRET_0
        valueFrom:
          secretKeyRef:
            # Name of the secret that will be generated for you. This is normally `${RELEASE-name}-env`
            # You might need to change this
            name: teku-env
            key: NODE_0_SECRET_0
      - name: NODE_0_KEY_0
        valueFrom:
          secretKeyRef:
            # See comment on the previous secretKeyRef
            name: teku-env
            key: NODE_0_KEY_0

extraArgs:
  - --validator-keys=/data/validator/keys:/data/validator/secrets
  - --beacon-node-api-endpoint=http://teku-beacon:5051
  - --network=auto

livenessProbe:
  tcpSocket: null
  httpGet:
    path: /metrics
    port: 8008

readinessProbe:
  tcpSocket: null
  httpGet:
    path: /metrics
    port: 8008

secretEnv:
  # Note: Never publish any of your production secrets online. These are just used for testing purposes.
  NODE_0_SECRET_0: Mrc085nWbjTc1mhAPt_Ukj4m_vui2iUQWr6TwNRq_4k=
  NODE_0_KEY_0: {"crypto":{"checksum":{"function":"sha256","message":"7bbdd8cda652d792dceae7477b911106296620c44a6c1d0356c6ff52daca2b5b","params":{}},"cipher":{"function":"aes-128-ctr","message":"689f5c97fad87665e2fe8acbc0aad91bdc85de7756ebdc496f1373bae01c02c8","params":{"iv":"7b8e1ed4480dee19cbb1528394ad2095"}},"kdf":{"function":"pbkdf2","message":"","params":{"c":262144,"dklen":32,"prf":"hmac-sha256","salt":"bb560dfbb56016e0630e4415b74d86ede9090c0545854ed7c0ad921047a39cef"}}},"path":"","pubkey":"8e48cbd28d25847a6b122a62179b6ac11ee7877a4c489799918308e6252b7f6601f969179ac7465e256c01815b71b6d1","uuid":"f13ece4f-d57e-4789-accc-ad50f0fef882","version":4}

```



================================================
FILE: charts/teku/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- teku container image repository
  repository: consensys/teku
  # -- teku container image tag
  tag: latest
  # -- teku container pull policy
  pullPolicy: IfNotPresent

# -- Mode can be 'beacon' or 'validator'
mode: "beacon"

# -- Extra args for the teku container
extraArgs: []
  ## Example for beacon mode
  #- --network=holesky
  #- --ee-endpoint=http://your-eth1-node:8051
  ##
  ## Example for validator mode
  #- --network=holesky
  #- --beacon-node-api-endpoint=http://teku-beacon:5052

# -- JWT secret used by client as a secret. Change this value.
jwt: ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a

# -- Checkpoint Sync
checkpointSync:
  enabled: false
  url: ""

# -- Template used for the default beacon command
# @default -- See `values.yaml`
defaultBeaconCommandTemplate: |
  - sh
  - -ac
  - >
  {{- if .Values.p2pNodePort.enabled }}
    . /env/init-nodeport;
  {{- end }}
    exec /opt/teku/bin/teku
    --log-destination=CONSOLE
    --data-path=/data
    --p2p-enabled=true
    --p2p-port={{ include "teku.p2pPort" . }}
  {{- if .Values.p2pNodePort.enabled }}
    {{- if not (contains "--p2p-advertised-ip=" (.Values.extraArgs | join ",")) }}
    --p2p-advertised-ip=$EXTERNAL_IP
    {{- end }}
    {{- if not (contains "--p2p-advertised-port=" (.Values.extraArgs | join ",")) }}
    --p2p-advertised-port=$EXTERNAL_PORT
    {{- end }}
  {{- else }}
    {{- if not (contains "--p2p-advertised-ip=" (.Values.extraArgs | join ",")) }}
    --p2p-advertised-ip=$(POD_IP)
    {{- end }}
    {{- if not (contains "--p2p-advertised-port=" (.Values.extraArgs | join ",")) }}
    --p2p-advertised-port={{ include "teku.p2pPort" . }}
    {{- end }}
  {{- end }}
    --rest-api-enabled=true
    --rest-api-interface=0.0.0.0
    --rest-api-host-allowlist=*
    --rest-api-port={{ .Values.httpPort }}
    --ee-jwt-secret-file=/data/jwt.hex
    --metrics-enabled=true
    --metrics-interface=0.0.0.0
    --metrics-host-allowlist=*
    --metrics-port={{ .Values.metricsPort }}
  {{- if .Values.checkpointSync.enabled }}
    --checkpoint-sync-url={{ tpl .Values.checkpointSync.url $ }}
  {{- else }}
    --ignore-weak-subjectivity-period-enabled
  {{- end }}
  {{- range .Values.extraArgs }}
    {{ tpl . $  }}
  {{- end }}

# -- Template used for the default validator command
# @default -- See `values.yaml`
defaultValidatorCommandTemplate: |
  - sh
  - -ac
  - >
    exec /opt/teku/bin/teku validator-client
    --log-destination=CONSOLE
    --data-path=/data
    --metrics-enabled
    --metrics-interface=0.0.0.0
    --metrics-host-allowlist=*
    --metrics-port={{ .Values.metricsPort }}
  {{- range .Values.extraArgs }}
    {{ tpl . $ }}
  {{- end }}

# -- Legacy way of overwriting the default command. You may prefer to change defaultCommandTemplates instead.
customCommand: []

# When p2pNodePort is enabled, your P2P port will be exposed via service type NodePort.
# This will generate a service for each replica, with a port binding via NodePort.
# This is useful if you want to expose and announce your node to the Internet.
p2pNodePort:
  # -- Expose P2P port via NodePort
  enabled: false
  # -- NodePort to be used
  port: 31000
  initContainer:
    image:
      # -- Container image to fetch nodeport information
      repository: lachlanevenson/k8s-kubectl
      # -- Container tag
      tag: v1.25.4
      # -- Container pull policy
      pullPolicy: IfNotPresent

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http-api
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http-api
  initialDelaySeconds: 10
  periodSeconds: 10

# -- P2P Port
p2pPort: 9000

# -- HTTP Port
httpPort: 5051

# -- Metrics Port
metricsPort: 8008

# -- Node selector for pods
nodeSelector: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 20Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

rbac:
  # -- Specifies whether RBAC resources are to be created
  create: true
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  clusterRules:
     # Required to obtain the nodes external IP
    - apiGroups: [""]
      resources:
      - "nodes"
      verbs:
      - "get"
      - "list"
      - "watch"
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  rules:
    # Required to get information about the services nodePort.
    - apiGroups: [""]
      resources:
      - "services"
      verbs:
      - "get"
      - "list"
      - "watch"

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 300

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []
#- name: JAVA_OPTS
#  value: "-Xmx6000m -Xms6000m"

# -- Additional env variables injected via a created secret
secretEnv: {}
# MY_PASSWORD: supersecret

initChownData:
  # -- Init container to set the correct permissions to access data directories
  enabled: true
  image:
    # -- Container repository
    repository: busybox
    # -- Container tag
    tag: "1.34.0"
    # -- Container pull policy
    pullPolicy: IfNotPresent
  # -- Resource requests and limits
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/teku/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/teku/ci/default-values.yaml
================================================
# Leave empty so that CT tests with default values
extraArgs:
  - --ee-endpoint=http://localhost:8551



================================================
FILE: charts/teku/ci/validator-values.yaml
================================================
replicas: 1

mode: validator

initContainers:
  - name: init-keystore
    image: bash:latest
    imagePullPolicy: IfNotPresent
    securityContext:
      runAsNonRoot: false
      runAsUser: 0
    command:
    - bash
    - -c
    - >
      apk add jq;
      export INDEX=$(echo $(hostname)| rev | cut -d'-' -f 1 | rev);
      mkdir -p /data/validator/keys;
      mkdir -p /data/validator/secrets;
      KEY_COUNT="NODE_${INDEX}_KEY_COUNT";
      for ((i = 0 ; i < "${!KEY_COUNT}" ; i++ ));
      do
        echo "====";
        key="NODE_${INDEX}_KEY_${i}";
        PUBKEY=$(echo ${!key} | jq '.pubkey' -j);
        echo ${!key} > "/data/validator/keys/0x${PUBKEY}.json";
        secret="NODE_${INDEX}_SECRET_${i}";
        echo ${!secret} > "/data/validator/secrets/0x${PUBKEY}.txt";
        echo "Added 0x${PUBKEY}";
      done
    volumeMounts:
      - name: storage
        mountPath: "/data"
        readOnly:
    env:
      - name: NODE_0_KEY_COUNT
        value: "1"
      - name: NODE_0_SECRET_0
        value: Mrc085nWbjTc1mhAPt_Ukj4m_vui2iUQWr6TwNRq_4k=
      - name: NODE_0_KEY_0
        value: >
          {"crypto":{"checksum":{"function":"sha256","message":"7bbdd8cda652d792dceae7477b911106296620c44a6c1d0356c6ff52daca2b5b","params":{}},"cipher":{"function":"aes-128-ctr","message":"689f5c97fad87665e2fe8acbc0aad91bdc85de7756ebdc496f1373bae01c02c8","params":{"iv":"7b8e1ed4480dee19cbb1528394ad2095"}},"kdf":{"function":"pbkdf2","message":"","params":{"c":262144,"dklen":32,"prf":"hmac-sha256","salt":"bb560dfbb56016e0630e4415b74d86ede9090c0545854ed7c0ad921047a39cef"}}},"path":"","pubkey":"8e48cbd28d25847a6b122a62179b6ac11ee7877a4c489799918308e6252b7f6601f969179ac7465e256c01815b71b6d1","uuid":"f13ece4f-d57e-4789-accc-ad50f0fef882","version":4}


extraArgs:
  - --validator-keys=/data/validator/keys:/data/validator/secrets
  - --beacon-node-api-endpoint=http://teku-beacon:5051
  - --validators-proposer-default-fee-recipient=0x0000000000000000000000000000000000000000
  # If we use --network=auto, it will try to get the network info from the beacon node
  # During the CI test, there's not beacon node running... thus it gets stuck on retrying
  # and doesn't even start the metric server which is used for the liveness/readiness probes
  - --network=holesky

livenessProbe:
  tcpSocket: null
  httpGet:
    path: /metrics
    port: 8008

readinessProbe:
  tcpSocket: null
  httpGet:
    path: /metrics
    port: 8008



================================================
FILE: charts/teku/templates/_cmd.tpl
================================================
{{/*
# Beacon command
*/}}
{{- define "teku.beaconCommand" -}}
{{- tpl .Values.defaultBeaconCommandTemplate . }}
{{- end }}


{{/*
# Validator command
*/}}
{{- define "teku.validatorCommand" -}}
{{- tpl .Values.defaultValidatorCommandTemplate . }}
{{- end }}



================================================
FILE: charts/teku/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "teku.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "teku.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "teku.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "teku.labels" -}}
helm.sh/chart: {{ include "teku.chart" . }}
{{ include "teku.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "teku.selectorLabels" -}}
app.kubernetes.io/name: {{ include "teku.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "teku.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "teku.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{/*
Create the name of the cluster role.
It needs to be namespace prefixed to avoid naming conflicts when using the same deployment name across namespaces.
*/}}
{{- define "teku.clusterRoleName" -}}
{{ .Release.Namespace }}-{{ include "teku.fullname" . }}
{{- end }}

{{- define "teku.p2pPort" -}}
{{- if .Values.p2pNodePort.enabled }}
{{- print .Values.p2pNodePort.port }}
{{- else }}
{{- print .Values.p2pPort }}
{{- end }}
{{- end -}}

{{- define "teku.replicas" -}}
{{- if and (.Values.p2pNodePort.enabled) (gt (int .Values.replicas)  1) }}
{{- print 1 }}
{{ else }}
{{- print .Values.replicas }}
{{- end }}
{{- end -}}



================================================
FILE: charts/teku/templates/clusterrole.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "teku.clusterRoleName" . }}
  labels:
    {{- include "teku.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.clusterRules | nindent 0 }}
{{- end }}



================================================
FILE: charts/teku/templates/clusterrolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "teku.clusterRoleName" . }}
  labels:
    {{- include "teku.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "teku.clusterRoleName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "teku.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/teku/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "teku.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "teku.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/teku/templates/NOTES.txt
================================================



================================================
FILE: charts/teku/templates/poddisruptionbudget.yaml
================================================
{{- if .Values.podDisruptionBudget }}
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ include "teku.fullname" . }}
  labels:
    {{- include "teku.labels" . | nindent 4 }}
spec:
{{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
{{- end }}
{{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
{{- end }}
  selector:
    matchLabels:
      {{- include "teku.selectorLabels" . | nindent 6 }}
{{- end }}



================================================
FILE: charts/teku/templates/role.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "teku.serviceAccountName" . }}
  labels:
    {{- include "teku.labels" . | nindent 4 }}
rules:
{{- toYaml .Values.rbac.rules | nindent 0 }}
{{- end }}



================================================
FILE: charts/teku/templates/rolebinding.yaml
================================================
{{- if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "teku.serviceAccountName" . }}
  labels:
    {{- include "teku.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "teku.serviceAccountName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "teku.serviceAccountName" . }}
{{- end }}



================================================
FILE: charts/teku/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "teku.fullname" . }}-env
  labels:
    {{- include "teku.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "teku.fullname" . }}-jwt
type: Opaque
data:
  jwt.hex: {{ .Values.jwt | b64enc }}


================================================
FILE: charts/teku/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "teku.fullname" . }}-headless
  labels:
    {{- include "teku.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
  {{- if eq .Values.mode "beacon" }}
    - port: {{ include "teku.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "teku.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
  {{- end }}
  {{- if or (eq .Values.mode "beacon") (eq .Values.mode "validator") }}
    - port: {{ .Values.httpPort }}
      targetPort: http-api
      protocol: TCP
      name: http-api
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "teku.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/teku/templates/service.p2p.nodeport.yaml
================================================
{{- if .Values.p2pNodePort.enabled -}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "teku.fullname" $ }}-p2p-0
  labels:
    {{- include "teku.labels" $ | nindent 4 }}
    pod: {{ include "teku.fullname" $ }}-0
    type: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p-tcp
      port: {{ include "teku.p2pPort" $ }}
      protocol: TCP
      targetPort: p2p-tcp
      nodePort: {{ include "teku.p2pPort" $ }}
    - name: p2p-udp
      port: {{ include "teku.p2pPort" $ }}
      protocol: UDP
      targetPort: p2p-udp
      nodePort: {{ include "teku.p2pPort" $ }}
  selector:
    {{- include "teku.selectorLabels" $ | nindent 4 }}
    statefulset.kubernetes.io/pod-name: "{{ include "teku.fullname" $ }}-0"
{{- end }}



================================================
FILE: charts/teku/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "teku.fullname" . }}
  labels:
    {{- include "teku.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
  {{- if eq .Values.mode "beacon" }}
    - port: {{ include "teku.p2pPort" . }}
      targetPort: p2p-tcp
      protocol: TCP
      name: p2p-tcp
    - port: {{ include "teku.p2pPort" . }}
      targetPort: p2p-udp
      protocol: UDP
      name: p2p-udp
  {{- end }}
  {{- if or (eq .Values.mode "beacon") (eq .Values.mode "validator") }}
    - port: {{ .Values.httpPort }}
      targetPort: http-api
      protocol: TCP
      name: http-api
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "teku.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/teku/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "teku.serviceAccountName" . }}
  labels:
    {{- include "teku.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/teku/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
{{- if or (eq .Values.mode "beacon") (eq .Values.mode "validator") }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "teku.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "teku.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "teku.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}
{{- end }}



================================================
FILE: charts/teku/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "teku.fullname" . }}
  labels:
    {{- include "teku.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ include "teku.replicas" . }}
  selector:
    matchLabels:
      {{- include "teku.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "teku.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "teku.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "teku.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- tpl (toYaml .Values.initContainers | nindent 8) $ }}
      {{- end }}
      {{- if .Values.p2pNodePort.enabled }}
        - name: init-nodeport
          image: "{{ .Values.p2pNodePort.initContainer.image.repository }}:{{ .Values.p2pNodePort.initContainer.image.tag }}"
          imagePullPolicy: {{.Values.p2pNodePort.initContainer.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - sh
            - -c
            - >
              export EXTERNAL_PORT=$(kubectl get services -l "pod in (${POD_NAME}), type in (p2p)" -o jsonpath='{.items[0].spec.ports[0].nodePort}');
              export EXTERNAL_IP=$(kubectl get nodes "${NODE_NAME}" -o jsonpath='{.status.addresses[?(@.type=="ExternalIP")].address}');
              echo "EXTERNAL_PORT=$EXTERNAL_PORT" >  /env/init-nodeport;
              echo "EXTERNAL_IP=$EXTERNAL_IP"     >> /env/init-nodeport;
              cat /env/init-nodeport;
          volumeMounts:
            - name: env-nodeport
              mountPath: /env
      {{- end }}
      {{- if .Values.initChownData.enabled }}
        - name: init-chown-data
          image: "{{ .Values.initChownData.image.repository }}:{{ .Values.initChownData.image.tag }}"
          imagePullPolicy: {{ .Values.initChownData.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }}", "/data"]
          resources:
      {{ toYaml .Values.initChownData.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: "/data"
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else if eq .Values.mode "beacon" }}
            {{- include "teku.beaconCommand" . | nindent 12 }}
          {{- else if eq .Values.mode "validator" }}
            {{- include "teku.validatorCommand" . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
            {{- if .Values.p2pNodePort.enabled }}
            - name: env-nodeport
              mountPath: /env
            {{- end }}
            - name: storage
              mountPath: "/data"
            - name: jwt
              mountPath: "/data/jwt.hex"
              subPath: jwt.hex
              readOnly: true
          ports:
          {{- if eq .Values.mode "beacon" }}
            - name: p2p-tcp
              containerPort: {{ include "teku.p2pPort" . }}
              protocol: TCP
            - name: p2p-udp
              containerPort: {{ include "teku.p2pPort" . }}
              protocol: UDP
          {{- end }}
          {{- if or (eq .Values.mode "beacon") (eq .Values.mode "validator") }}
            - name: http-api
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
          {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "teku.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ tpl (toYaml .Values.extraContainers | nindent 8) $ }}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: jwt
          secret:
            secretName: {{ include "teku.fullname" . }}-jwt
      {{- if .Values.p2pNodePort.enabled }}
        - name: env-nodeport
          emptyDir: {}
      {{- end }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/teku/templates/tests/test-connection.yaml
================================================

apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "teku.fullname" . }}-test-connection"
  labels:
    {{- include "teku.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
    {{- if eq .Values.mode "beacon" }}
      args: ['{{ include "teku.fullname" . }}:{{ .Values.httpPort }}/eth/v1/node/version']
    {{- else }}
      args: ['{{ include "teku.fullname" . }}:{{ .Values.metricsPort }}/metrics']
    {{- end }}
  restartPolicy: Never



================================================
FILE: charts/testnet-faucet/README.md
================================================

# testnet-faucet

![Version: 0.1.3](https://img.shields.io/badge/Version-0.1.3-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Ethereum faucet used for testnets

**Homepage:** <https://github.com/parithosh/testnet-faucet>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| config.server | object | See `values.yaml` | Server configuration |
| config.webui | object | See `values.yaml` | Web UI configuration |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the testnet-faucet container |
| customCommand | list | `[]` | Command replacement for the testnet-faucet container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | testnet-faucet container pull policy |
| image.repository | string | `"parithoshj/testnet-faucet"` | testnet-faucet container image repository |
| image.tag | string | `"9859e0d"` | testnet-faucet container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |

# Examples

## Configuring the faucet

To create the recaptcha keys you can go to http://www.google.com/recaptcha/admin

```yaml
config:
  # -- Web UI configuration
  webui:
    title: "My Testnet faucet"
    buttonText: "Request 5 ETH"
    logoUrl: "https://launchpad.ethereum.org/static/media/eth2-leslie-rhino.243747b9.png"
    footer: "My custom footer"
    recaptchaKey: "<Insert Recaptcha Site Key >"
  # -- Server configuration
  server:
    environment: live
    debug: true
    Captcha:
      secret: "<Insert Recaptcha Secret Key>"
    Ethereum:
      chainId: 56665
      milliEtherToTransfer: 5000
      gasLimit: "30000"
      live:
        rpc: "http://geth-server:8545"
        account: "<Insert faucet address : 0x....>"
        privateKey: "<Insert private key in hex format>"
```



================================================
FILE: charts/testnet-faucet/Chart.yaml
================================================
apiVersion: v2
name: testnet-faucet
description: Ethereum faucet used for testnets
home: https://github.com/parithosh/testnet-faucet
type: application
version: 0.1.3
maintainers:
  - name: skylenet
    email: rafael@skyle.net



================================================
FILE: charts/testnet-faucet/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Configuring the faucet

To create the recaptcha keys you can go to http://www.google.com/recaptcha/admin

```yaml
config:
  # -- Web UI configuration
  webui:
    title: "My Testnet faucet"
    buttonText: "Request 5 ETH"
    logoUrl: "https://launchpad.ethereum.org/static/media/eth2-leslie-rhino.243747b9.png"
    footer: "My custom footer"
    recaptchaKey: "<Insert Recaptcha Site Key >"
  # -- Server configuration
  server:
    environment: live
    debug: true
    Captcha:
      secret: "<Insert Recaptcha Secret Key>"
    Ethereum:
      chainId: 56665
      milliEtherToTransfer: 5000
      gasLimit: "30000"
      live:
        rpc: "http://geth-server:8545"
        account: "<Insert faucet address : 0x....>"
        privateKey: "<Insert private key in hex format>"
```



================================================
FILE: charts/testnet-faucet/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- testnet-faucet container image repository
  repository: parithoshj/testnet-faucet
  # -- testnet-faucet container image tag
  tag: 9859e0d
  # -- testnet-faucet container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}


config:
  # -- Web UI configuration
  # @default -- See `values.yaml`
  webui:
    title: "Testnet faucet"
    buttonText: "Request ETH"
    logoUrl: "https://launchpad.ethereum.org/static/media/eth2-leslie-rhino.243747b9.png"
    footer: "Forked from <b>Slock.it</b> by Pari - Send feedback to https://github.com/parithosh/testnet-faucet"
    recaptchaKey: "" # Recaptcha SITE KEY
  # -- Server configuration
  # @default -- See `values.yaml`
  server:
    environment: live
    debug: false
    Captcha:
      secret: "" # Recaptcha SECRET KEY
    Ethereum:
      chainId: 5
      milliEtherToTransfer: 50
      gasLimit: "30000"
      live:
        rpc: "http://geth:8545"
        account: "0x00000000000"
        privateKey: "" # hex format


ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Custom args for the testnet-faucet container
customArgs: []

# -- Command replacement for the testnet-faucet container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []



================================================
FILE: charts/testnet-faucet/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/testnet-faucet/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "testnet-faucet.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "testnet-faucet.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "testnet-faucet.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "testnet-faucet.labels" -}}
helm.sh/chart: {{ include "testnet-faucet.chart" . }}
{{ include "testnet-faucet.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "testnet-faucet.selectorLabels" -}}
app.kubernetes.io/name: {{ include "testnet-faucet.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "testnet-faucet.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "testnet-faucet.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "testnet-faucet.httpPort" -}}
{{- printf "5001" -}}
{{- end -}}



================================================
FILE: charts/testnet-faucet/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "testnet-faucet.fullname" . }}
  labels:
    {{- include "testnet-faucet.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "testnet-faucet.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "testnet-faucet.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "testnet-faucet.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if gt (len .Values.customCommand) 0 }}
          command:
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            - name: config-server
              mountPath: "/app/config.json"
              subPath: "config.json"
              readOnly: true
            - name: config-webui
              mountPath: "/app/public/config.json"
              subPath: "config.json"
              readOnly: true
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ include "testnet-faucet.httpPort" . }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "testnet-faucet.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      - name: config-server
        secret:
          secretName: {{ include "testnet-faucet.fullname" . }}-config
          items:
          - key: server
            path: config.json
      - name: config-webui
        secret:
          secretName: {{ include "testnet-faucet.fullname" . }}-config
          items:
          - key: webui
            path: config.json
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}



================================================
FILE: charts/testnet-faucet/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "testnet-faucet.fullname" . -}}
{{- $svcPort := include "testnet-faucet.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "testnet-faucet.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/testnet-faucet/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "testnet-faucet.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "testnet-faucet.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "testnet-faucet.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "testnet-faucet.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "testnet-faucet.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/testnet-faucet/templates/pdb.yaml
================================================
{{- if or .Values.podDisruptionBudget.minAvailable .Values.podDisruptionBudget.maxUnavailable -}}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "testnet-faucet.fullname" . }}
  labels:
    {{- include "testnet-faucet.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "testnet-faucet.selectorLabels" . | nindent 6 }}
  {{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
  {{- end  }}
  {{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
  {{- end  }}
{{- end -}}


================================================
FILE: charts/testnet-faucet/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "testnet-faucet.fullname" . }}-env
  labels:
    {{- include "testnet-faucet.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}

---

apiVersion: v1
kind: Secret
metadata:
  name: {{ include "testnet-faucet.fullname" . }}-config
  labels:
    {{- include "testnet-faucet.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.config }}
  {{ $key }}: {{ $value | toJson | b64enc }}
{{- end }}



================================================
FILE: charts/testnet-faucet/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "testnet-faucet.fullname" . }}
  labels:
    {{- include "testnet-faucet.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "testnet-faucet.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "testnet-faucet.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/testnet-faucet/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "testnet-faucet.serviceAccountName" . }}
  labels:
    {{- include "testnet-faucet.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/testnet-faucet/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "testnet-faucet.fullname" . }}-test-connection"
  labels:
    {{- include "testnet-faucet.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - '{{ include "testnet-faucet.fullname" . }}:{{ include "testnet-faucet.httpPort" . }}/'
  restartPolicy: Never



================================================
FILE: charts/testnet-homepage/README.md
================================================

# testnet-homepage

![Version: 0.2.3](https://img.shields.io/badge/Version-0.2.3-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Ethereum testnet homepage that is used to display testnet relevant information

**Homepage:** <https://github.com/skylenet/ethereum-testnet-homepage>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| config | object | See `values.yaml` | Configuration |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the testnet-homepage container |
| customCommand | list | `[]` | Command replacement for the testnet-homepage container |
| customMarkdown | string | `"# Hello world\nThis is a paragraph"` |  |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | testnet-homepage container pull policy |
| image.repository | string | `"skylenet/ethereum-testnet-homepage"` | testnet-homepage container image repository |
| image.tag | string | `"latest"` | testnet-homepage container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| terminationGracePeriodSeconds | int | `30` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |

# Examples

## Configuring the homepage

```yaml
config:
  title: Ethereum Testnet
  params:
    ethereum:
      ethstatsUrl: https://ethstats.somewhere.localhost
      faucetUrl: https://faucet.somewhere.localhost
      rpcUrl: https://rpc.somewhere.localhost
      explorerUrl: https://explorer.somewhere.localhost
      beaconexplorerUrl: https://beaconchain.somewhere.localhost
      chainName: "Testnet0"
      chainId: "234233523"

customMarkdown: |-
  # Hello world
  This is a paragraph
```



================================================
FILE: charts/testnet-homepage/Chart.yaml
================================================
apiVersion: v2
name: testnet-homepage
description: Ethereum testnet homepage that is used to display testnet relevant information
home: https://github.com/skylenet/ethereum-testnet-homepage
type: application
version: 0.2.3
maintainers:
  - name: skylenet
    email: rafael@skyle.net



================================================
FILE: charts/testnet-homepage/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Configuring the homepage

```yaml
config:
  title: Ethereum Testnet
  params:
    ethereum:
      ethstatsUrl: https://ethstats.somewhere.localhost
      faucetUrl: https://faucet.somewhere.localhost
      rpcUrl: https://rpc.somewhere.localhost
      explorerUrl: https://explorer.somewhere.localhost
      beaconexplorerUrl: https://beaconchain.somewhere.localhost
      chainName: "Testnet0"
      chainId: "234233523"

customMarkdown: |-
  # Hello world
  This is a paragraph
```



================================================
FILE: charts/testnet-homepage/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

image:
  # -- testnet-homepage container image repository
  repository: skylenet/ethereum-testnet-homepage
  # -- testnet-homepage container image tag
  tag: latest
  # -- testnet-homepage container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Configuration
# @default -- See `values.yaml`
config:
  baseURL: http://example.org/
  languageCode: en-us
  title: Ethereum Testnet
  theme: PaperMod
  markup:
    highlight:
      codeFences: true
      guessSyntax: true
      lineNos: false
      style: monokai
  params:
    disableThemeToggle: true
    defaultTheme: dark
    ethereum:
      ethstatsUrl: https://ethstats.testnet0.themerge.dev
      faucetUrl: https://faucet.testnet0.themerge.dev
      rpcUrl: https://rpc.testnet0.themerge.dev
      explorerUrl: https://explorer.testnet0.themerge.dev
      beaconexplorerUrl: https://beaconchain.testnet0.themerge.dev
      chainName: "Testnet0"
      chainId: "1337332"

    links:
    - name: "Beaconchain explorer"
      dataLookup: beaconexplorerUrl
    - name: "Transaction explorer"
      dataLookup: explorerUrl
    - name: "Ethstats"
      dataLookup: ethstatsUrl
    - name: "Consensus monitor"
      dataLookup: consensusmonitorUrl
    - name: "Faucet"
      dataLookup: faucetUrl
    - name: "JSON RPC"
      dataLookup: rpcUrl

  menu:
    main:
      - identifier: ethereum-website
        name: ethereum.org
        url: https://ethereum.org
        weight: 30
  disableKinds: ["taxonomy", "taxonomyTerm"]
  copyright: "This page is "

customMarkdown: |-
  # Hello world
  This is a paragraph

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Custom args for the testnet-homepage container
customArgs: []

# -- Command replacement for the testnet-homepage container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 2
  periodSeconds: 5

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 0
  runAsGroup: 0
  runAsNonRoot: false
  runAsUser: 0

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []



================================================
FILE: charts/testnet-homepage/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/testnet-homepage/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "testnet-homepage.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "testnet-homepage.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "testnet-homepage.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "testnet-homepage.labels" -}}
helm.sh/chart: {{ include "testnet-homepage.chart" . }}
{{ include "testnet-homepage.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "testnet-homepage.selectorLabels" -}}
app.kubernetes.io/name: {{ include "testnet-homepage.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "testnet-homepage.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "testnet-homepage.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "testnet-homepage.httpPort" -}}
{{- printf "1313" -}}
{{- end -}}



================================================
FILE: charts/testnet-homepage/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "testnet-homepage.fullname" . }}
  labels:
    {{- include "testnet-homepage.labels" . | nindent 4 }}
data:
  config.yaml: |
    {{- .Values.config | toYaml | nindent 4}}
  custom.md: |
    {{ .Values.customMarkdown | nindent 4 }}



================================================
FILE: charts/testnet-homepage/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "testnet-homepage.fullname" . }}
  labels:
    {{- include "testnet-homepage.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "testnet-homepage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "testnet-homepage.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "testnet-homepage.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if gt (len .Values.customCommand) 0 }}
          command:
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- end }}
          {{- if gt (len .Values.customArgs) 0 }}
          args:
            {{- toYaml .Values.customArgs | nindent 12}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: "/app/config.yaml"
              subPath: "config.yaml"
              readOnly: true
            - name: markdown
              mountPath: "/app/layouts/partials/custom.md"
              subPath: "custom.md"
              readOnly: true
            {{- if .Values.extraVolumeMounts }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12}}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ include "testnet-homepage.httpPort" . }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- range $key, $value := .Values.secretEnv }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "testnet-homepage.fullname" $ }}-env
                  key: {{ $key }}
          {{- end }}
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      - name: config
        configMap:
          name: {{ include "testnet-homepage.fullname" . }}
          items:
          - key: config.yaml
            path: config.yaml
      - name: markdown
        configMap:
          name: {{ include "testnet-homepage.fullname" . }}
          items:
          - key: custom.md
            path: custom.md
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}



================================================
FILE: charts/testnet-homepage/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "testnet-homepage.fullname" . -}}
{{- $svcPort := include "testnet-homepage.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "testnet-homepage.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/testnet-homepage/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "testnet-homepage.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "testnet-homepage.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "testnet-homepage.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "testnet-homepage.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "testnet-homepage.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/testnet-homepage/templates/pdb.yaml
================================================
{{- if or .Values.podDisruptionBudget.minAvailable .Values.podDisruptionBudget.maxUnavailable -}}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "testnet-homepage.fullname" . }}
  labels:
    {{- include "testnet-homepage.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "testnet-homepage.selectorLabels" . | nindent 6 }}
  {{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
  {{- end  }}
  {{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
  {{- end  }}
{{- end -}}


================================================
FILE: charts/testnet-homepage/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "testnet-homepage.fullname" . }}-env
  labels:
    {{- include "testnet-homepage.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/testnet-homepage/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "testnet-homepage.fullname" . }}
  labels:
    {{- include "testnet-homepage.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "testnet-homepage.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "testnet-homepage.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/testnet-homepage/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "testnet-homepage.serviceAccountName" . }}
  labels:
    {{- include "testnet-homepage.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/testnet-homepage/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "testnet-homepage.fullname" . }}-test-connection"
  labels:
    {{- include "testnet-homepage.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: curl
      image: curlimages/curl
      command: ['curl']
      args:
       - '{{ include "testnet-homepage.fullname" . }}:{{ include "testnet-homepage.httpPort" . }}/'
  restartPolicy: Never



================================================
FILE: charts/tracoor-agent/README.md
================================================

# tracoor-agent

![Version: 0.0.1](https://img.shields.io/badge/Version-0.0.1-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Ethereum debug data capture and indexer

**Homepage:** <https://github.com/ethpandaops/tracoor>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| config.ethereum.beacon.nodeAddress | string | `"http://localhost:5052"` |  |
| config.ethereum.execution.nodeAddress | string | `"http://localhost:8545"` |  |
| config.indexer.address | string | `"localhost:8081"` |  |
| config.logging | string | `"info"` |  |
| config.metricsAddr | string | `":9092"` |  |
| config.name | string | `"tracoor-agent"` |  |
| config.pprofAddr | string | `":6065"` |  |
| config.store.config.bucket_name | string | `"tracoor"` |  |
| config.store.config.endpoint | string | `"http://localhost:9000"` |  |
| config.store.config.region | string | `"us-east-1"` |  |
| config.store.type | string | `"s3"` |  |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the tracoor container |
| customCommand | list | `[]` | Command replacement for the tracoor container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | tracoor container pull policy |
| image.repository | string | `"ethpandaops/tracoor"` | tracoor container image repository |
| image.tag | string | `"latest"` | tracoor container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| initContainers | list | `[]` | Additional init containers |
| lifecycle | object | See `values.yaml` | Lifecycle hooks |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `90` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/tracoor-agent/Chart.yaml
================================================
apiVersion: v2
name: tracoor-agent
description: Ethereum debug data capture and indexer
home: https://github.com/ethpandaops/tracoor
type: application
version: 0.0.1
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org
  - name: savid
    email: andrew.davis@ethereum.org



================================================
FILE: charts/tracoor-agent/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/tracoor-agent/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- tracoor container image repository
  repository: ethpandaops/tracoor
  # -- tracoor container image tag
  tag: latest
  # -- tracoor container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

config:
  logging: "info"
  metricsAddr: ":9092"
  pprofAddr: ":6065"

  name: tracoor-agent

  ethereum:
    beacon:
      nodeAddress: http://localhost:5052
    execution:
      nodeAddress: http://localhost:8545

  indexer:
    address: localhost:8081 # GRPC port of tracoor-server

  store:
    type: s3
    config:
      region: "us-east-1"
      endpoint: http://localhost:9000
      bucket_name: tracoor
      # access_key: minioadmin
      # access_secret: minioadmin

# -- Custom args for the tracoor container
customArgs: []

# -- Command replacement for the tracoor container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Lifecycle hooks
# @default -- See `values.yaml`
lifecycle:
  preStop:
    exec:
      command:
      - /bin/sleep
      - "30"

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 90

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/tracoor-agent/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/tracoor-agent/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "tracoor-agent.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "tracoor-agent.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "tracoor-agent.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "tracoor-agent.labels" -}}
helm.sh/chart: {{ include "tracoor-agent.chart" . }}
{{ include "tracoor-agent.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "tracoor-agent.selectorLabels" -}}
app.kubernetes.io/name: {{ include "tracoor-agent.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "tracoor-agent.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "tracoor-agent.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "tracoor-agent.metricsPort" -}}
{{ (split ":" .Values.config.metricsAddr)._1 | default ":9090" }}
{{- end -}}

{{- define "tracoor-agent.pprofPort" -}}
{{- if .Values.config.pprofAddr -}}
{{ (split ":" .Values.config.pprofAddr)._1 | default "6060" }}
{{- end -}}
{{- end -}}



================================================
FILE: charts/tracoor-agent/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "tracoor-agent.fullname" . }}
  labels:
    {{- include "tracoor-agent.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{ tpl (toYaml .Values.config | nindent 4) $ }}



================================================
FILE: charts/tracoor-agent/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tracoor-agent.fullname" . }}
  labels:
    {{- include "tracoor-agent.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "tracoor-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "tracoor-agent.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "tracoor-agent.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/tracoor"
          - "agent"
          - --config=/config.yaml
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 10}}
          {{- end }}
        ports:
          - name: metrics
            containerPort: {{ include "tracoor-agent.metricsPort" . }}
            protocol: TCP
          {{- if (include "tracoor-agent.pprofPort" .) }}
          - name: pprof
            containerPort: {{ include "tracoor-agent.pprofPort" . }}
            protocol: TCP
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        lifecycle:
          {{- toYaml .Values.lifecycle | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "tracoor-agent.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "tracoor-agent.fullname" . }}



================================================
FILE: charts/tracoor-agent/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "tracoor-agent.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "tracoor-agent.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "tracoor-agent.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "tracoor-agent.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "tracoor-agent.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/tracoor-agent/templates/pdb.yaml
================================================
{{- if or .Values.podDisruptionBudget.minAvailable .Values.podDisruptionBudget.maxUnavailable -}}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "tracoor-agent.fullname" . }}
  labels:
    {{- include "tracoor-agent.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "tracoor-agent.selectorLabels" . | nindent 6 }}
  {{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
  {{- end  }}
  {{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
  {{- end  }}
{{- end -}}


================================================
FILE: charts/tracoor-agent/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "tracoor-agent.fullname" . }}-env
  labels:
    {{- include "tracoor-agent.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/tracoor-agent/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "tracoor-agent.fullname" . }}
  labels:
    {{- include "tracoor-agent.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "tracoor-agent.metricsPort" . }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    {{- if (include "tracoor-agent.pprofPort" .) }}
    - port: {{ include "tracoor-agent.pprofPort" . }}
      targetPort: pprof
      protocol: TCP
      name: pprof
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "tracoor-agent.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/tracoor-agent/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "tracoor-agent.serviceAccountName" . }}
  labels:
    {{- include "tracoor-agent.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/tracoor-agent/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "tracoor-agent.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "tracoor-agent.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "tracoor-agent.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/tracoor-server/README.md
================================================

# tracoor-server

![Version: 0.0.2](https://img.shields.io/badge/Version-0.0.2-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Ethereum debug data capture and indexer

**Homepage:** <https://github.com/ethpandaops/tracoor>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| autoscaling.enabled | bool | `false` | Autoscaling configuration |
| autoscaling.maxReplicas | int | `3` | Maximum number of replicas |
| autoscaling.minReplicas | int | `2` | Minimum number of replicas |
| autoscaling.targetCPUUtilizationPercentage | int | `85` | Target CPU utilization percentage |
| config.addr | string | `":8081"` |  |
| config.gatewayAddr | string | `":8080"` |  |
| config.logging | string | `"debug"` |  |
| config.metricsAddr | string | `":9091"` |  |
| config.persistence.driver_name | string | `"postgres"` |  |
| config.persistence.dsn | string | `"postgres://user:password@localhost:5432/tracoor?sslmode=disable"` |  |
| config.pprofAddr | string | `":6060"` |  |
| config.preStopSleepSeconds | int | `31` |  |
| config.services.indexer.retention.beaconStates | string | `"24h"` |  |
| config.services.indexer.retention.executionBadBlocks | string | `"168h"` |  |
| config.services.indexer.retention.executionBlockTraces | string | `"24h"` |  |
| config.store.config.access_key | string | `"minioadmin"` |  |
| config.store.config.access_secret | string | `"minioadmin"` |  |
| config.store.config.bucket_name | string | `"tracoor"` |  |
| config.store.config.endpoint | string | `"http://localhost:9000"` |  |
| config.store.config.region | string | `"us-east-1"` |  |
| config.store.type | string | `"s3"` |  |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the tracoor container |
| customCommand | list | `[]` | Command replacement for the tracoor container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPodPorts | list | `[]` | Extra Pod ports |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | tracoor container pull policy |
| image.repository | string | `"ethpandaops/tracoor"` | tracoor container image repository |
| image.tag | string | `"latest"` | tracoor container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.grpc.annotations | object | `{}` | Annotations for Ingress |
| ingress.grpc.enabled | bool | `false` | Ingress resource for GRPC |
| ingress.grpc.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.grpc.hosts[0].paths | list | `[]` |  |
| ingress.grpc.tls | list | `[]` | Ingress TLS |
| ingress.http.annotations | object | `{}` | Annotations for Ingress |
| ingress.http.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.http.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.http.hosts[0].paths | list | `[]` |  |
| ingress.http.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| lifecycle | object | See `values.yaml` | Lifecycle hooks |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `90` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/tracoor-server/Chart.yaml
================================================
apiVersion: v2
name: tracoor-server
description: Ethereum debug data capture and indexer
home: https://github.com/ethpandaops/tracoor
type: application
version: 0.0.2
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org
  - name: savid
    email: andrew.davis@ethereum.org



================================================
FILE: charts/tracoor-server/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/tracoor-server/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

autoscaling:
  # -- Autoscaling configuration
  enabled: false
  # -- Minimum number of replicas
  minReplicas: 2
  # -- Maximum number of replicas
  maxReplicas: 3
  # -- Target CPU utilization percentage
  targetCPUUtilizationPercentage: 85

image:
  # -- tracoor container image repository
  repository: ethpandaops/tracoor
  # -- tracoor container image tag
  tag: latest
  # -- tracoor container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

config:
  logging: "debug"

  addr: ":8081"
  gatewayAddr: ":8080"
  metricsAddr: ":9091"
  pprofAddr: ":6060"

  preStopSleepSeconds: 31

  persistence:
    dsn: "postgres://user:password@localhost:5432/tracoor?sslmode=disable"
    driver_name: postgres

  services:
    indexer:
      retention:
        beaconStates: 24h
        executionBlockTraces: 24h
        executionBadBlocks: 168h

  store:
    type: s3
    config:
      region: "us-east-1"
      endpoint: http://localhost:9000
      bucket_name: tracoor
      access_key: minioadmin
      access_secret: minioadmin

ingress:
  grpc:
    # -- Ingress resource for GRPC
    enabled: false
    # -- Annotations for Ingress
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # -- Ingress host
    hosts:
      - host: chart-example.local
        paths: []
    # -- Ingress TLS
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  http:
    # -- Ingress resource for the HTTP API
    enabled: false
    # -- Annotations for Ingress
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # -- Ingress host
    hosts:
      - host: chart-example.local
        paths: []
    # -- Ingress TLS
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

# -- Custom args for the tracoor container
customArgs: []

# -- Command replacement for the tracoor container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: grpc
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: grpc
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Extra Pod ports
extraPodPorts: []

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Lifecycle hooks
# @default -- See `values.yaml`
lifecycle:
  preStop:
    exec:
      command:
      - /bin/sleep
      - "30"

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 90

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/tracoor-server/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/tracoor-server/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "tracoor-server.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "tracoor-server.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "tracoor-server.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "tracoor-server.labels" -}}
helm.sh/chart: {{ include "tracoor-server.chart" . }}
{{ include "tracoor-server.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "tracoor-server.selectorLabels" -}}
app.kubernetes.io/name: {{ include "tracoor-server.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "tracoor-server.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "tracoor-server.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "tracoor-server.httpPort" -}}
{{ (split ":" .Values.config.gatewayAddr)._1 | default "8080" }}
{{- end }}

{{- define "tracoor-server.grpcPort" -}}
{{ (split ":" .Values.config.addr)._1 | default "8081" }}
{{- end }}

{{- define "tracoor-server.metricsPort" -}}
{{ (split ":" .Values.config.metricsAddr)._1 | default "9090" }}
{{- end -}}

{{- define "tracoor-server.pprofPort" -}}
{{- if .Values.config.pprofAddr -}}
{{ (split ":" .Values.config.pprofAddr)._1 | default "6060" }}
{{- end -}}
{{- end -}}



================================================
FILE: charts/tracoor-server/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "tracoor-server.fullname" . }}
  labels:
    {{- include "tracoor-server.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{ toYaml .Values.config | nindent 4 }}



================================================
FILE: charts/tracoor-server/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tracoor-server.fullname" . }}
  labels:
    {{- include "tracoor-server.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "tracoor-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "tracoor-server.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "tracoor-server.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/tracoor"
          - "server"
          - --config=/config.yaml
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 10 }}
          {{- end }}
        ports:
          - name: http
            containerPort: {{ include "tracoor-server.httpPort" . }}
            protocol: TCP
          - name: metrics
            containerPort: {{ include "tracoor-server.metricsPort" . }}
            protocol: TCP
          - name: grpc
            containerPort: {{ include "tracoor-server.grpcPort" . }}
            protocol: TCP
          {{- if (include "tracoor-server.pprofPort" .) }}
          - name: pprof
            containerPort: {{ include "tracoor-server.pprofPort" . }}
            protocol: TCP
          {{- end }}
          {{- if .Values.extraPodPorts }}
            {{ toYaml .Values.extraPodPorts | nindent 10 }}
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        lifecycle:
          {{- toYaml .Values.lifecycle | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "tracoor-server.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "tracoor-server.fullname" . }}



================================================
FILE: charts/tracoor-server/templates/hpa.yaml
================================================
{{- if .Values.autoscaling.enabled -}}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "tracoor-server.fullname" . }}
  labels:
    {{- include "tracoor-server.labels" . | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "tracoor-server.fullname" . }}
  minReplicas: {{ .Values.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.autoscaling.maxReplicas }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ .Values.autoscaling.targetCPUUtilizationPercentage }}
{{- end }}



================================================
FILE: charts/tracoor-server/templates/ingress-grpc.yaml
================================================
{{- if .Values.ingress.grpc.enabled -}}
{{- $fullName := include "tracoor-server.fullname" . -}}
{{- $svcPort := include "tracoor-server.grpcPort" . -}}
{{- if and .Values.ingress.grpc.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.grpc.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.grpc.annotations "kubernetes.io/ingress.class" .Values.ingress.grpc.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}-grpc
  labels:
    {{- include "tracoor-server.labels" . | nindent 4 }}
  {{- with .Values.ingress.grpc.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.grpc.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.grpc.className }}
  {{- end }}
  {{- if .Values.ingress.grpc.tls }}
  tls:
    {{- range .Values.ingress.grpc.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.grpc.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/tracoor-server/templates/ingress.yaml
================================================
{{- if .Values.ingress.http.enabled -}}
{{- $fullName := include "tracoor-server.fullname" . -}}
{{- $svcPort := include "tracoor-server.httpPort" . -}}
{{- if and .Values.ingress.http.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.http.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.http.annotations "kubernetes.io/ingress.class" .Values.ingress.http.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "tracoor-server.labels" . | nindent 4 }}
  {{- with .Values.ingress.http.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.http.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.http.className }}
  {{- end }}
  {{- if .Values.ingress.http.tls }}
  tls:
    {{- range .Values.ingress.http.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.http.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/tracoor-server/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "tracoor-server.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "tracoor-server.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "tracoor-server.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "tracoor-server.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "tracoor-server.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/tracoor-server/templates/pdb.yaml
================================================
{{- if or .Values.podDisruptionBudget.minAvailable .Values.podDisruptionBudget.maxUnavailable -}}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "tracoor-server.fullname" . }}
  labels:
    {{- include "tracoor-server.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "tracoor-server.selectorLabels" . | nindent 6 }}
  {{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
  {{- end  }}
  {{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
  {{- end  }}
{{- end -}}


================================================
FILE: charts/tracoor-server/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "tracoor-server.fullname" . }}-env
  labels:
    {{- include "tracoor-server.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/tracoor-server/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "tracoor-server.fullname" . }}
  labels:
    {{- include "tracoor-server.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "tracoor-server.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ include "tracoor-server.grpcPort" . }}
      targetPort: grpc
      protocol: TCP
      name: grpc
    - port: {{ include "tracoor-server.metricsPort" . }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    {{- if (include "tracoor-server.pprofPort" .) }}
    - port: {{ include "tracoor-server.pprofPort" . }}
      targetPort: pprof
      protocol: TCP
      name: pprof
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "tracoor-server.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/tracoor-server/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "tracoor-server.serviceAccountName" . }}
  labels:
    {{- include "tracoor-server.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/tracoor-server/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "tracoor-server.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "tracoor-server.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "tracoor-server.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/tracoor-single/README.md
================================================

# tracoor-single

![Version: 0.0.5](https://img.shields.io/badge/Version-0.0.5-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Ethereum debug data capture and indexer

**Homepage:** <https://github.com/ethpandaops/tracoor>

## Requirements

| Repository | Name | Version |
|------------|------|---------|
| https://charts.bitnami.com/bitnami | postgresql | 15.x.x |

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| autoscaling.enabled | bool | `false` | Autoscaling configuration |
| autoscaling.maxReplicas | int | `3` | Maximum number of replicas |
| autoscaling.minReplicas | int | `2` | Minimum number of replicas |
| autoscaling.targetCPUUtilizationPercentage | int | `85` | Target CPU utilization percentage |
| config.agents[0].ethereum.beacon.nodeAddress | string | `"http://localhost:5052"` |  |
| config.agents[0].ethereum.execution.nodeAddress | string | `"http://localhost:8545"` |  |
| config.agents[0].ethereum.execution.traceDisableMemory | bool | `true` |  |
| config.agents[0].ethereum.execution.traceDisableStack | bool | `true` |  |
| config.agents[0].ethereum.execution.traceDisableStorage | bool | `true` |  |
| config.agents[0].ethereum.overrideNetworkName | string | `"mainnet"` |  |
| config.agents[0].name | string | `"instance-1"` |  |
| config.server.addr | string | `":8081"` |  |
| config.server.gatewayAddr | string | `":8080"` |  |
| config.server.ntpServer | string | `"time.google.com"` |  |
| config.server.persistence | object | `{}` |  |
| config.server.pprofAddr | string | `":6060"` |  |
| config.server.preStopSleepSeconds | int | `1` |  |
| config.server.services.indexer.retention.beaconBlocks | string | `"30m"` |  |
| config.server.services.indexer.retention.beaconStates | string | `"30m"` |  |
| config.server.services.indexer.retention.executionBlockTraces | string | `"30m"` |  |
| config.shared.indexer.address | string | `"localhost:8081"` |  |
| config.shared.logging | string | `"debug"` |  |
| config.shared.metricsAddr | string | `":9091"` |  |
| config.shared.store.config.base_path | string | `"/data/store"` |  |
| config.shared.store.type | string | `"fs"` |  |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the tracoor container |
| customCommand | list | `[]` | Command replacement for the tracoor container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPodPorts | list | `[]` | Extra Pod ports |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | tracoor container pull policy |
| image.repository | string | `"ethpandaops/tracoor"` | tracoor container image repository |
| image.tag | string | `"latest"` | tracoor container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.grpc.annotations | object | `{}` | Annotations for Ingress |
| ingress.grpc.enabled | bool | `false` | Ingress resource for GRPC |
| ingress.grpc.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.grpc.hosts[0].paths | list | `[]` |  |
| ingress.grpc.tls | list | `[]` | Ingress TLS |
| ingress.http.annotations | object | `{}` | Annotations for Ingress |
| ingress.http.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.http.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.http.hosts[0].paths | list | `[]` |  |
| ingress.http.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| lifecycle | object | See `values.yaml` | Lifecycle hooks |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `false` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"20Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| postgresql.architecture | string | `"standalone"` |  |
| postgresql.auth.database | string | `"tracoor"` |  |
| postgresql.auth.enablePostgresUser | bool | `true` |  |
| postgresql.auth.password | string | `"postgres"` |  |
| postgresql.auth.postgresPassword | string | `"postgres"` |  |
| postgresql.auth.username | string | `"postgres"` |  |
| postgresql.enabled | bool | `true` | If enabled a postgres chart will be deployed as a dependency |
| postgresql.fullnameOverride | string | `""` |  |
| postgresql.image.registry | string | `"docker.io"` |  |
| postgresql.image.repository | string | `"bitnami/postgresql"` |  |
| postgresql.image.tag | string | `"16.4.0-debian-12-r2"` |  |
| postgresql.nameOverride | string | `""` |  |
| postgresql.primary.extendedConfiguration | string | `"max_connections = 1024\n"` |  |
| postgresql.primary.persistence.enabled | bool | `true` |  |
| postgresql.primary.persistence.size | string | `"8Gi"` |  |
| postgresql.primary.resources | object | `{}` |  |
| postgresql.pullPolicy | string | `"IfNotPresent"` |  |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `90` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/tracoor-single/Chart.lock
================================================
dependencies:
- name: postgresql
  repository: https://charts.bitnami.com/bitnami
  version: 15.5.23
digest: sha256:a73e983312ae193a283a720706a0b231907bfce54513b459c830704497640bb4
generated: "2024-08-23T11:54:16.007074244+10:00"



================================================
FILE: charts/tracoor-single/Chart.yaml
================================================
apiVersion: v2
name: tracoor-single
description: Ethereum debug data capture and indexer
home: https://github.com/ethpandaops/tracoor
type: application
version: 0.0.5
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org
  - name: savid
    email: andrew.davis@ethereum.org
dependencies:
  - name: postgresql
    version: "15.x.x"
    repository: "https://charts.bitnami.com/bitnami"
    condition: postgresql.enabled



================================================
FILE: charts/tracoor-single/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/tracoor-single/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

autoscaling:
  # -- Autoscaling configuration
  enabled: false
  # -- Minimum number of replicas
  minReplicas: 2
  # -- Maximum number of replicas
  maxReplicas: 3
  # -- Target CPU utilization percentage
  targetCPUUtilizationPercentage: 85

image:
  # -- tracoor container image repository
  repository: ethpandaops/tracoor
  # -- tracoor container image tag
  tag: latest
  # -- tracoor container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

config:
  shared:
    metricsAddr: ":9091"
    logging: "debug"
    indexer:
      address: localhost:8081
    store:
      type: fs
      config:
        base_path: "/data/store"

  server:
    addr: ":8081"
    gatewayAddr: ":8080"
    pprofAddr: ":6060"
    preStopSleepSeconds: 1
    ntpServer: time.google.com
    persistence: {}
      # If postgres.enabled = true, this block will be overwritten.
      # Example sqlite:
      # dsn: "file:/data/tracoor.db"
      # driver_name: sqlite
    services:
      indexer:
        retention:
          beaconStates: 30m
          executionBlockTraces: 30m
          beaconBlocks: 30m

  agents:
    - name: instance-1
      ethereum:
        overrideNetworkName: mainnet
        # features:
        #   fetchBeaconState: true
        #   fetchBeaconBlock: true
        #   fetchBeaconBadBlock: true
        #   fetchBeaconBadBlob: true
        #   fetchExecutionBlockTrace: true
        #   fetchExecutionBadBlock: true
        beacon:
          nodeAddress: http://localhost:5052
          # Prysm
          # requires --save-invalid-block-temp and --save-invalid-blob-temp flags enabled
          # Always stored in os.tmpdir(), eg. /tmp
          # invalidGossipVerifiedBlocksPath: /tmp
          # invalidGossipVerifiedBlobsPath: /tmp

          # Nimbus
          # requires --dump flag enabled
          # replace data-dir with the --data-dir flag value
          # invalidGossipVerifiedBlocksPath: /data-dir/dump/invalid

          # Lighthouse
          # requires --invalid-gossip-verified-blocks-path flag set eg. =/data/invalid
          # invalidGossipVerifiedBlocksPath: /data/invalid
        execution:
          nodeAddress: http://localhost:8545
          traceDisableMemory: true
          traceDisableStack: true
          traceDisableStorage: true

ingress:
  grpc:
    # -- Ingress resource for GRPC
    enabled: false
    # -- Annotations for Ingress
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # -- Ingress host
    hosts:
      - host: chart-example.local
        paths: []
    # -- Ingress TLS
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  http:
    # -- Ingress resource for the HTTP API
    enabled: false
    # -- Annotations for Ingress
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # -- Ingress host
    hosts:
      - host: chart-example.local
        paths: []
    # -- Ingress TLS
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

# -- Custom args for the tracoor container
customArgs: []

# -- Command replacement for the tracoor container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: grpc
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: grpc
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 20Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Extra Pod ports
extraPodPorts: []

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Lifecycle hooks
# @default -- See `values.yaml`
lifecycle:
  preStop:
    exec:
      command:
      - /bin/sleep
      - "30"

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 90

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []

postgresql:
  # -- If enabled a postgres chart will be deployed as a dependency
  enabled: true
  nameOverride: ""
  fullnameOverride: ""
  architecture: "standalone"
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 16.4.0-debian-12-r2
  pullPolicy: IfNotPresent
  auth:
    enablePostgresUser: true
    postgresPassword: postgres
    database: tracoor
    username: postgres
    password: postgres
  primary:
    extendedConfiguration: |
      max_connections = 1024
    persistence:
      enabled: true
      size: 8Gi
    resources: {}



================================================
FILE: charts/tracoor-single/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/tracoor-single/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "tracoor-single.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "tracoor-single.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "tracoor-single.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "tracoor-single.labels" -}}
helm.sh/chart: {{ include "tracoor-single.chart" . }}
{{ include "tracoor-single.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "tracoor-single.selectorLabels" -}}
app.kubernetes.io/name: {{ include "tracoor-single.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "tracoor-single.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "tracoor-single.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "tracoor-single.httpPort" -}}
{{ (split ":" .Values.config.server.gatewayAddr)._1 | default "8080" }}
{{- end }}

{{- define "tracoor-single.grpcPort" -}}
{{ (split ":" .Values.config.server.addr)._1 | default "8081" }}
{{- end }}

{{- define "tracoor-single.metricsPort" -}}
{{ (split ":" .Values.config.shared.metricsAddr)._1 | default "9090" }}
{{- end -}}

{{- define "tracoor-single.pprofPort" -}}
{{- if .Values.config.server.pprofAddr -}}
{{ (split ":" .Values.config.server.pprofAddr)._1 | default "6060" }}
{{- end -}}
{{- end -}}

{{- define "tracoor-single.postgresql.fullname" -}}
{{- if .Values.postgresql.fullnameOverride -}}
{{- .Values.postgresql.fullnameOverride | trunc 63 | trimSuffix "-" -}}
{{- else -}}
{{- $name := default "postgresql" .Values.postgresql.nameOverride -}}
{{- if contains $name .Release.Name -}}
{{- .Release.Name | trunc 63 | trimSuffix "-" -}}
{{- else -}}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" -}}
{{- end -}}
{{- end -}}
{{- end -}}



================================================
FILE: charts/tracoor-single/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "tracoor-single.fullname" . }}
  labels:
    {{- include "tracoor-single.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{- $config := deepCopy .Values.config -}}
    {{- if .Values.postgresql.enabled -}}
    {{- $_ := set $config.server.persistence "dsn" (printf "postgres://%s:%s@%s:5432/%s?sslmode=disable" .Values.postgresql.auth.username .Values.postgresql.auth.password (include "tracoor-single.postgresql.fullname" $)  .Values.postgresql.auth.database) -}}
    {{- $_ := set $config.server.persistence "driver_name" "postgres" -}}
    {{- end -}}
    {{ toYaml $config | nindent 4 }}



================================================
FILE: charts/tracoor-single/templates/ingress-grpc.yaml
================================================
{{- if .Values.ingress.grpc.enabled -}}
{{- $fullName := include "tracoor-single.fullname" . -}}
{{- $svcPort := include "tracoor-single.grpcPort" . -}}
{{- if and .Values.ingress.grpc.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.grpc.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.grpc.annotations "kubernetes.io/ingress.class" .Values.ingress.grpc.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}-grpc
  labels:
    {{- include "tracoor-single.labels" . | nindent 4 }}
  {{- with .Values.ingress.grpc.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.grpc.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.grpc.className }}
  {{- end }}
  {{- if .Values.ingress.grpc.tls }}
  tls:
    {{- range .Values.ingress.grpc.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.grpc.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/tracoor-single/templates/ingress.yaml
================================================
{{- if .Values.ingress.http.enabled -}}
{{- $fullName := include "tracoor-single.fullname" . -}}
{{- $svcPort := include "tracoor-single.httpPort" . -}}
{{- if and .Values.ingress.http.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.http.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.http.annotations "kubernetes.io/ingress.class" .Values.ingress.http.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "tracoor-single.labels" . | nindent 4 }}
  {{- with .Values.ingress.http.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.http.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.http.className }}
  {{- end }}
  {{- if .Values.ingress.http.tls }}
  tls:
    {{- range .Values.ingress.http.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.http.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/tracoor-single/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "tracoor-single.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "tracoor-single.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "tracoor-single.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "tracoor-single.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "tracoor-single.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/tracoor-single/templates/pdb.yaml
================================================
{{- if or .Values.podDisruptionBudget.minAvailable .Values.podDisruptionBudget.maxUnavailable -}}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "tracoor-single.fullname" . }}
  labels:
    {{- include "tracoor-single.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "tracoor-single.selectorLabels" . | nindent 6 }}
  {{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
  {{- end  }}
  {{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
  {{- end  }}
{{- end -}}


================================================
FILE: charts/tracoor-single/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "tracoor-single.fullname" . }}-env
  labels:
    {{- include "tracoor-single.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/tracoor-single/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "tracoor-single.fullname" . }}
  labels:
    {{- include "tracoor-single.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "tracoor-single.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ include "tracoor-single.grpcPort" . }}
      targetPort: grpc
      protocol: TCP
      name: grpc
    - port: {{ include "tracoor-single.metricsPort" . }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    {{- if (include "tracoor-single.pprofPort" .) }}
    - port: {{ include "tracoor-single.pprofPort" . }}
      targetPort: pprof
      protocol: TCP
      name: pprof
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "tracoor-single.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/tracoor-single/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "tracoor-single.serviceAccountName" . }}
  labels:
    {{- include "tracoor-single.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/tracoor-single/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "tracoor-single.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "tracoor-single.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "tracoor-single.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/tracoor-single/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "tracoor-single.fullname" . }}
  labels:
    {{- include "tracoor-single.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  serviceName: {{ include "tracoor-single.fullname" . }}
  replicas: {{ .Values.replicas }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "tracoor-single.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "tracoor-single.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "tracoor-single.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/tracoor"
          - "single"
          - --single-config=/config.yaml
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          - name: storage
            mountPath: "/data"
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 10}}
          {{- end }}
        ports:
          - name: http
            containerPort: {{ include "tracoor-single.httpPort" . }}
            protocol: TCP
          - name: metrics
            containerPort: {{ include "tracoor-single.metricsPort" . }}
            protocol: TCP
          - name: grpc
            containerPort: {{ include "tracoor-single.grpcPort" . }}
            protocol: TCP
          {{- if (include "tracoor-single.pprofPort" .) }}
          - name: pprof
            containerPort: {{ include "tracoor-single.pprofPort" . }}
            protocol: TCP
          {{- end }}
          {{- if .Values.extraPodPorts }}
            {{ toYaml .Values.extraPodPorts | nindent 10 }}
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        lifecycle:
          {{- toYaml .Values.lifecycle | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "tracoor-single.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: config
          configMap:
            name: {{ include "tracoor-single.fullname" . }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/web3signer/README.md
================================================

# web3signer

![Version: 1.0.6](https://img.shields.io/badge/Version-1.0.6-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Web3Signer is capable of signing on multiple platforms using private keys stored in an external vault, or encrypted on a disk.

**Homepage:** <https://github.com/Consensys/web3signer/>

## Requirements

| Repository | Name | Version |
|------------|------|---------|
| https://charts.bitnami.com/bitnami | slashingprotectiondb(postgresql) | 12.x.x |

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the StatefulSet |
| config | string | See `values.yaml` | Config file |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customCommand | list | `[]` | Command replacement for the web3signer container |
| extraArgs | list | `[]` | Extra args for the web3signer container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| httpPort | int | `9000` |  |
| image.pullPolicy | string | `"IfNotPresent"` | web3signer container pull policy |
| image.repository | string | `"consensys/web3signer"` | web3signer container image repository |
| image.tag | string | `"latest"` | web3signer container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initChownData.enabled | bool | `true` | Init container to set the correct permissions to access data directories |
| initChownData.image.pullPolicy | string | `"IfNotPresent"` | Container pull policy |
| initChownData.image.repository | string | `"busybox"` | Container repository |
| initChownData.image.tag | string | `"1.34.1"` | Container tag |
| initChownData.resources | object | `{}` | Resource requests and limits |
| initContainers | list | `[]` | Additional init containers |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| metricsPort | int | `9001` |  |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| persistence.accessModes | list | `["ReadWriteOnce"]` | Access mode for the volume claim template |
| persistence.annotations | object | `{}` | Annotations for volume claim template |
| persistence.enabled | bool | `true` | Uses an EmptyDir when not enabled |
| persistence.existingClaim | string | `nil` | Use an existing PVC when persistence.enabled |
| persistence.selector | object | `{}` | Selector for volume claim template |
| persistence.size | string | `"1Gi"` | Requested size for volume claim template |
| persistence.storageClassName | string | `nil` | Use a specific storage class E.g 'local-path' for local storage to achieve best performance Read more (https://github.com/rancher/local-path-provisioner) |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Additional env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `true` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"1m"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| slashingprotectiondb.auth.enablePostgresUser | bool | `true` |  |
| slashingprotectiondb.auth.postgresPassword | string | `"postgres"` |  |
| slashingprotectiondb.enabled | bool | `true` | If enabled a postgres chart will be deployed as a dependency to be used as a slashing protection database |
| slashingprotectiondb.primary.extraVolumeMounts[0].mountPath | string | `"/sql-scripts"` |  |
| slashingprotectiondb.primary.extraVolumeMounts[0].name | string | `"sql-scripts"` |  |
| slashingprotectiondb.primary.extraVolumes[0].emptyDir | object | `{}` |  |
| slashingprotectiondb.primary.extraVolumes[0].name | string | `"sql-scripts"` |  |
| slashingprotectiondb.primary.initContainers[0].command[0] | string | `"bash"` |  |
| slashingprotectiondb.primary.initContainers[0].command[1] | string | `"-cex"` |  |
| slashingprotectiondb.primary.initContainers[0].command[2] | string | `"cd /sql-scripts\nBASE_URL=\"https://raw.githubusercontent.com/ConsenSys/web3signer/master/slashing-protection/src/main/resources/migrations/postgresql\"\nMIGRATIONS=(\n    \"V00001__initial.sql\"\n    \"V00002__removeUniqueConstraints.sql\"\n    \"V00003__addLowWatermark.sql\"\n    \"V00004__addGenesisValidatorsRoot.sql\"\n    \"V00005__xnor_source_target_low_watermark.sql\"\n    \"V00006__signed_data_indexes.sql\"\n    \"V00007__add_db_version.sql\"\n    \"V00008__signed_data_unique_constraints.sql\"\n    \"V00009__upsert_validators.sql\"\n    \"V00010__validator_enabled_status.sql\"\n    \"V00011__bigint_indexes.sql\"\n    \"V00012__add_highwatermark_metadata.sql\"\n)\nfor MIGRATION in \"${MIGRATIONS[@]}\"; do\n    if [ ! -f \"/sql-scripts/$MIGRATION\" ]; then\n        wget \"$BASE_URL/$MIGRATION\"\n    fi\ndone\n"` |  |
| slashingprotectiondb.primary.initContainers[0].image | string | `"bash:latest"` |  |
| slashingprotectiondb.primary.initContainers[0].imagePullPolicy | string | `"IfNotPresent"` |  |
| slashingprotectiondb.primary.initContainers[0].name | string | `"init-sql-migration-scripts"` |  |
| slashingprotectiondb.primary.initContainers[0].securityContext.runAsNonRoot | bool | `false` |  |
| slashingprotectiondb.primary.initContainers[0].securityContext.runAsUser | int | `0` |  |
| slashingprotectiondb.primary.initContainers[0].volumeMounts[0].mountPath | string | `"/sql-scripts"` |  |
| slashingprotectiondb.primary.initContainers[0].volumeMounts[0].name | string | `"sql-scripts"` |  |
| slashingprotectiondb.primary.initdb.password | string | `"postgres"` |  |
| slashingprotectiondb.primary.initdb.scripts."init_01_db.sh" | string | `"#!/bin/sh\nexport PGPASSWORD=postgres\n\nDB_EXISTS=$(psql -U postgres -h 127.0.0.1 -t -c \"SELECT 1 FROM pg_database WHERE datname='web3signer'\")\nif [ -z \"$DB_EXISTS\" ]; then\n    psql -U postgres -h 127.0.0.1 -c \"CREATE DATABASE web3signer;\"\nfi\n"` |  |
| slashingprotectiondb.primary.initdb.scripts."init_02_db.sh" | string | `"#!/bin/sh\nexport PGPASSWORD=postgres\ncd /sql-scripts\nfor FILE in *.sql; do\n  COMPLETED_FILE=\"${FILE}.completed\"\n  if [ ! -f \"$COMPLETED_FILE\" ]; then\n    psql -U postgres -h 127.0.0.1 -d web3signer -f $FILE && touch \"$COMPLETED_FILE\"\n  fi\ndone\n"` |  |
| slashingprotectiondb.primary.initdb.user | string | `"postgres"` |  |
| slashingprotectiondb.primary.name | string | `"web3signer"` |  |
| slashingprotectiondb.primary.persistence.enabled | bool | `true` | Uses an EmptyDir when not enabled |
| slashingprotectiondb.primary.persistence.size | string | `"1Gi"` |  |
| terminationGracePeriodSeconds | int | `300` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |

# Examples

## Configure Slashing Protection Database

The chart supports a PostgreSQL Database that will be used for slashing protection by default.

```yaml
slashingprotectiondb:
  enabled: true
```

If you would like to disable this feature, you could disable it by setting `slashingprotectiondb.enable=false`. Only do this if you know what you're doing.



================================================
FILE: charts/web3signer/Chart.lock
================================================
dependencies:
- name: postgresql
  repository: https://charts.bitnami.com/bitnami
  version: 12.12.10
digest: sha256:d1940885c90c55b21e5455688cd5d10dbb6b508d22475333f52eee58661d3775
generated: "2024-01-23T12:49:13.839414+01:00"



================================================
FILE: charts/web3signer/Chart.yaml
================================================
apiVersion: v2
name: web3signer
description: Web3Signer is capable of signing on multiple platforms using private keys stored in an external vault, or encrypted on a disk.
home: https://github.com/Consensys/web3signer/
type: application
version: 1.0.6
maintainers:
  - name: barnabasbusa
    email: busa.barnabas@gmail.com
  - name: skylenet
    email: rafael@skyle.net
dependencies:
- name: postgresql
  version: "12.x.x"
  repository: "https://charts.bitnami.com/bitnami"
  condition: slashingprotectiondb.enabled
  alias: slashingprotectiondb



================================================
FILE: charts/web3signer/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Examples

## Configure Slashing Protection Database

The chart supports a PostgreSQL Database that will be used for slashing protection by default.

```yaml
slashingprotectiondb:
  enabled: true
```

If you would like to disable this feature, you could disable it by setting `slashingprotectiondb.enable=false`. Only do this if you know what you're doing.



================================================
FILE: charts/web3signer/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- web3signer container image repository
  repository: consensys/web3signer
  # -- web3signer container image tag
  tag: latest
  # -- web3signer container pull policy
  pullPolicy: IfNotPresent

# -- Extra args for the web3signer container
extraArgs: []
  ## Example for web3signer network selection
  # - --network=mainnet

# -- Command replacement for the web3signer container
customCommand: [] # Only change this if you need to change the default command

# -- Config file
# @default -- See `values.yaml`
config: |
  data-path: "/data"
  http-listen-port: {{ .Values.httpPort }}
  http-listen-host: 0.0.0.0
  http-host-allowlist: "*"
  {{- if .Values.slashingprotectiondb.enabled }}
  eth2.slashing-protection-db-url: "jdbc:postgresql://{{ .Release.Name }}-slashingprotectiondb/{{ .Values.slashingprotectiondb.primary.name }}"
  eth2.slashing-protection-db-username: {{ .Values.slashingprotectiondb.primary.initdb.user }}
  eth2.slashing-protection-db-password: {{ .Values.slashingprotectiondb.primary.initdb.password }}
  eth2.slashing-protection-pruning-enabled: true
  {{- end }}
  {{- if .Values.serviceMonitor.enabled }}
  metrics-enabled: true
  metrics-port: {{ .Values.metricsPort }}
  metrics-host: 0.0.0.0
  metrics-host-allowlist: "*"
  {{- end }}

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# - HTTP port for web3signer interface
httpPort: 9000

# - Metrics port for web3signer interface
metricsPort: 9001

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the StatefulSet
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 300

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

# -- Additional env variables injected via a created secret
secretEnv: {}

initChownData:
  # -- Init container to set the correct permissions to access data directories
  enabled: true
  image:
    # -- Container repository
    repository: busybox
    # -- Container tag
    tag: "1.34.1"
    # -- Container pull policy
    pullPolicy: IfNotPresent
  # -- Resource requests and limits
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: true
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Requested size for volume claim template
  size: 1Gi
  # -- Use a specific storage class
  # E.g 'local-path' for local storage to achieve best performance
  # Read more (https://github.com/rancher/local-path-provisioner)
  storageClassName: null
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 1m
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []

slashingprotectiondb:
  # -- If enabled a postgres chart will be deployed as a dependency to be used as a slashing protection database
  enabled: true
  auth:
    enablePostgresUser: true
    postgresPassword: postgres
  primary:
    name: web3signer
    extraVolumes:
      - name: sql-scripts
        emptyDir: {}
    extraVolumeMounts:
      - name: sql-scripts
        mountPath: "/sql-scripts"
    initContainers:
      - name: init-sql-migration-scripts
        image: bash:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: false
          runAsUser: 0
        command:
          - bash
          - -cex
          - |
            cd /sql-scripts
            BASE_URL="https://raw.githubusercontent.com/ConsenSys/web3signer/master/slashing-protection/src/main/resources/migrations/postgresql"
            MIGRATIONS=(
                "V00001__initial.sql"
                "V00002__removeUniqueConstraints.sql"
                "V00003__addLowWatermark.sql"
                "V00004__addGenesisValidatorsRoot.sql"
                "V00005__xnor_source_target_low_watermark.sql"
                "V00006__signed_data_indexes.sql"
                "V00007__add_db_version.sql"
                "V00008__signed_data_unique_constraints.sql"
                "V00009__upsert_validators.sql"
                "V00010__validator_enabled_status.sql"
                "V00011__bigint_indexes.sql"
                "V00012__add_highwatermark_metadata.sql"
            )
            for MIGRATION in "${MIGRATIONS[@]}"; do
                if [ ! -f "/sql-scripts/$MIGRATION" ]; then
                    wget "$BASE_URL/$MIGRATION"
                fi
            done
        volumeMounts:
          - name: sql-scripts
            mountPath: "/sql-scripts"
    initdb:
      user: postgres
      password: postgres
      scripts:
        init_01_db.sh: |
          #!/bin/sh
          export PGPASSWORD=postgres

          DB_EXISTS=$(psql -U postgres -h 127.0.0.1 -t -c "SELECT 1 FROM pg_database WHERE datname='web3signer'")
          if [ -z "$DB_EXISTS" ]; then
              psql -U postgres -h 127.0.0.1 -c "CREATE DATABASE web3signer;"
          fi
        init_02_db.sh: |
          #!/bin/sh
          export PGPASSWORD=postgres
          cd /sql-scripts
          for FILE in *.sql; do
            COMPLETED_FILE="${FILE}.completed"
            if [ ! -f "$COMPLETED_FILE" ]; then
              psql -U postgres -h 127.0.0.1 -d web3signer -f $FILE && touch "$COMPLETED_FILE"
            fi
          done
    persistence:
      # -- Uses an EmptyDir when not enabled
      enabled: true
      size: 1Gi



================================================
FILE: charts/web3signer/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/web3signer/ci/default-values.yaml
================================================



================================================
FILE: charts/web3signer/templates/_cmd.tpl
================================================
{{/*
# Default command
*/}}
{{- define "web3signer.defaultCommand" -}}
- sh
- -ac
- >
  /opt/web3signer/bin/web3signer
  --config-file=/data/config.yaml
  eth2
{{- range .Values.extraArgs }}
  {{ . }}
{{- end }}
{{- end }}



================================================
FILE: charts/web3signer/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "web3signer.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "web3signer.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "web3signer.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "web3signer.labels" -}}
helm.sh/chart: {{ include "web3signer.chart" . }}
{{ include "web3signer.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "web3signer.selectorLabels" -}}
app.kubernetes.io/name: {{ include "web3signer.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "web3signer.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "web3signer.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}



================================================
FILE: charts/web3signer/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "web3signer.fullname" . }}
  labels:
    {{- include "web3signer.labels" . | nindent 4 }}
data:
  config.yaml: |
    {{- tpl .Values.config . | nindent 4 }}



================================================
FILE: charts/web3signer/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "web3signer.fullname" . -}}
{{- $svcPort := .Values.httpPort -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "web3signer.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/web3signer/templates/pdb.yaml
================================================
{{- if or .Values.podDisruptionBudget.minAvailable .Values.podDisruptionBudget.maxUnavailable -}}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "web3signer.fullname" . }}
  labels:
    {{- include "web3signer.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "web3signer.selectorLabels" . | nindent 6 }}
  {{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
  {{- end  }}
  {{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
  {{- end  }}
{{- end -}}


================================================
FILE: charts/web3signer/templates/service-headless.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "web3signer.fullname" . }}-headless
  labels:
    {{- include "web3signer.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - port: {{ .Values.httpPort }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ .Values.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "web3signer.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/web3signer/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "web3signer.fullname" . }}
  labels:
    {{- include "web3signer.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.httpPort }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ .Values.metricsPort }}
      targetPort: {{ .Values.metricsPort }}
      protocol: TCP
      name: metrics
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "web3signer.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/web3signer/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "web3signer.serviceAccountName" . }}
  labels:
    {{- include "web3signer.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}



================================================
FILE: charts/web3signer/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "web3signer.serviceAccountName" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "web3signer.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "web3signer.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/web3signer/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "web3signer.fullname" . }}
  labels:
    {{- include "web3signer.labels" . | nindent 4 }}
spec:
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "web3signer.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "web3signer.fullname" . }}-headless
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "web3signer.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "web3signer.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- if .Values.initChownData.enabled }}
        - name: init-chown-data
          image: "{{ .Values.initChownData.image.repository }}:{{ .Values.initChownData.image.tag }}"
          imagePullPolicy: {{ .Values.initChownData.image.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command:
            - sh
            - -c
            - >
              chown -R {{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }} /data;
          resources:
      {{ toYaml .Values.initChownData.resources | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: "/data"
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- if gt (len .Values.customCommand) 0 }}
            {{- toYaml .Values.customCommand | nindent 12}}
          {{- else }}
            {{- include "web3signer.defaultCommand" . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metricsPort }}
              protocol: TCP
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12}}
          {{- end }}
            - name: storage
              mountPath: "/data"
            - name: config
              mountPath: "/data/config.yaml"
              subPath: config.yaml
              readOnly: true
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- if .Values.extraEnv }}
            {{- toYaml .Values.extraEnv | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: config
          configMap:
            name: {{ include "web3signer.fullname" . }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: storage
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        {{- toYaml .Values.persistence.annotations | nindent 8 }}
    spec:
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      {{- if .Values.persistence.selector }}
      selector:
        {{- toYaml .Values.persistence.selector | nindent 8 }}
      {{- end }}
  {{- end }}



================================================
FILE: charts/web3signer/templates/tests/test-connection.yaml
================================================
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "web3signer.fullname" . }}-test-connection"
  labels:
    {{- include "web3signer.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['{{ include "web3signer.fullname" . }}:{{ .Values.httpPort }}/upcheck']
  restartPolicy: Never



================================================
FILE: charts/xatu-cannon/README.md
================================================

# xatu-cannon

![Version: 0.2.2](https://img.shields.io/badge/Version-0.2.2-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Ethereum p2p monitoring tool that runs along side a Ethereum consensus client and collects data via the consensus client's Beacon API.

**Homepage:** <https://github.com/ethpandaops/xatu>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| config.coordinator.address | string | `"localhost:8080"` |  |
| config.coordinator.headers.authorization | string | `"Someb64Value"` |  |
| config.coordinator.tls | bool | `false` |  |
| config.ethereum.beaconNodeAddress | string | `"http://localhost:5052"` |  |
| config.logging | string | `"info"` |  |
| config.metricsAddr | string | `":9090"` |  |
| config.name | string | `"example-instance"` |  |
| config.ntpServer | string | `"time.google.com"` |  |
| config.outputs[0].config.address | string | `"http://localhost:8080"` |  |
| config.outputs[0].config.batchTimeout | string | `"5s"` |  |
| config.outputs[0].config.exportTimeout | string | `"30s"` |  |
| config.outputs[0].config.headers.authorization | string | `"Someb64Value"` |  |
| config.outputs[0].config.maxExportBatchSize | int | `512` |  |
| config.outputs[0].config.maxQueueSize | int | `51200` |  |
| config.outputs[0].name | string | `"basic"` |  |
| config.outputs[0].type | string | `"http"` |  |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the xatu container |
| customCommand | list | `[]` | Command replacement for the xatu container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | xatu container pull policy |
| image.repository | string | `"ethpandaops/xatu"` | xatu container image repository |
| image.tag | string | `"latest"` | xatu container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| initContainers | list | `[]` | Additional init containers |
| lifecycle | object | See `values.yaml` | Lifecycle hooks |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `90` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |



================================================
FILE: charts/xatu-cannon/Chart.yaml
================================================
apiVersion: v2
name: xatu-cannon
description: Ethereum p2p monitoring tool that runs along side a Ethereum consensus client and collects data via the consensus client's Beacon API.
home: https://github.com/ethpandaops/xatu
type: application
version: 0.2.2
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org
  - name: savid
    email: andrew.davis@ethereum.org



================================================
FILE: charts/xatu-cannon/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/xatu-cannon/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- xatu container image repository
  repository: ethpandaops/xatu
  # -- xatu container image tag
  tag: latest
  # -- xatu container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

config:
  logging: "info"
  metricsAddr: ":9090"
  name: example-instance
  ntpServer: time.google.com
  ethereum:
    beaconNodeAddress: http://localhost:5052
  coordinator:
    address: localhost:8080
    tls: false
    headers:
      authorization: Someb64Value
  outputs:
  - name: basic
    type: http
    config:
      address: http://localhost:8080
      headers:
        authorization: Someb64Value
      maxQueueSize: 51200
      batchTimeout: 5s
      exportTimeout: 30s
      maxExportBatchSize: 512

# -- Custom args for the xatu container
customArgs: []

# -- Command replacement for the xatu container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Pod priority class
priorityClassName: null

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Lifecycle hooks
# @default -- See `values.yaml`
lifecycle:
  preStop:
    exec:
      command:
      - /bin/sleep
      - "30"

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 90

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/xatu-cannon/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/xatu-cannon/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "xatu-cannon.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "xatu-cannon.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "xatu-cannon.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "xatu-cannon.labels" -}}
helm.sh/chart: {{ include "xatu-cannon.chart" . }}
{{ include "xatu-cannon.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "xatu-cannon.selectorLabels" -}}
app.kubernetes.io/name: {{ include "xatu-cannon.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "xatu-cannon.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "xatu-cannon.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "xatu-cannon.metricsPort" -}}
{{ (split ":" .Values.config.metricsAddr)._1 | default ":9090" }}
{{- end -}}

{{- define "xatu-cannon.pprofPort" -}}
{{- if .Values.config.pprofAddr -}}
{{ (split ":" .Values.config.pprofAddr)._1 | default "6060" }}
{{- end -}}
{{- end -}}


================================================
FILE: charts/xatu-cannon/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "xatu-cannon.fullname" . }}
  labels:
    {{- include "xatu-cannon.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{ tpl (toYaml .Values.config | nindent 4) $ }}



================================================
FILE: charts/xatu-cannon/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "xatu-cannon.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "xatu-cannon.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "xatu-cannon.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "xatu-cannon.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "xatu-cannon.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/xatu-cannon/templates/pdb.yaml
================================================
{{- if or .Values.podDisruptionBudget.minAvailable .Values.podDisruptionBudget.maxUnavailable -}}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "xatu-cannon.fullname" . }}
  labels:
    {{- include "xatu-cannon.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "xatu-cannon.selectorLabels" . | nindent 6 }}
  {{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
  {{- end  }}
  {{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
  {{- end  }}
{{- end -}}


================================================
FILE: charts/xatu-cannon/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "xatu-cannon.fullname" . }}-env
  labels:
    {{- include "xatu-cannon.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/xatu-cannon/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "xatu-cannon.fullname" . }}
  labels:
    {{- include "xatu-cannon.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "xatu-cannon.metricsPort" . }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    {{- if (include "xatu-cannon.pprofPort" .) }}
    - port: {{ include "xatu-cannon.pprofPort" . }}
      targetPort: pprof
      protocol: TCP
      name: pprof
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "xatu-cannon.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/xatu-cannon/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "xatu-cannon.serviceAccountName" . }}
  labels:
    {{- include "xatu-cannon.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/xatu-cannon/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "xatu-cannon.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "xatu-cannon.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "xatu-cannon.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/xatu-cannon/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "xatu-cannon.fullname" . }}
  labels:
    {{- include "xatu-cannon.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  serviceName: {{ include "xatu-cannon.fullname" . }}
  replicas: {{ .Values.replicas }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "xatu-cannon.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "xatu-cannon.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "xatu-cannon.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/xatu"
          - "cannon"
          - --config=/config.yaml
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 10}}
          {{- end }}
        ports:
          - name: metrics
            containerPort: {{ include "xatu-cannon.metricsPort" . }}
            protocol: TCP
          {{- if (include "xatu-cannon.pprofPort" .) }}
          - name: pprof
            containerPort: {{ include "xatu-cannon.pprofPort" . }}
            protocol: TCP
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        lifecycle:
          {{- toYaml .Values.lifecycle | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "xatu-cannon.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "xatu-cannon.fullname" . }}



================================================
FILE: charts/xatu-cl-mimicry/README.md
================================================

# xatu-cl-mimicry

![Version: 0.0.2](https://img.shields.io/badge/Version-0.0.2-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Ethereum p2p monitoring tool that collects data from the consensus layer.

**Homepage:** <https://github.com/ethpandaops/xatu>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| config.ethereum.network | string | `"mainnet"` |  |
| config.logging | string | `"info"` |  |
| config.metricsAddr | string | `":9090"` |  |
| config.name | string | `"example-instance"` |  |
| config.node.devp2pHost | string | `"0.0.0.0"` |  |
| config.node.devp2pPort | int | `0` |  |
| config.node.dialConcurrency | int | `16` |  |
| config.node.dialTimeout | string | `"5s"` |  |
| config.node.libp2pHost | string | `"0.0.0.0"` |  |
| config.node.libp2pPort | int | `0` |  |
| config.node.maxPeers | int | `30` |  |
| config.node.privateKeyStr | string | `""` |  |
| config.node.prysmHost | string | `"127.0.0.1"` |  |
| config.node.prysmPortGrpc | int | `4000` |  |
| config.node.prysmPortHttp | int | `5052` |  |
| config.ntpServer | string | `"time.google.com"` |  |
| config.outputs[0].config.address | string | `"http://localhost:8080"` |  |
| config.outputs[0].config.batchTimeout | string | `"5s"` |  |
| config.outputs[0].config.exportTimeout | string | `"30s"` |  |
| config.outputs[0].config.headers.authorization | string | `"Someb64Value"` |  |
| config.outputs[0].config.maxExportBatchSize | int | `512` |  |
| config.outputs[0].config.maxQueueSize | int | `51200` |  |
| config.outputs[0].name | string | `"basic"` |  |
| config.outputs[0].type | string | `"http"` |  |
| config.probeAddr | string | `":8080"` |  |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the xatu container |
| customCommand | list | `[]` | Command replacement for the xatu container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | xatu container pull policy |
| image.repository | string | `"ethpandaops/xatu"` | xatu container image repository |
| image.tag | string | `"latest"` | xatu container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| initContainers | list | `[]` | Additional init containers |
| lifecycle | object | See `values.yaml` | Lifecycle hooks |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| podManagementPolicy | string | `"OrderedReady"` | Pod management policy |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `90` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |
| updateStrategy | object | `{"type":"RollingUpdate"}` | Update strategy for the Statefulset |
| updateStrategy.type | string | `"RollingUpdate"` | Update strategy type |



================================================
FILE: charts/xatu-cl-mimicry/Chart.yaml
================================================
apiVersion: v2
name: xatu-cl-mimicry
description: Ethereum p2p monitoring tool that collects data from the consensus layer.
home: https://github.com/ethpandaops/xatu
type: application
version: 0.0.2
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org
  - name: savid
    email: andrew.davis@ethereum.org



================================================
FILE: charts/xatu-cl-mimicry/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/xatu-cl-mimicry/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- xatu container image repository
  repository: ethpandaops/xatu
  # -- xatu container image tag
  tag: latest
  # -- xatu container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

config:
  logging: "info"
  metricsAddr: ":9090"
  probeAddr: ":8080"
  name: example-instance
  ntpServer: time.google.com

  ethereum:
    network: mainnet # mainnet, sepolia, holesky

  node:
    privateKeyStr: ""
    dialTimeout: "5s"
    devp2pHost: "0.0.0.0"
    devp2pPort: 0
    libp2pHost: "0.0.0.0"
    libp2pPort: 0
    prysmHost: "127.0.0.1"
    prysmPortHttp: 5052
    prysmPortGrpc: 4000
    maxPeers: 30
    dialConcurrency: 16


  outputs:
  - name: basic
    type: http
    config:
      address: http://localhost:8080
      headers:
        authorization: Someb64Value
      maxQueueSize: 51200
      batchTimeout: 5s
      exportTimeout: 30s
      maxExportBatchSize: 512

# -- Custom args for the xatu container
customArgs: []

# -- Command replacement for the xatu container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: probe
  initialDelaySeconds: 180 # should match config.captureDelay
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: probe
  initialDelaySeconds: 180 # should match config.captureDelay
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod priority class
priorityClassName: null

# -- Pod management policy
podManagementPolicy: OrderedReady

# -- Update strategy for the Statefulset
updateStrategy:
  # -- Update strategy type
  type: RollingUpdate

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Lifecycle hooks
# @default -- See `values.yaml`
lifecycle:
  preStop:
    exec:
      command:
      - /bin/sleep
      - "30"

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 90

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/xatu-cl-mimicry/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/xatu-cl-mimicry/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "xatu-cl-mimicry.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "xatu-cl-mimicry.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "xatu-cl-mimicry.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "xatu-cl-mimicry.labels" -}}
helm.sh/chart: {{ include "xatu-cl-mimicry.chart" . }}
{{ include "xatu-cl-mimicry.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "xatu-cl-mimicry.selectorLabels" -}}
app.kubernetes.io/name: {{ include "xatu-cl-mimicry.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "xatu-cl-mimicry.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "xatu-cl-mimicry.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "xatu-cl-mimicry.metricsPort" -}}
{{ (split ":" .Values.config.metricsAddr)._1 | default ":9090" }}
{{- end -}}

{{- define "xatu-cl-mimicry.pprofPort" -}}
{{- if .Values.config.pprofAddr -}}
{{ (split ":" .Values.config.pprofAddr)._1 | default "6060" }}
{{- end -}}
{{- end -}}

{{- define "xatu-cl-mimicry.probePort" -}}
{{- if .Values.config.probeAddr -}}
{{ (split ":" .Values.config.probeAddr)._1 | default "8080" }}
{{- end -}}
{{- end -}}


================================================
FILE: charts/xatu-cl-mimicry/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "xatu-cl-mimicry.fullname" . }}
  labels:
    {{- include "xatu-cl-mimicry.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{ toYaml .Values.config | nindent 4 }}



================================================
FILE: charts/xatu-cl-mimicry/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "xatu-cl-mimicry.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "xatu-cl-mimicry.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "xatu-cl-mimicry.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "xatu-cl-mimicry.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "xatu-cl-mimicry.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/xatu-cl-mimicry/templates/pdb.yaml
================================================
{{- if or .Values.podDisruptionBudget.minAvailable .Values.podDisruptionBudget.maxUnavailable -}}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "xatu-cl-mimicry.fullname" . }}
  labels:
    {{- include "xatu-cl-mimicry.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "xatu-cl-mimicry.selectorLabels" . | nindent 6 }}
  {{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
  {{- end  }}
  {{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
  {{- end  }}
{{- end -}}


================================================
FILE: charts/xatu-cl-mimicry/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "xatu-cl-mimicry.fullname" . }}-env
  labels:
    {{- include "xatu-cl-mimicry.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/xatu-cl-mimicry/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "xatu-cl-mimicry.fullname" . }}
  labels:
    {{- include "xatu-cl-mimicry.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "xatu-cl-mimicry.metricsPort" . }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    {{- if (include "xatu-cl-mimicry.pprofPort" .) }}
    - port: {{ include "xatu-cl-mimicry.pprofPort" . }}
      targetPort: pprof
      protocol: TCP
      name: pprof
    {{- end }}
    {{- if (include "xatu-cl-mimicry.probePort" .) }}
    - port: {{ include "xatu-cl-mimicry.probePort" . }}
      targetPort: probe
      protocol: TCP
      name: probe
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "xatu-cl-mimicry.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/xatu-cl-mimicry/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "xatu-cl-mimicry.serviceAccountName" . }}
  labels:
    {{- include "xatu-cl-mimicry.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/xatu-cl-mimicry/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "xatu-cl-mimicry.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "xatu-cl-mimicry.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "xatu-cl-mimicry.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/xatu-cl-mimicry/templates/statefulset.yaml
================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "xatu-cl-mimicry.fullname" . }}
  labels:
    {{- include "xatu-cl-mimicry.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  serviceName: {{ include "xatu-cl-mimicry.fullname" . }}
  replicas: {{ .Values.replicas }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "xatu-cl-mimicry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "xatu-cl-mimicry.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "xatu-cl-mimicry.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/xatu"
          - "cl-mimicry"
          - --config=/config.yaml
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 10}}
          {{- end }}
        ports:
          - name: metrics
            containerPort: {{ include "xatu-cl-mimicry.metricsPort" . }}
            protocol: TCP
          {{- if (include "xatu-cl-mimicry.pprofPort" .) }}
          - name: pprof
            containerPort: {{ include "xatu-cl-mimicry.pprofPort" . }}
            protocol: TCP
          {{- end }}
          {{- if (include "xatu-cl-mimicry.probePort" .) }}
          - name: probe
            containerPort: {{ include "xatu-cl-mimicry.probePort" . }}
            protocol: TCP
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        lifecycle:
          {{- toYaml .Values.lifecycle | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "xatu-cl-mimicry.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "xatu-cl-mimicry.fullname" . }}



================================================
FILE: charts/xatu-discovery/README.md
================================================

# xatu-discovery

![Version: 0.0.6](https://img.shields.io/badge/Version-0.0.6-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Ethereum p2p monitoring tool that discovers node records.

**Homepage:** <https://github.com/ethpandaops/xatu>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| config.coordinator.address | string | `"localhost:8080"` |  |
| config.coordinator.batchTimeout | string | `"5s"` |  |
| config.coordinator.concurrentExecutionPeers | int | `100` |  |
| config.coordinator.exportTimeout | string | `"30s"` |  |
| config.coordinator.headers.authorization | string | `"Someb64Value"` |  |
| config.coordinator.maxExportBatchSize | int | `512` |  |
| config.coordinator.maxQueueSize | int | `51200` |  |
| config.coordinator.tls | bool | `false` |  |
| config.logging | string | `"info"` |  |
| config.metricsAddr | string | `":9090"` |  |
| config.p2p.config.bootNodes[0] | string | `"enr:-Jq4QItoFUuug_n_qbYbU0OY04-np2wT8rUCauOOXNi0H3BWbDj-zbfZb7otA7jZ6flbBpx1LNZK2TDebZ9dEKx84LYBhGV0aDKQtTA_KgEAAAD__________4JpZIJ2NIJpcISsaa0ZiXNlY3AyNTZrMaEDHAD2JKYevx89W0CcFJFiskdcEzkH_Wdv9iW42qLK79ODdWRwgiMo"` |  |
| config.p2p.config.bootNodes[10] | string | `"enr:-Ku4QHqVeJ8PPICcWk1vSn_XcSkjOkNiTg6Fmii5j6vUQgvzMc9L1goFnLKgXqBJspJjIsB91LTOleFmyWWrFVATGngBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhAMRHkWJc2VjcDI1NmsxoQKLVXFOhp2uX6jeT0DvvDpPcU8FWMjQdR4wMuORMhpX24N1ZHCCIyg"` |  |
| config.p2p.config.bootNodes[11] | string | `"enr:-Ku4QG-2_Md3sZIAUebGYT6g0SMskIml77l6yR-M_JXc-UdNHCmHQeOiMLbylPejyJsdAPsTHJyjJB2sYGDLe0dn8uYBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhBLY-NyJc2VjcDI1NmsxoQORcM6e19T1T9gi7jxEZjk_sjVLGFscUNqAY9obgZaxbIN1ZHCCIyg"` |  |
| config.p2p.config.bootNodes[12] | string | `"enr:-Ku4QPn5eVhcoF1opaFEvg1b6JNFD2rqVkHQ8HApOKK61OIcIXD127bKWgAtbwI7pnxx6cDyk_nI88TrZKQaGMZj0q0Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhDayLMaJc2VjcDI1NmsxoQK2sBOLGcUb4AwuYzFuAVCaNHA-dy24UuEKkeFNgCVCsIN1ZHCCIyg"` |  |
| config.p2p.config.bootNodes[13] | string | `"enr:-Ku4QEWzdnVtXc2Q0ZVigfCGggOVB2Vc1ZCPEc6j21NIFLODSJbvNaef1g4PxhPwl_3kax86YPheFUSLXPRs98vvYsoBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhDZBrP2Jc2VjcDI1NmsxoQM6jr8Rb1ktLEsVcKAPa08wCsKUmvoQ8khiOl_SLozf9IN1ZHCCIyg"` |  |
| config.p2p.config.bootNodes[14] | string | `"enr:-Ku4QFmUkNp0g9bsLX2PfVeIyT-9WO-PZlrqZBNtEyofOOfLMScDjaTzGxIb1Ns9Wo5Pm_8nlq-SZwcQfTH2cgO-s88Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDkvpOTAAAQIP__________gmlkgnY0gmlwhBLf22SJc2VjcDI1NmsxoQLV_jMOIxKbjHFKgrkFvwDvpexo6Nd58TK5k7ss4Vt0IoN1ZHCCG1g"` |  |
| config.p2p.config.bootNodes[15] | string | `"enr:-LK4QLINdtobGquK7jukLDAKmsrH2ZuHM4k0TklY5jDTD4ZgfxR9weZmo5Jwu81hlKu3qPAvk24xHGBDjYs4o8f1gZ0Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpB53wQoAAAQIP__________gmlkgnY0gmlwhDRN_P6Jc2VjcDI1NmsxoQJuNujTgsJUHUgVZML3pzrtgNtYg7rQ4K1tkWERgl0DdoN0Y3CCIyiDdWRwgiMo"` |  |
| config.p2p.config.bootNodes[16] | string | `"enr:-LK4QH1xnjotgXwg25IDPjrqRGFnH1ScgNHA3dv1Z8xHCp4uP3N3Jjl_aYv_WIxQRdwZvSukzbwspXZ7JjpldyeVDzMCh2F0dG5ldHOIAAAAAAAAAACEZXRoMpB53wQoAAAQIP__________gmlkgnY0gmlwhIe1te-Jc2VjcDI1NmsxoQOkcGXqbCJYbcClZ3z5f6NWhX_1YPFRYRRWQpJjwSHpVIN0Y3CCIyiDdWRwgiMo"` |  |
| config.p2p.config.bootNodes[17] | string | `"enr:-Ly4QFPk-cTMxZ3jWTafiNblEZkQIXGF2aVzCIGW0uHp6KaEAvBMoctE8S7YU0qZtuS7By0AA4YMfKoN9ls_GJRccVpFh2F0dG5ldHOI__________-EZXRoMpCC9KcrAgAQIIS2AQAAAAAAgmlkgnY0gmlwhKh3joWJc2VjcDI1NmsxoQKrxz8M1IHwJqRIpDqdVW_U1PeixMW5SfnBD-8idYIQrIhzeW5jbmV0cw-DdGNwgiMog3VkcIIjKA"` |  |
| config.p2p.config.bootNodes[18] | string | `"enr:-L64QJmwSDtaHVgGiqIxJWUtxWg6uLCipsms6j-8BdsOJfTWAs7CLF9HJnVqFE728O-JYUDCxzKvRdeMqBSauHVCMdaCAVWHYXR0bmV0c4j__________4RldGgykIL0pysCABAghLYBAAAAAACCaWSCdjSCaXCEQWxOdolzZWNwMjU2azGhA7Qmod9fK86WidPOzLsn5_8QyzL7ZcJ1Reca7RnD54vuiHN5bmNuZXRzD4N0Y3CCIyiDdWRwgiMo"` |  |
| config.p2p.config.bootNodes[19] | string | `"enr:-KG4QCIzJZTY_fs_2vqWEatJL9RrtnPwDCv-jRBuO5FQ2qBrfJubWOWazri6s9HsyZdu-fRUfEzkebhf1nvO42_FVzwDhGV0aDKQed8EKAAAECD__________4JpZIJ2NIJpcISHtbYziXNlY3AyNTZrMaED4m9AqVs6F32rSCGsjtYcsyfQE2K8nDiGmocUY_iq-TSDdGNwgiMog3VkcIIjKA"` |  |
| config.p2p.config.bootNodes[1] | string | `"enr:-Jq4QN_YBsUOqQsty1OGvYv48PMaiEt1AzGD1NkYQHaxZoTyVGqMYXg0K9c0LPNWC9pkXmggApp8nygYLsQwScwAgfgBhGV0aDKQtTA_KgEAAAD__________4JpZIJ2NIJpcISLosQxiXNlY3AyNTZrMaEDBJj7_dLFACaxBfaI8KZTh_SSJUjhyAyfshimvSqo22WDdWRwgiMo"` |  |
| config.p2p.config.bootNodes[20] | string | `"enr:-Iq4QMCTfIMXnow27baRUb35Q8iiFHSIDBJh6hQM5Axohhf4b6Kr_cOCu0htQ5WvVqKvFgY28893DHAg8gnBAXsAVqmGAX53x8JggmlkgnY0gmlwhLKAlv6Jc2VjcDI1NmsxoQK6S-Cii_KmfFdUJL2TANL3ksaKUnNXvTCv1tLwXs0QgIN1ZHCCIyk"` |  |
| config.p2p.config.bootNodes[21] | string | `"enr:-KG4QE5OIg5ThTjkzrlVF32WT_-XT14WeJtIz2zoTqLLjQhYAmJlnk4ItSoH41_2x0RX0wTFIe5GgjRzU2u7Q1fN4vADhGV0aDKQqP7o7pAAAHAyAAAAAAAAAIJpZIJ2NIJpcISlFsStiXNlY3AyNTZrMaEC-Rrd_bBZwhKpXzFCrStKp1q_HmGOewxY3KwM8ofAj_ODdGNwgiMog3VkcIIjKA"` |  |
| config.p2p.config.bootNodes[22] | string | `"enr:-Ly4QFoZTWR8ulxGVsWydTNGdwEESueIdj-wB6UmmjUcm-AOPxnQi7wprzwcdo7-1jBW_JxELlUKJdJES8TDsbl1EdNlh2F0dG5ldHOI__78_v2bsV-EZXRoMpA2-lATkAAAcf__________gmlkgnY0gmlwhBLYJjGJc2VjcDI1NmsxoQI0gujXac9rMAb48NtMqtSTyHIeNYlpjkbYpWJw46PmYYhzeW5jbmV0cw-DdGNwgiMog3VkcIIjKA"` |  |
| config.p2p.config.bootNodes[2] | string | `"enr:-KG4QOtcP9X1FbIMOe17QNMKqDxCpm14jcX5tiOE4_TyMrFqbmhPZHK_ZPG2Gxb1GE2xdtodOfx9-cgvNtxnRyHEmC0ghGV0aDKQ9aX9QgAAAAD__________4JpZIJ2NIJpcIQDE8KdiXNlY3AyNTZrMaEDhpehBDbZjM_L9ek699Y7vhUJ-eAdMyQW_Fil522Y0fODdGNwgiMog3VkcIIjKA"` |  |
| config.p2p.config.bootNodes[3] | string | `"enr:-KG4QDyytgmE4f7AnvW-ZaUOIi9i79qX4JwjRAiXBZCU65wOfBu-3Nb5I7b_Rmg3KCOcZM_C3y5pg7EBU5XGrcLTduQEhGV0aDKQ9aX9QgAAAAD__________4JpZIJ2NIJpcIQ2_DUbiXNlY3AyNTZrMaEDKnz_-ps3UUOfHWVYaskI5kWYO_vtYMGYCQRAR3gHDouDdGNwgiMog3VkcIIjKA"` |  |
| config.p2p.config.bootNodes[4] | string | `"enr:-KG4QL-eqFoHy0cI31THvtZjpYUu_Jdw_MO7skQRJxY1g5HTN1A0epPCU6vi0gLGUgrzpU-ygeMSS8ewVxDpKfYmxMMGhGV0aDKQtTA_KgAAAAD__________4JpZIJ2NIJpcIQ2_DUbiXNlY3AyNTZrMaED8GJ2vzUqgL6-KD1xalo1CsmY4X1HaDnyl6Y_WayCo9GDdGNwgiMog3VkcIIjKA"` |  |
| config.p2p.config.bootNodes[5] | string | `"enr:-Ku4QImhMc1z8yCiNJ1TyUxdcfNucje3BGwEHzodEZUan8PherEo4sF7pPHPSIB1NNuSg5fZy7qFsjmUKs2ea1Whi0EBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1pf1CAAAAAP__________gmlkgnY0gmlwhBLf22SJc2VjcDI1NmsxoQOVphkDqal4QzPMksc5wnpuC3gvSC8AfbFOnZY_On34wIN1ZHCCIyg"` |  |
| config.p2p.config.bootNodes[6] | string | `"enr:-Ku4QP2xDnEtUXIjzJ_DhlCRN9SN99RYQPJL92TMlSv7U5C1YnYLjwOQHgZIUXw6c-BvRg2Yc2QsZxxoS_pPRVe0yK8Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1pf1CAAAAAP__________gmlkgnY0gmlwhBLf22SJc2VjcDI1NmsxoQMeFF5GrS7UZpAH2Ly84aLK-TyvH-dRo0JM1i8yygH50YN1ZHCCJxA"` |  |
| config.p2p.config.bootNodes[7] | string | `"enr:-Ku4QPp9z1W4tAO8Ber_NQierYaOStqhDqQdOPY3bB3jDgkjcbk6YrEnVYIiCBbTxuar3CzS528d2iE7TdJsrL-dEKoBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1pf1CAAAAAP__________gmlkgnY0gmlwhBLf22SJc2VjcDI1NmsxoQMw5fqqkw2hHC4F5HZZDPsNmPdB1Gi8JPQK7pRc9XHh-oN1ZHCCKvg"` |  |
| config.p2p.config.bootNodes[8] | string | `"enr:-LK4QA8FfhaAjlb_BXsXxSfiysR7R52Nhi9JBt4F8SPssu8hdE1BXQQEtVDC3qStCW60LSO7hEsVHv5zm8_6Vnjhcn0Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhAN4aBKJc2VjcDI1NmsxoQJerDhsJ-KxZ8sHySMOCmTO6sHM3iCFQ6VMvLTe948MyYN0Y3CCI4yDdWRwgiOM"` |  |
| config.p2p.config.bootNodes[9] | string | `"enr:-LK4QKWrXTpV9T78hNG6s8AM6IO4XH9kFT91uZtFg1GcsJ6dKovDOr1jtAAFPnS2lvNltkOGA9k29BUN7lFh_sjuc9QBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhANAdd-Jc2VjcDI1NmsxoQLQa6ai7y9PMN5hpLe5HmiJSlYzMuzP7ZhwRiwHvqNXdoN0Y3CCI4yDdWRwgiOM"` |  |
| config.p2p.config.discV4 | bool | `true` |  |
| config.p2p.config.discV5 | bool | `true` |  |
| config.p2p.config.restart | string | `"120s"` |  |
| config.p2p.type | string | `"static"` |  |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the xatu container |
| customCommand | list | `[]` | Command replacement for the xatu container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | xatu container pull policy |
| image.repository | string | `"ethpandaops/xatu"` | xatu container image repository |
| image.tag | string | `"latest"` | xatu container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| initContainers | list | `[]` | Additional init containers |
| lifecycle | object | See `values.yaml` | Lifecycle hooks |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `90` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/xatu-discovery/Chart.yaml
================================================
apiVersion: v2
name: xatu-discovery
description: Ethereum p2p monitoring tool that discovers node records.
home: https://github.com/ethpandaops/xatu
type: application
version: 0.0.6
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org
  - name: savid
    email: andrew.davis@ethereum.org



================================================
FILE: charts/xatu-discovery/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/xatu-discovery/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- xatu container image repository
  repository: ethpandaops/xatu
  # -- xatu container image tag
  tag: latest
  # -- xatu container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

config:
  logging: "info"
  metricsAddr: ":9090"
  coordinator:
    address: localhost:8080
    tls: false
    headers:
      authorization: Someb64Value
    maxQueueSize: 51200
    batchTimeout: 5s
    exportTimeout: 30s
    maxExportBatchSize: 512
    concurrentExecutionPeers: 100
  p2p:
    type: static
    config:
      discV4: true
      discV5: true
      restart: 120s
      bootNodes:
        #################################
        # Mainnet
        #################################
        # Lighthouse
        - enr:-Jq4QItoFUuug_n_qbYbU0OY04-np2wT8rUCauOOXNi0H3BWbDj-zbfZb7otA7jZ6flbBpx1LNZK2TDebZ9dEKx84LYBhGV0aDKQtTA_KgEAAAD__________4JpZIJ2NIJpcISsaa0ZiXNlY3AyNTZrMaEDHAD2JKYevx89W0CcFJFiskdcEzkH_Wdv9iW42qLK79ODdWRwgiMo
        - enr:-Jq4QN_YBsUOqQsty1OGvYv48PMaiEt1AzGD1NkYQHaxZoTyVGqMYXg0K9c0LPNWC9pkXmggApp8nygYLsQwScwAgfgBhGV0aDKQtTA_KgEAAAD__________4JpZIJ2NIJpcISLosQxiXNlY3AyNTZrMaEDBJj7_dLFACaxBfaI8KZTh_SSJUjhyAyfshimvSqo22WDdWRwgiMo
        # Teku
        - enr:-KG4QOtcP9X1FbIMOe17QNMKqDxCpm14jcX5tiOE4_TyMrFqbmhPZHK_ZPG2Gxb1GE2xdtodOfx9-cgvNtxnRyHEmC0ghGV0aDKQ9aX9QgAAAAD__________4JpZIJ2NIJpcIQDE8KdiXNlY3AyNTZrMaEDhpehBDbZjM_L9ek699Y7vhUJ-eAdMyQW_Fil522Y0fODdGNwgiMog3VkcIIjKA
        - enr:-KG4QDyytgmE4f7AnvW-ZaUOIi9i79qX4JwjRAiXBZCU65wOfBu-3Nb5I7b_Rmg3KCOcZM_C3y5pg7EBU5XGrcLTduQEhGV0aDKQ9aX9QgAAAAD__________4JpZIJ2NIJpcIQ2_DUbiXNlY3AyNTZrMaEDKnz_-ps3UUOfHWVYaskI5kWYO_vtYMGYCQRAR3gHDouDdGNwgiMog3VkcIIjKA
        - enr:-KG4QL-eqFoHy0cI31THvtZjpYUu_Jdw_MO7skQRJxY1g5HTN1A0epPCU6vi0gLGUgrzpU-ygeMSS8ewVxDpKfYmxMMGhGV0aDKQtTA_KgAAAAD__________4JpZIJ2NIJpcIQ2_DUbiXNlY3AyNTZrMaED8GJ2vzUqgL6-KD1xalo1CsmY4X1HaDnyl6Y_WayCo9GDdGNwgiMog3VkcIIjKA
        # Prysm
        - enr:-Ku4QImhMc1z8yCiNJ1TyUxdcfNucje3BGwEHzodEZUan8PherEo4sF7pPHPSIB1NNuSg5fZy7qFsjmUKs2ea1Whi0EBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1pf1CAAAAAP__________gmlkgnY0gmlwhBLf22SJc2VjcDI1NmsxoQOVphkDqal4QzPMksc5wnpuC3gvSC8AfbFOnZY_On34wIN1ZHCCIyg
        - enr:-Ku4QP2xDnEtUXIjzJ_DhlCRN9SN99RYQPJL92TMlSv7U5C1YnYLjwOQHgZIUXw6c-BvRg2Yc2QsZxxoS_pPRVe0yK8Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1pf1CAAAAAP__________gmlkgnY0gmlwhBLf22SJc2VjcDI1NmsxoQMeFF5GrS7UZpAH2Ly84aLK-TyvH-dRo0JM1i8yygH50YN1ZHCCJxA
        - enr:-Ku4QPp9z1W4tAO8Ber_NQierYaOStqhDqQdOPY3bB3jDgkjcbk6YrEnVYIiCBbTxuar3CzS528d2iE7TdJsrL-dEKoBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1pf1CAAAAAP__________gmlkgnY0gmlwhBLf22SJc2VjcDI1NmsxoQMw5fqqkw2hHC4F5HZZDPsNmPdB1Gi8JPQK7pRc9XHh-oN1ZHCCKvg
        # Nimbus
        - enr:-LK4QA8FfhaAjlb_BXsXxSfiysR7R52Nhi9JBt4F8SPssu8hdE1BXQQEtVDC3qStCW60LSO7hEsVHv5zm8_6Vnjhcn0Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhAN4aBKJc2VjcDI1NmsxoQJerDhsJ-KxZ8sHySMOCmTO6sHM3iCFQ6VMvLTe948MyYN0Y3CCI4yDdWRwgiOM
        - enr:-LK4QKWrXTpV9T78hNG6s8AM6IO4XH9kFT91uZtFg1GcsJ6dKovDOr1jtAAFPnS2lvNltkOGA9k29BUN7lFh_sjuc9QBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhANAdd-Jc2VjcDI1NmsxoQLQa6ai7y9PMN5hpLe5HmiJSlYzMuzP7ZhwRiwHvqNXdoN0Y3CCI4yDdWRwgiOM
        # EF
        - enr:-Ku4QHqVeJ8PPICcWk1vSn_XcSkjOkNiTg6Fmii5j6vUQgvzMc9L1goFnLKgXqBJspJjIsB91LTOleFmyWWrFVATGngBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhAMRHkWJc2VjcDI1NmsxoQKLVXFOhp2uX6jeT0DvvDpPcU8FWMjQdR4wMuORMhpX24N1ZHCCIyg
        - enr:-Ku4QG-2_Md3sZIAUebGYT6g0SMskIml77l6yR-M_JXc-UdNHCmHQeOiMLbylPejyJsdAPsTHJyjJB2sYGDLe0dn8uYBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhBLY-NyJc2VjcDI1NmsxoQORcM6e19T1T9gi7jxEZjk_sjVLGFscUNqAY9obgZaxbIN1ZHCCIyg
        - enr:-Ku4QPn5eVhcoF1opaFEvg1b6JNFD2rqVkHQ8HApOKK61OIcIXD127bKWgAtbwI7pnxx6cDyk_nI88TrZKQaGMZj0q0Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhDayLMaJc2VjcDI1NmsxoQK2sBOLGcUb4AwuYzFuAVCaNHA-dy24UuEKkeFNgCVCsIN1ZHCCIyg
        - enr:-Ku4QEWzdnVtXc2Q0ZVigfCGggOVB2Vc1ZCPEc6j21NIFLODSJbvNaef1g4PxhPwl_3kax86YPheFUSLXPRs98vvYsoBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpC1MD8qAAAAAP__________gmlkgnY0gmlwhDZBrP2Jc2VjcDI1NmsxoQM6jr8Rb1ktLEsVcKAPa08wCsKUmvoQ8khiOl_SLozf9IN1ZHCCIyg
        #################################
        # Goerli
        #################################
        # Prysm
        - enr:-Ku4QFmUkNp0g9bsLX2PfVeIyT-9WO-PZlrqZBNtEyofOOfLMScDjaTzGxIb1Ns9Wo5Pm_8nlq-SZwcQfTH2cgO-s88Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpDkvpOTAAAQIP__________gmlkgnY0gmlwhBLf22SJc2VjcDI1NmsxoQLV_jMOIxKbjHFKgrkFvwDvpexo6Nd58TK5k7ss4Vt0IoN1ZHCCG1g
        # Lighthouse
        - enr:-LK4QLINdtobGquK7jukLDAKmsrH2ZuHM4k0TklY5jDTD4ZgfxR9weZmo5Jwu81hlKu3qPAvk24xHGBDjYs4o8f1gZ0Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpB53wQoAAAQIP__________gmlkgnY0gmlwhDRN_P6Jc2VjcDI1NmsxoQJuNujTgsJUHUgVZML3pzrtgNtYg7rQ4K1tkWERgl0DdoN0Y3CCIyiDdWRwgiMo
        - enr:-LK4QH1xnjotgXwg25IDPjrqRGFnH1ScgNHA3dv1Z8xHCp4uP3N3Jjl_aYv_WIxQRdwZvSukzbwspXZ7JjpldyeVDzMCh2F0dG5ldHOIAAAAAAAAAACEZXRoMpB53wQoAAAQIP__________gmlkgnY0gmlwhIe1te-Jc2VjcDI1NmsxoQOkcGXqbCJYbcClZ3z5f6NWhX_1YPFRYRRWQpJjwSHpVIN0Y3CCIyiDdWRwgiMo
        - enr:-Ly4QFPk-cTMxZ3jWTafiNblEZkQIXGF2aVzCIGW0uHp6KaEAvBMoctE8S7YU0qZtuS7By0AA4YMfKoN9ls_GJRccVpFh2F0dG5ldHOI__________-EZXRoMpCC9KcrAgAQIIS2AQAAAAAAgmlkgnY0gmlwhKh3joWJc2VjcDI1NmsxoQKrxz8M1IHwJqRIpDqdVW_U1PeixMW5SfnBD-8idYIQrIhzeW5jbmV0cw-DdGNwgiMog3VkcIIjKA
        - enr:-L64QJmwSDtaHVgGiqIxJWUtxWg6uLCipsms6j-8BdsOJfTWAs7CLF9HJnVqFE728O-JYUDCxzKvRdeMqBSauHVCMdaCAVWHYXR0bmV0c4j__________4RldGgykIL0pysCABAghLYBAAAAAACCaWSCdjSCaXCEQWxOdolzZWNwMjU2azGhA7Qmod9fK86WidPOzLsn5_8QyzL7ZcJ1Reca7RnD54vuiHN5bmNuZXRzD4N0Y3CCIyiDdWRwgiMo
        # Teku
        - enr:-KG4QCIzJZTY_fs_2vqWEatJL9RrtnPwDCv-jRBuO5FQ2qBrfJubWOWazri6s9HsyZdu-fRUfEzkebhf1nvO42_FVzwDhGV0aDKQed8EKAAAECD__________4JpZIJ2NIJpcISHtbYziXNlY3AyNTZrMaED4m9AqVs6F32rSCGsjtYcsyfQE2K8nDiGmocUY_iq-TSDdGNwgiMog3VkcIIjKA
        #################################
        # Sepolia
        #################################
        # EF
        - enr:-Iq4QMCTfIMXnow27baRUb35Q8iiFHSIDBJh6hQM5Axohhf4b6Kr_cOCu0htQ5WvVqKvFgY28893DHAg8gnBAXsAVqmGAX53x8JggmlkgnY0gmlwhLKAlv6Jc2VjcDI1NmsxoQK6S-Cii_KmfFdUJL2TANL3ksaKUnNXvTCv1tLwXs0QgIN1ZHCCIyk
        - enr:-KG4QE5OIg5ThTjkzrlVF32WT_-XT14WeJtIz2zoTqLLjQhYAmJlnk4ItSoH41_2x0RX0wTFIe5GgjRzU2u7Q1fN4vADhGV0aDKQqP7o7pAAAHAyAAAAAAAAAIJpZIJ2NIJpcISlFsStiXNlY3AyNTZrMaEC-Rrd_bBZwhKpXzFCrStKp1q_HmGOewxY3KwM8ofAj_ODdGNwgiMog3VkcIIjKA
        # Teku
        - enr:-Ly4QFoZTWR8ulxGVsWydTNGdwEESueIdj-wB6UmmjUcm-AOPxnQi7wprzwcdo7-1jBW_JxELlUKJdJES8TDsbl1EdNlh2F0dG5ldHOI__78_v2bsV-EZXRoMpA2-lATkAAAcf__________gmlkgnY0gmlwhBLYJjGJc2VjcDI1NmsxoQI0gujXac9rMAb48NtMqtSTyHIeNYlpjkbYpWJw46PmYYhzeW5jbmV0cw-DdGNwgiMog3VkcIIjKA

# -- Custom args for the xatu container
customArgs: []

# -- Command replacement for the xatu container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Lifecycle hooks
# @default -- See `values.yaml`
lifecycle:
  preStop:
    exec:
      command:
      - /bin/sleep
      - "30"

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 90

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/xatu-discovery/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/xatu-discovery/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "xatu-discovery.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "xatu-discovery.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "xatu-discovery.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "xatu-discovery.labels" -}}
helm.sh/chart: {{ include "xatu-discovery.chart" . }}
{{ include "xatu-discovery.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "xatu-discovery.selectorLabels" -}}
app.kubernetes.io/name: {{ include "xatu-discovery.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "xatu-discovery.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "xatu-discovery.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "xatu-discovery.metricsPort" -}}
{{ (split ":" .Values.config.metricsAddr)._1 | default ":9090" }}
{{- end -}}

{{- define "xatu-discovery.pprofPort" -}}
{{- if .Values.config.pprofAddr -}}
{{ (split ":" .Values.config.pprofAddr)._1 | default "6060" }}
{{- end -}}
{{- end -}}



================================================
FILE: charts/xatu-discovery/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "xatu-discovery.fullname" . }}
  labels:
    {{- include "xatu-discovery.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{ toYaml .Values.config | nindent 4 }}



================================================
FILE: charts/xatu-discovery/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "xatu-discovery.fullname" . }}
  labels:
    {{- include "xatu-discovery.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "xatu-discovery.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "xatu-discovery.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "xatu-discovery.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/xatu"
          - "discovery"
          - --config=/config.yaml
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 10}}
          {{- end }}
        ports:
          - name: metrics
            containerPort: {{ include "xatu-discovery.metricsPort" . }}
            protocol: TCP
          {{- if (include "xatu-discovery.pprofPort" .) }}
          - name: pprof
            containerPort: {{ include "xatu-discovery.pprofPort" . }}
            protocol: TCP
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        lifecycle:
          {{- toYaml .Values.lifecycle | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "xatu-discovery.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "xatu-discovery.fullname" . }}



================================================
FILE: charts/xatu-discovery/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "xatu-discovery.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "xatu-discovery.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "xatu-discovery.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "xatu-discovery.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "xatu-discovery.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/xatu-discovery/templates/pdb.yaml
================================================
{{- if or .Values.podDisruptionBudget.minAvailable .Values.podDisruptionBudget.maxUnavailable -}}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "xatu-discovery.fullname" . }}
  labels:
    {{- include "xatu-discovery.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "xatu-discovery.selectorLabels" . | nindent 6 }}
  {{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
  {{- end  }}
  {{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
  {{- end  }}
{{- end -}}


================================================
FILE: charts/xatu-discovery/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "xatu-discovery.fullname" . }}-env
  labels:
    {{- include "xatu-discovery.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/xatu-discovery/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "xatu-discovery.fullname" . }}
  labels:
    {{- include "xatu-discovery.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "xatu-discovery.metricsPort" . }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    {{- if (include "xatu-discovery.pprofPort" .) }}
    - port: {{ include "xatu-discovery.pprofPort" . }}
      targetPort: pprof
      protocol: TCP
      name: pprof
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "xatu-discovery.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/xatu-discovery/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "xatu-discovery.serviceAccountName" . }}
  labels:
    {{- include "xatu-discovery.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/xatu-discovery/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "xatu-discovery.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "xatu-discovery.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "xatu-discovery.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/xatu-mimicry/README.md
================================================

# xatu-mimicry

![Version: 0.0.7](https://img.shields.io/badge/Version-0.0.7-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Ethereum p2p monitoring tool that collects data from the execution layer.

**Homepage:** <https://github.com/ethpandaops/xatu>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| config.captureDelay | string | `"3m"` |  |
| config.coordinator.config.nodeRecords[0] | string | `"enode://dd47aff4da11c82496fec9253a1d2dac8c4abdbf93ff7458cf7965447355c265907b41dbd8c4b1dded6ae28b5a4d2d6b4d3fdad2950e5b6ef56169958b80b450@127.0.0.1:30301"` |  |
| config.coordinator.config.retryInterval | string | `"60s"` |  |
| config.coordinator.type | string | `"static"` |  |
| config.logging | string | `"info"` |  |
| config.metricsAddr | string | `":9090"` |  |
| config.name | string | `"example-instance"` |  |
| config.ntpServer | string | `"time.google.com"` |  |
| config.outputs[0].config.address | string | `"http://localhost:8080"` |  |
| config.outputs[0].config.batchTimeout | string | `"5s"` |  |
| config.outputs[0].config.exportTimeout | string | `"30s"` |  |
| config.outputs[0].config.headers.authorization | string | `"Someb64Value"` |  |
| config.outputs[0].config.maxExportBatchSize | int | `512` |  |
| config.outputs[0].config.maxQueueSize | int | `51200` |  |
| config.outputs[0].name | string | `"basic"` |  |
| config.outputs[0].type | string | `"http"` |  |
| config.probeAddr | string | `":8080"` |  |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the xatu container |
| customCommand | list | `[]` | Command replacement for the xatu container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | xatu container pull policy |
| image.repository | string | `"ethpandaops/xatu"` | xatu container image repository |
| image.tag | string | `"latest"` | xatu container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| initContainers | list | `[]` | Additional init containers |
| lifecycle | object | See `values.yaml` | Lifecycle hooks |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `90` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/xatu-mimicry/Chart.yaml
================================================
apiVersion: v2
name: xatu-mimicry
description: Ethereum p2p monitoring tool that collects data from the execution layer.
home: https://github.com/ethpandaops/xatu
type: application
version: 0.0.7
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org
  - name: savid
    email: andrew.davis@ethereum.org



================================================
FILE: charts/xatu-mimicry/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/xatu-mimicry/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- xatu container image repository
  repository: ethpandaops/xatu
  # -- xatu container image tag
  tag: latest
  # -- xatu container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

config:
  logging: "info"
  metricsAddr: ":9090"
  probeAddr: ":8080"
  name: example-instance
  ntpServer: time.google.com
  captureDelay: 3m
  coordinator:
    type: static
    config:
      retryInterval: 60s
      nodeRecords:
      - enode://dd47aff4da11c82496fec9253a1d2dac8c4abdbf93ff7458cf7965447355c265907b41dbd8c4b1dded6ae28b5a4d2d6b4d3fdad2950e5b6ef56169958b80b450@127.0.0.1:30301
  outputs:
  - name: basic
    type: http
    config:
      address: http://localhost:8080
      headers:
        authorization: Someb64Value
      maxQueueSize: 51200
      batchTimeout: 5s
      exportTimeout: 30s
      maxExportBatchSize: 512

# -- Custom args for the xatu container
customArgs: []

# -- Command replacement for the xatu container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: probe
  initialDelaySeconds: 180 # should match config.captureDelay
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: probe
  initialDelaySeconds: 180 # should match config.captureDelay
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Lifecycle hooks
# @default -- See `values.yaml`
lifecycle:
  preStop:
    exec:
      command:
      - /bin/sleep
      - "30"

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 90

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/xatu-mimicry/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/xatu-mimicry/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "xatu-mimicry.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "xatu-mimicry.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "xatu-mimicry.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "xatu-mimicry.labels" -}}
helm.sh/chart: {{ include "xatu-mimicry.chart" . }}
{{ include "xatu-mimicry.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "xatu-mimicry.selectorLabels" -}}
app.kubernetes.io/name: {{ include "xatu-mimicry.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "xatu-mimicry.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "xatu-mimicry.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "xatu-mimicry.metricsPort" -}}
{{ (split ":" .Values.config.metricsAddr)._1 | default ":9090" }}
{{- end -}}

{{- define "xatu-mimicry.pprofPort" -}}
{{- if .Values.config.pprofAddr -}}
{{ (split ":" .Values.config.pprofAddr)._1 | default "6060" }}
{{- end -}}
{{- end -}}

{{- define "xatu-mimicry.probePort" -}}
{{- if .Values.config.probeAddr -}}
{{ (split ":" .Values.config.probeAddr)._1 | default "8080" }}
{{- end -}}
{{- end -}}


================================================
FILE: charts/xatu-mimicry/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "xatu-mimicry.fullname" . }}
  labels:
    {{- include "xatu-mimicry.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{ toYaml .Values.config | nindent 4 }}



================================================
FILE: charts/xatu-mimicry/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "xatu-mimicry.fullname" . }}
  labels:
    {{- include "xatu-mimicry.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "xatu-mimicry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "xatu-mimicry.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "xatu-mimicry.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/xatu"
          - "mimicry"
          - --config=/config.yaml
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 10}}
          {{- end }}
        ports:
          - name: metrics
            containerPort: {{ include "xatu-mimicry.metricsPort" . }}
            protocol: TCP
          {{- if (include "xatu-mimicry.pprofPort" .) }}
          - name: pprof
            containerPort: {{ include "xatu-mimicry.pprofPort" . }}
            protocol: TCP
          {{- end }}
          {{- if (include "xatu-mimicry.probePort" .) }}
          - name: probe
            containerPort: {{ include "xatu-mimicry.probePort" . }}
            protocol: TCP
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        lifecycle:
          {{- toYaml .Values.lifecycle | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "xatu-mimicry.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "xatu-mimicry.fullname" . }}



================================================
FILE: charts/xatu-mimicry/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "xatu-mimicry.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "xatu-mimicry.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "xatu-mimicry.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "xatu-mimicry.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "xatu-mimicry.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/xatu-mimicry/templates/pdb.yaml
================================================
{{- if or .Values.podDisruptionBudget.minAvailable .Values.podDisruptionBudget.maxUnavailable -}}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "xatu-mimicry.fullname" . }}
  labels:
    {{- include "xatu-mimicry.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "xatu-mimicry.selectorLabels" . | nindent 6 }}
  {{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
  {{- end  }}
  {{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
  {{- end  }}
{{- end -}}


================================================
FILE: charts/xatu-mimicry/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "xatu-mimicry.fullname" . }}-env
  labels:
    {{- include "xatu-mimicry.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/xatu-mimicry/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "xatu-mimicry.fullname" . }}
  labels:
    {{- include "xatu-mimicry.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "xatu-mimicry.metricsPort" . }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    {{- if (include "xatu-mimicry.pprofPort" .) }}
    - port: {{ include "xatu-mimicry.pprofPort" . }}
      targetPort: pprof
      protocol: TCP
      name: pprof
    {{- end }}
    {{- if (include "xatu-mimicry.probePort" .) }}
    - port: {{ include "xatu-mimicry.probePort" . }}
      targetPort: probe
      protocol: TCP
      name: probe
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "xatu-mimicry.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/xatu-mimicry/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "xatu-mimicry.serviceAccountName" . }}
  labels:
    {{- include "xatu-mimicry.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/xatu-mimicry/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "xatu-mimicry.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "xatu-mimicry.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "xatu-mimicry.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/xatu-relay-monitor/README.md
================================================

# xatu-relay-monitor

![Version: 0.0.1](https://img.shields.io/badge/Version-0.0.1-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Xatu Relay Monitor

**Homepage:** <https://github.com/ethpandaops/xatu>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| config | object | `{"ethereum":{"genesisSszUrl":"https://raw.githubusercontent.com/eth-clients/mainnet/main/metadata/genesis.ssz","network":"mainnet","networkConfigUrl":"https://raw.githubusercontent.com/eth-clients/mainnet/main/metadata/config.yaml","slotsPerEpoch":32},"logging":"info","metricsAddr":":9090","name":"example-instance","outputs":[{"config":{"address":"http://localhost:8080","batchTimeout":"5s","exportTimeout":"30s","headers":{"authorization":"Someb64Value"},"maxExportBatchSize":512,"maxQueueSize":51200},"name":"basic","type":"http"}],"relays":[{"name":"Flashbots","url":"https://0xac6e77dfe25ecd6110b8e780608cce0dab71fdd5ebea22a16c0205200f2f8e2e3ad3b71d3499c54ad14d6c21b41a37ae@boost-relay.flashbots.net"},{"name":"Aestus","url":"https://0xa15b52576bcbf1072f4a011c0f99f9fb6c66f3e1ff321f11f461d15e31b1cb359caa092c71bbded0bae5b5ea401aab7e@aestus.live"},{"name":"Agnostic Gnosis","url":"https://0xa7ab7a996c8584251c8f925da3170bdfd6ebc75d50f5ddc4050a6fdc77f2a3b5fce2cc750d0865e05d7228af97d69561@agnostic-relay.net"},{"name":"BloXroute Max Profit","url":"https://0x8b5d2e73e2a3a55c6c87b8b6eb92e0149a125c852751db1422fa951e42a09b82c142c3ea98d0d9930b056a3bc9896b8f@bloxroute.max-profit.blxrbdn.com"},{"name":"BloXroute Regulated","url":"https://0xb0b07cd0abef743db4260b0ed50619cf6ad4d82064cb4fbec9d3ec530f7c5e6793d9f286c4e082c0244ffb9f2658fe88@bloxroute.regulated.blxrbdn.com"},{"name":"Eden Network","url":"https://0xb3ee7afcf27f1f1259ac1787876318c6584ee353097a50ed84f51a1f21a323b3736f271a895c7ce918c038e4265918be@relay.edennetwork.io"},{"name":"Manifold","url":"https://0x98650451ba02064f7b000f5768cf0cf4d4e492317d82871bdc87ef841a0743f69f0f1eea11168503240ac35d101c9135@mainnet-relay.securerpc.com"},{"name":"Ultra Sound","url":"https://0xa1559ace749633b997cb3fdacffb890aeebdb0f5a3b6aaa7eeeaf1a38af0a8fe88b9e4b1f61f236d2e64d95733327a62@relay.ultrasound.money"},{"name":"Wenmerge","url":"https://0x8c7d33605ecef85403f8b7289c8058f440cbb6bf72b055dfe2f3e2c6695b6a1ea5a9cd0eb3a7982927a463feb4c3dae2@relay.wenmerge.com"},{"name":"Titan Relay","url":"https://0x8c4ed5e24fe5c6ae21018437bde147693f68cda427cd1122cf20819c30eda7ed74f72dece09bb313f2a1855595ab677d@titanrelay.xyz"}],"schedule":{"atSlotTimes":["4s"]}}` | Xatu config |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the xatu container |
| customCommand | list | `[]` | Command replacement for the xatu container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | xatu container pull policy |
| image.repository | string | `"ethpandaops/xatu"` | xatu container image repository |
| image.tag | string | `"latest"` | xatu container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| initContainers | list | `[]` | Additional init containers |
| lifecycle | object | See `values.yaml` | Lifecycle hooks |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `90` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/xatu-relay-monitor/Chart.yaml
================================================
apiVersion: v2
name: xatu-relay-monitor
description: Xatu Relay Monitor
home: https://github.com/ethpandaops/xatu
type: application
version: 0.0.1
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org
  - name: savid
    email: andrew.davis@ethereum.org



================================================
FILE: charts/xatu-relay-monitor/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/xatu-relay-monitor/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- xatu container image repository
  repository: ethpandaops/xatu
  # -- xatu container image tag
  tag: latest
  # -- xatu container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

# -- Xatu config
config:
  logging: "info"
  metricsAddr: ":9090"
  name: example-instance

  ethereum:
    network: mainnet
    networkConfigUrl: https://raw.githubusercontent.com/eth-clients/mainnet/main/metadata/config.yaml
    genesisSszUrl: https://raw.githubusercontent.com/eth-clients/mainnet/main/metadata/genesis.ssz
    slotsPerEpoch: 32
    # network: holesky
    # networkConfigUrl: https://raw.githubusercontent.com/eth-clients/holesky/main/metadata/config.yaml
    # genesisSszUrl: https://raw.githubusercontent.com/eth-clients/holesky/main/metadata/genesis.ssz
    # slotsPerEpoch: 32

    # network: sepolia
    # networkConfigUrl: https://raw.githubusercontent.com/eth-clients/sepolia/main/metadata/config.yaml
    # genesisSszUrl: https://raw.githubusercontent.com/eth-clients/sepolia/main/metadata/genesis.ssz
    # slotsPerEpoch: 32
  relays:
    # Mainnet relays
    - name: "Flashbots"
      url: https://0xac6e77dfe25ecd6110b8e780608cce0dab71fdd5ebea22a16c0205200f2f8e2e3ad3b71d3499c54ad14d6c21b41a37ae@boost-relay.flashbots.net
    - name: "Aestus"
      url: https://0xa15b52576bcbf1072f4a011c0f99f9fb6c66f3e1ff321f11f461d15e31b1cb359caa092c71bbded0bae5b5ea401aab7e@aestus.live
    - name: "Agnostic Gnosis"
      url: https://0xa7ab7a996c8584251c8f925da3170bdfd6ebc75d50f5ddc4050a6fdc77f2a3b5fce2cc750d0865e05d7228af97d69561@agnostic-relay.net
    - name: "BloXroute Max Profit"
      url: https://0x8b5d2e73e2a3a55c6c87b8b6eb92e0149a125c852751db1422fa951e42a09b82c142c3ea98d0d9930b056a3bc9896b8f@bloxroute.max-profit.blxrbdn.com
    - name: "BloXroute Regulated"
      url: https://0xb0b07cd0abef743db4260b0ed50619cf6ad4d82064cb4fbec9d3ec530f7c5e6793d9f286c4e082c0244ffb9f2658fe88@bloxroute.regulated.blxrbdn.com
    - name: "Eden Network"
      url: https://0xb3ee7afcf27f1f1259ac1787876318c6584ee353097a50ed84f51a1f21a323b3736f271a895c7ce918c038e4265918be@relay.edennetwork.io
    - name: "Manifold"
      url: https://0x98650451ba02064f7b000f5768cf0cf4d4e492317d82871bdc87ef841a0743f69f0f1eea11168503240ac35d101c9135@mainnet-relay.securerpc.com
    - name: "Ultra Sound"
      url: https://0xa1559ace749633b997cb3fdacffb890aeebdb0f5a3b6aaa7eeeaf1a38af0a8fe88b9e4b1f61f236d2e64d95733327a62@relay.ultrasound.money
    - name: "Wenmerge"
      url: https://0x8c7d33605ecef85403f8b7289c8058f440cbb6bf72b055dfe2f3e2c6695b6a1ea5a9cd0eb3a7982927a463feb4c3dae2@relay.wenmerge.com
    - name: "Titan Relay"
      url: https://0x8c4ed5e24fe5c6ae21018437bde147693f68cda427cd1122cf20819c30eda7ed74f72dece09bb313f2a1855595ab677d@titanrelay.xyz
    # # Holesky
    # - name: "BloXroute"
    #   url: https://0x821f2a65afb70e7f2e820a925a9b4c80a159620582c1766b1b09729fec178b11ea22abb3a51f07b288be815a1a2ff516@bloxroute.holesky.blxrbdn.com
    # - name: "Eden Network"
    #   url: https://0xb1d229d9c21298a87846c7022ebeef277dfc321fe674fa45312e20b5b6c400bfde9383f801848d7837ed5fc449083a12@relay-holesky.edennetwork.io
    # - name: "Flashbots"
    #   url: https://0xafa4c6985aa049fb79dd37010438cfebeb0f2bd42b115b89dd678dab0670c1de38da0c4e9138c9290a398ecd9a0b3110@boost-relay-holesky.flashbots.net
    # - name: "Aestus"
    #   url: https://0xab78bf8c781c58078c3beb5710c57940874dd96aef2835e7742c866b4c7c0406754376c2c8285a36c630346aa5c5f833@holesky.aestus.live
    # - name: "Ultra Sound"
    #   url: https://0xb1559beef7b5ba3127485bbbb090362d9f497ba64e177ee2c8e7db74746306efad687f2cf8574e38d70067d40ef136dc@relay-stag.ultrasound.money
    # - name: "Titan Relay"
    #   url: https://0xaa58208899c6105603b74396734a6263cc7d947f444f396a90f7b7d3e65d102aec7e5e5291b27e08d02c50a050825c2f@holesky.titanrelay.xyz
    # # Sepolia
    # - name: "Flashbots"
    #   url: https://0xafa4c6985aa049fb79dd37010438cfebeb0f2bd42b115b89dd678dab0670c1de38da0c4e9138c9290a398ecd9a0b3110@boost-relay-sepolia.flashbots.net
  schedule:
    atSlotTimes:
      - "4s"
      # - "12s"
  outputs:
  - name: basic
    type: http
    config:
      address: http://localhost:8080
      headers:
        authorization: Someb64Value
      maxQueueSize: 51200
      batchTimeout: 5s
      exportTimeout: 30s
      maxExportBatchSize: 512

# -- Custom args for the xatu container
customArgs: []

# -- Command replacement for the xatu container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Lifecycle hooks
# @default -- See `values.yaml`
lifecycle:
  preStop:
    exec:
      command:
      - /bin/sleep
      - "30"

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 90

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/xatu-relay-monitor/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/xatu-relay-monitor/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "xatu-relay-monitor.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "xatu-relay-monitor.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "xatu-relay-monitor.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "xatu-relay-monitor.labels" -}}
helm.sh/chart: {{ include "xatu-relay-monitor.chart" . }}
{{ include "xatu-relay-monitor.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "xatu-relay-monitor.selectorLabels" -}}
app.kubernetes.io/name: {{ include "xatu-relay-monitor.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "xatu-relay-monitor.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "xatu-relay-monitor.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "xatu-relay-monitor.metricsPort" -}}
{{ (split ":" .Values.config.metricsAddr)._1 | default ":9090" }}
{{- end -}}

{{- define "xatu-relay-monitor.pprofPort" -}}
{{- if .Values.config.pprofAddr -}}
{{ (split ":" .Values.config.pprofAddr)._1 | default "6060" }}
{{- end -}}
{{- end -}}



================================================
FILE: charts/xatu-relay-monitor/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "xatu-relay-monitor.fullname" . }}
  labels:
    {{- include "xatu-relay-monitor.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{ tpl (toYaml .Values.config | nindent 4) $ }}



================================================
FILE: charts/xatu-relay-monitor/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "xatu-relay-monitor.fullname" . }}
  labels:
    {{- include "xatu-relay-monitor.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "xatu-relay-monitor.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "xatu-relay-monitor.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "xatu-relay-monitor.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/xatu"
          - "relay-monitor"
          - --config=/config.yaml
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 10}}
          {{- end }}
        ports:
          - name: metrics
            containerPort: {{ include "xatu-relay-monitor.metricsPort" . }}
            protocol: TCP
          {{- if (include "xatu-relay-monitor.pprofPort" .) }}
          - name: pprof
            containerPort: {{ include "xatu-relay-monitor.pprofPort" . }}
            protocol: TCP
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        lifecycle:
          {{- toYaml .Values.lifecycle | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "xatu-relay-monitor.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "xatu-relay-monitor.fullname" . }}



================================================
FILE: charts/xatu-relay-monitor/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "xatu-relay-monitor.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "xatu-relay-monitor.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "xatu-relay-monitor.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "xatu-relay-monitor.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "xatu-relay-monitor.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/xatu-relay-monitor/templates/pdb.yaml
================================================
{{- if or .Values.podDisruptionBudget.minAvailable .Values.podDisruptionBudget.maxUnavailable -}}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "xatu-relay-monitor.fullname" . }}
  labels:
    {{- include "xatu-relay-monitor.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "xatu-relay-monitor.selectorLabels" . | nindent 6 }}
  {{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
  {{- end  }}
  {{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
  {{- end  }}
{{- end -}}


================================================
FILE: charts/xatu-relay-monitor/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "xatu-relay-monitor.fullname" . }}-env
  labels:
    {{- include "xatu-relay-monitor.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/xatu-relay-monitor/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "xatu-relay-monitor.fullname" . }}
  labels:
    {{- include "xatu-relay-monitor.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "xatu-relay-monitor.metricsPort" . }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    {{- if (include "xatu-relay-monitor.pprofPort" .) }}
    - port: {{ include "xatu-relay-monitor.pprofPort" . }}
      targetPort: pprof
      protocol: TCP
      name: pprof
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "xatu-relay-monitor.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/xatu-relay-monitor/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "xatu-relay-monitor.serviceAccountName" . }}
  labels:
    {{- include "xatu-relay-monitor.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/xatu-relay-monitor/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "xatu-relay-monitor.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "xatu-relay-monitor.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "xatu-relay-monitor.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/xatu-sage/README.md
================================================

# xatu-sage

![Version: 0.0.1](https://img.shields.io/badge/Version-0.0.1-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Ethereum p2p monitoring tool that connects to an Armiarma instance and derives events

**Homepage:** <https://github.com/ethpandaops/xatu>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| config.armiarmaUrl | string | `"http://localhost:9099/events"` |  |
| config.ethereum.beaconNodeAddress | string | `"http://localhost:5052"` |  |
| config.logging | string | `"info"` |  |
| config.metricsAddr | string | `":9090"` |  |
| config.name | string | `"example-instance"` |  |
| config.outputs[0].config.address | string | `"http://localhost:8080"` |  |
| config.outputs[0].config.batchTimeout | string | `"5s"` |  |
| config.outputs[0].config.exportTimeout | string | `"30s"` |  |
| config.outputs[0].config.headers.authorization | string | `"Someb64Value"` |  |
| config.outputs[0].config.maxExportBatchSize | int | `512` |  |
| config.outputs[0].config.maxQueueSize | int | `51200` |  |
| config.outputs[0].name | string | `"basic"` |  |
| config.outputs[0].type | string | `"http"` |  |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the xatu container |
| customCommand | list | `[]` | Command replacement for the xatu container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | xatu container pull policy |
| image.repository | string | `"ethpandaops/xatu"` | xatu container image repository |
| image.tag | string | `"latest"` | xatu container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| initContainers | list | `[]` | Additional init containers |
| lifecycle | object | See `values.yaml` | Lifecycle hooks |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `90` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/xatu-sage/Chart.yaml
================================================
apiVersion: v2
name: xatu-sage
description: Ethereum p2p monitoring tool that connects to an Armiarma instance and derives events
home: https://github.com/ethpandaops/xatu
type: application
version: 0.0.1
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org
  - name: savid
    email: andrew.davis@ethereum.org



================================================
FILE: charts/xatu-sage/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/xatu-sage/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- xatu container image repository
  repository: ethpandaops/xatu
  # -- xatu container image tag
  tag: latest
  # -- xatu container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

config:
  logging: "info"
  metricsAddr: ":9090"
  name: example-instance
  armiarmaUrl: http://localhost:9099/events
  ethereum:
    beaconNodeAddress: http://localhost:5052
  outputs:
  - name: basic
    type: http
    config:
      address: http://localhost:8080
      headers:
        authorization: Someb64Value
      maxQueueSize: 51200
      batchTimeout: 5s
      exportTimeout: 30s
      maxExportBatchSize: 512

# -- Custom args for the xatu container
customArgs: []

# -- Command replacement for the xatu container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Lifecycle hooks
# @default -- See `values.yaml`
lifecycle:
  preStop:
    exec:
      command:
      - /bin/sleep
      - "30"

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 90

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/xatu-sage/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/xatu-sage/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "xatu-sage.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "xatu-sage.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "xatu-sage.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "xatu-sage.labels" -}}
helm.sh/chart: {{ include "xatu-sage.chart" . }}
{{ include "xatu-sage.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "xatu-sage.selectorLabels" -}}
app.kubernetes.io/name: {{ include "xatu-sage.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "xatu-sage.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "xatu-sage.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "xatu-sage.metricsPort" -}}
{{ (split ":" .Values.config.metricsAddr)._1 | default ":9090" }}
{{- end -}}

{{- define "xatu-sage.pprofPort" -}}
{{- if .Values.config.pprofAddr -}}
{{ (split ":" .Values.config.pprofAddr)._1 | default "6060" }}
{{- end -}}
{{- end -}}



================================================
FILE: charts/xatu-sage/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "xatu-sage.fullname" . }}
  labels:
    {{- include "xatu-sage.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{ tpl (toYaml .Values.config | nindent 4) $ }}



================================================
FILE: charts/xatu-sage/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "xatu-sage.fullname" . }}
  labels:
    {{- include "xatu-sage.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "xatu-sage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "xatu-sage.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "xatu-sage.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/xatu"
          - "sage"
          - --config=/config.yaml
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 10}}
          {{- end }}
        ports:
          - name: metrics
            containerPort: {{ include "xatu-sage.metricsPort" . }}
            protocol: TCP
          {{- if (include "xatu-sage.pprofPort" .) }}
          - name: pprof
            containerPort: {{ include "xatu-sage.pprofPort" . }}
            protocol: TCP
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        lifecycle:
          {{- toYaml .Values.lifecycle | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "xatu-sage.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "xatu-sage.fullname" . }}



================================================
FILE: charts/xatu-sage/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "xatu-sage.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "xatu-sage.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "xatu-sage.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "xatu-sage.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "xatu-sage.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/xatu-sage/templates/pdb.yaml
================================================
{{- if or .Values.podDisruptionBudget.minAvailable .Values.podDisruptionBudget.maxUnavailable -}}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "xatu-sage.fullname" . }}
  labels:
    {{- include "xatu-sage.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "xatu-sage.selectorLabels" . | nindent 6 }}
  {{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
  {{- end  }}
  {{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
  {{- end  }}
{{- end -}}


================================================
FILE: charts/xatu-sage/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "xatu-sage.fullname" . }}-env
  labels:
    {{- include "xatu-sage.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/xatu-sage/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "xatu-sage.fullname" . }}
  labels:
    {{- include "xatu-sage.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "xatu-sage.metricsPort" . }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    {{- if (include "xatu-sage.pprofPort" .) }}
    - port: {{ include "xatu-sage.pprofPort" . }}
      targetPort: pprof
      protocol: TCP
      name: pprof
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "xatu-sage.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/xatu-sage/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "xatu-sage.serviceAccountName" . }}
  labels:
    {{- include "xatu-sage.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/xatu-sage/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "xatu-sage.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "xatu-sage.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "xatu-sage.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/xatu-sentry/README.md
================================================

# xatu-sentry

![Version: 0.0.8](https://img.shields.io/badge/Version-0.0.8-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Ethereum p2p monitoring tool that runs along side a Ethereum consensus client and collects data via the consensus client's Beacon API.

**Homepage:** <https://github.com/ethpandaops/xatu>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| config.ethereum.beaconNodeAddress | string | `"http://localhost:5052"` |  |
| config.logging | string | `"info"` |  |
| config.metricsAddr | string | `":9090"` |  |
| config.name | string | `"example-instance"` |  |
| config.ntpServer | string | `"time.google.com"` |  |
| config.outputs[0].config.address | string | `"http://localhost:8080"` |  |
| config.outputs[0].config.batchTimeout | string | `"5s"` |  |
| config.outputs[0].config.exportTimeout | string | `"30s"` |  |
| config.outputs[0].config.headers.authorization | string | `"Someb64Value"` |  |
| config.outputs[0].config.maxExportBatchSize | int | `512` |  |
| config.outputs[0].config.maxQueueSize | int | `51200` |  |
| config.outputs[0].name | string | `"basic"` |  |
| config.outputs[0].type | string | `"http"` |  |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the xatu container |
| customCommand | list | `[]` | Command replacement for the xatu container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | xatu container pull policy |
| image.repository | string | `"ethpandaops/xatu"` | xatu container image repository |
| image.tag | string | `"latest"` | xatu container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| initContainers | list | `[]` | Additional init containers |
| lifecycle | object | See `values.yaml` | Lifecycle hooks |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| terminationGracePeriodSeconds | int | `90` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/xatu-sentry/Chart.yaml
================================================
apiVersion: v2
name: xatu-sentry
description: Ethereum p2p monitoring tool that runs along side a Ethereum consensus client and collects data via the consensus client's Beacon API.
home: https://github.com/ethpandaops/xatu
type: application
version: 0.0.8
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org
  - name: savid
    email: andrew.davis@ethereum.org



================================================
FILE: charts/xatu-sentry/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/xatu-sentry/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- xatu container image repository
  repository: ethpandaops/xatu
  # -- xatu container image tag
  tag: latest
  # -- xatu container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

config:
  logging: "info"
  metricsAddr: ":9090"
  name: example-instance
  ntpServer: time.google.com
  ethereum:
    beaconNodeAddress: http://localhost:5052
  outputs:
  - name: basic
    type: http
    config:
      address: http://localhost:8080
      headers:
        authorization: Someb64Value
      maxQueueSize: 51200
      batchTimeout: 5s
      exportTimeout: 30s
      maxExportBatchSize: 512

# -- Custom args for the xatu container
customArgs: []

# -- Command replacement for the xatu container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: metrics
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Lifecycle hooks
# @default -- See `values.yaml`
lifecycle:
  preStop:
    exec:
      command:
      - /bin/sleep
      - "30"

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 90

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/xatu-sentry/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/xatu-sentry/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "xatu-sentry.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "xatu-sentry.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "xatu-sentry.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "xatu-sentry.labels" -}}
helm.sh/chart: {{ include "xatu-sentry.chart" . }}
{{ include "xatu-sentry.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "xatu-sentry.selectorLabels" -}}
app.kubernetes.io/name: {{ include "xatu-sentry.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "xatu-sentry.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "xatu-sentry.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "xatu-sentry.metricsPort" -}}
{{ (split ":" .Values.config.metricsAddr)._1 | default ":9090" }}
{{- end -}}

{{- define "xatu-sentry.pprofPort" -}}
{{- if .Values.config.pprofAddr -}}
{{ (split ":" .Values.config.pprofAddr)._1 | default "6060" }}
{{- end -}}
{{- end -}}



================================================
FILE: charts/xatu-sentry/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "xatu-sentry.fullname" . }}
  labels:
    {{- include "xatu-sentry.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{ tpl (toYaml .Values.config | nindent 4) $ }}



================================================
FILE: charts/xatu-sentry/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "xatu-sentry.fullname" . }}
  labels:
    {{- include "xatu-sentry.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "xatu-sentry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "xatu-sentry.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "xatu-sentry.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/xatu"
          - "sentry"
          - --config=/config.yaml
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 10}}
          {{- end }}
        ports:
          - name: metrics
            containerPort: {{ include "xatu-sentry.metricsPort" . }}
            protocol: TCP
          {{- if (include "xatu-sentry.pprofPort" .) }}
          - name: pprof
            containerPort: {{ include "xatu-sentry.pprofPort" . }}
            protocol: TCP
          {{- end }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
        lifecycle:
          {{- toYaml .Values.lifecycle | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "xatu-sentry.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "xatu-sentry.fullname" . }}



================================================
FILE: charts/xatu-sentry/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "xatu-sentry.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "xatu-sentry.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "xatu-sentry.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "xatu-sentry.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "xatu-sentry.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/xatu-sentry/templates/pdb.yaml
================================================
{{- if or .Values.podDisruptionBudget.minAvailable .Values.podDisruptionBudget.maxUnavailable -}}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "xatu-sentry.fullname" . }}
  labels:
    {{- include "xatu-sentry.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "xatu-sentry.selectorLabels" . | nindent 6 }}
  {{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
  {{- end  }}
  {{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
  {{- end  }}
{{- end -}}


================================================
FILE: charts/xatu-sentry/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "xatu-sentry.fullname" . }}-env
  labels:
    {{- include "xatu-sentry.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/xatu-sentry/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "xatu-sentry.fullname" . }}
  labels:
    {{- include "xatu-sentry.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "xatu-sentry.metricsPort" . }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    {{- if (include "xatu-sentry.pprofPort" .) }}
    - port: {{ include "xatu-sentry.pprofPort" . }}
      targetPort: pprof
      protocol: TCP
      name: pprof
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "xatu-sentry.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/xatu-sentry/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "xatu-sentry.serviceAccountName" . }}
  labels:
    {{- include "xatu-sentry.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/xatu-sentry/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "xatu-sentry.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "xatu-sentry.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "xatu-sentry.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/xatu-server/README.md
================================================

# xatu-server

![Version: 0.0.14](https://img.shields.io/badge/Version-0.0.14-informational?style=flat-square) ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square)

Ethereum p2p monitoring tool that collects events from and controls various Xatu clients.

**Homepage:** <https://github.com/ethpandaops/xatu>

## Values

| Key | Type | Default | Description |
|-----|------|---------|-------------|
| affinity | object | `{}` | Affinity configuration for pods |
| annotations | object | `{}` | Annotations for the Deployment |
| args | list | `[]` | Command arguments |
| autoscaling.enabled | bool | `false` | Autoscaling configuration |
| autoscaling.maxReplicas | int | `3` | Maximum number of replicas |
| autoscaling.minReplicas | int | `2` | Minimum number of replicas |
| autoscaling.targetCPUUtilizationPercentage | int | `85` | Target CPU utilization percentage |
| config.addr | string | `":8080"` |  |
| config.geoip.enabled | bool | `false` |  |
| config.logging | string | `"info"` |  |
| config.metricsAddr | string | `":9090"` |  |
| config.ntpServer | string | `"time.google.com"` |  |
| config.persistence.enabled | bool | `false` |  |
| config.services.coordinator.enabled | bool | `false` |  |
| config.services.coordinator.nodeRecord.batchTimeout | string | `"5s"` |  |
| config.services.coordinator.nodeRecord.exportTimeout | string | `"30s"` |  |
| config.services.coordinator.nodeRecord.maxExportBatchSize | int | `512` |  |
| config.services.coordinator.nodeRecord.maxQueueSize | int | `51200` |  |
| config.services.eventIngester.enabled | bool | `true` |  |
| config.services.eventIngester.outputs[0].config.address | string | `"http://localhost:8080"` |  |
| config.services.eventIngester.outputs[0].config.batchTimeout | string | `"5s"` |  |
| config.services.eventIngester.outputs[0].config.exportTimeout | string | `"30s"` |  |
| config.services.eventIngester.outputs[0].config.headers.authorization | string | `"Someb64Value"` |  |
| config.services.eventIngester.outputs[0].config.maxExportBatchSize | int | `512` |  |
| config.services.eventIngester.outputs[0].config.maxQueueSize | int | `51200` |  |
| config.services.eventIngester.outputs[0].name | string | `"basic"` |  |
| config.services.eventIngester.outputs[0].type | string | `"http"` |  |
| config.store.type | string | `"memory"` |  |
| containerSecurityContext | object | See `values.yaml` | The security context for containers |
| customArgs | list | `[]` | Custom args for the xatu container |
| customCommand | list | `[]` | Command replacement for the xatu container |
| extraContainers | list | `[]` | Additional containers |
| extraEnv | list | `[]` | Additional env variables |
| extraPodPorts | list | `[]` | Extra Pod ports |
| extraPorts | list | `[]` | Additional ports. Useful when using extraContainers |
| extraVolumeMounts | list | `[]` | Additional volume mounts |
| extraVolumes | list | `[]` | Additional volumes |
| fullnameOverride | string | `""` | Overrides the chart's computed fullname |
| image.pullPolicy | string | `"IfNotPresent"` | xatu container pull policy |
| image.repository | string | `"ethpandaops/xatu"` | xatu container image repository |
| image.tag | string | `"latest"` | xatu container image tag |
| imagePullSecrets | list | `[]` | Image pull secrets for Docker images |
| ingress.annotations | object | `{}` | Annotations for Ingress |
| ingress.enabled | bool | `false` | Ingress resource for the HTTP API |
| ingress.hosts[0].host | string | `"chart-example.local"` |  |
| ingress.hosts[0].paths | list | `[]` |  |
| ingress.tls | list | `[]` | Ingress TLS |
| initContainers | list | `[]` | Additional init containers |
| lifecycle | object | See `values.yaml` | Lifecycle hooks |
| livenessProbe | object | See `values.yaml` | Liveness probe |
| nameOverride | string | `""` | Overrides the chart's name |
| nodeSelector | object | `{}` | Node selector for pods |
| podAnnotations | object | `{}` | Pod annotations |
| podDisruptionBudget | object | `{}` | Define the PodDisruptionBudget spec If not set then a PodDisruptionBudget will not be created |
| podLabels | object | `{}` | Pod labels |
| priorityClassName | string | `nil` | Pod priority class |
| readinessProbe | object | See `values.yaml` | Readiness probe |
| replicas | int | `1` | Number of replicas |
| resources | object | `{}` | Resource requests and limits |
| secretEnv | object | `{}` | Secret env variables injected via a created secret |
| securityContext | object | See `values.yaml` | The security context for pods |
| service.type | string | `"ClusterIP"` | Service type |
| serviceAccount.annotations | object | `{}` | Annotations to add to the service account |
| serviceAccount.create | bool | `false` | Specifies whether a service account should be created |
| serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template |
| serviceMonitor.annotations | object | `{}` | Additional ServiceMonitor annotations |
| serviceMonitor.enabled | bool | `false` | If true, a ServiceMonitor CRD is created for a prometheus operator https://github.com/coreos/prometheus-operator |
| serviceMonitor.interval | string | `"15s"` | ServiceMonitor scrape interval |
| serviceMonitor.labels | object | `{}` | Additional ServiceMonitor labels |
| serviceMonitor.namespace | string | `nil` | Alternative namespace for ServiceMonitor |
| serviceMonitor.path | string | `"/metrics"` | Path to scrape |
| serviceMonitor.relabelings | list | `[]` | ServiceMonitor relabelings |
| serviceMonitor.scheme | string | `"http"` | ServiceMonitor scheme |
| serviceMonitor.scrapeTimeout | string | `"30s"` | ServiceMonitor scrape timeout |
| serviceMonitor.tlsConfig | object | `{}` | ServiceMonitor TLS configuration |
| strategy | object | `{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"}` | Deployment rollout strategy |
| terminationGracePeriodSeconds | int | `90` | How long to wait until the pod is forcefully terminated |
| tolerations | list | `[]` | Tolerations for pods |
| topologySpreadConstraints | list | `[]` | Topology Spread Constraints for pods |



================================================
FILE: charts/xatu-server/Chart.yaml
================================================
apiVersion: v2
name: xatu-server
description: Ethereum p2p monitoring tool that collects events from and controls various Xatu clients.
home: https://github.com/ethpandaops/xatu
type: application
version: 0.0.14
maintainers:
  - name: samcm
    email: sam.calder-mason@ethereum.org
  - name: savid
    email: andrew.davis@ethereum.org



================================================
FILE: charts/xatu-server/README.md.gotmpl
================================================

{{ template "chart.header" . }}
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}



================================================
FILE: charts/xatu-server/values.yaml
================================================
# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

autoscaling:
  # -- Autoscaling configuration
  enabled: false
  # -- Minimum number of replicas
  minReplicas: 2
  # -- Maximum number of replicas
  maxReplicas: 3
  # -- Target CPU utilization percentage
  targetCPUUtilizationPercentage: 85

image:
  # -- xatu container image repository
  repository: ethpandaops/xatu
  # -- xatu container image tag
  tag: latest
  # -- xatu container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Command arguments
args: []

config:
  logging: "info" # panic,fatal,warn,info,debug,trace
  addr: ":8080"
  metricsAddr: ":9090"
  ntpServer: time.google.com
  persistence:
    enabled: false
  store:
    type: memory
  geoip:
    enabled: false
  services:
    coordinator:
      enabled: false
      nodeRecord:
        maxQueueSize: 51200
        batchTimeout: 5s
        exportTimeout: 30s
        maxExportBatchSize: 512
    eventIngester:
      enabled: true
      outputs:
      - name: basic
        type: http
        config:
          address: http://localhost:8080
          headers:
            authorization: Someb64Value
          maxQueueSize: 51200
          batchTimeout: 5s
          exportTimeout: 30s
          maxExportBatchSize: 512

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Custom args for the xatu container
customArgs: []

# -- Command replacement for the xatu container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  enabled: true
  custom: false
  customProbe: {}
  tcp:
    port: metrics
    initialDelaySeconds: 60
    periodSeconds: 120


# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  enabled: true
  custom: false
  customProbe: {}
  tcp:
    port: metrics
    initialDelaySeconds: 10
    periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Extra Pod ports
extraPodPorts: []

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Lifecycle hooks
# @default -- See `values.yaml`
lifecycle:
  preStop:
    exec:
      command:
      - /bin/sleep
      - "30"

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 90

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology Spread Constraints for pods
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
topologySpreadConstraints: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

# -- Additional env variables
extraEnv: []

# -- Deployment rollout strategy
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%


serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []



================================================
FILE: charts/xatu-server/.helmignore
================================================
# Patterns to ignore when building packages.
# This supports shell glob matching, relative path matching, and
# negation (prefixed with !). Only one pattern per line.
.DS_Store
# Common VCS dirs
.git/
.gitignore
.bzr/
.bzrignore
.hg/
.hgignore
.svn/
# Common backup files
*.swp
*.bak
*.tmp
*.orig
*~
# Various IDEs
.project
.idea/
*.tmproj
.vscode/



================================================
FILE: charts/xatu-server/templates/_helpers.tpl
================================================
{{/*
Expand the name of the chart.
*/}}
{{- define "xatu-server.name" -}}
{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Create a default fully qualified app name.
We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
If release name contains chart name it will be used as a full name.
*/}}
{{- define "xatu-server.fullname" -}}
{{- if .Values.fullnameOverride }}
{{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- $name := default .Chart.Name .Values.nameOverride }}
{{- if contains $name .Release.Name }}
{{- .Release.Name | trunc 63 | trimSuffix "-" }}
{{- else }}
{{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
{{- end }}
{{- end }}
{{- end }}

{{/*
Create chart name and version as used by the chart label.
*/}}
{{- define "xatu-server.chart" -}}
{{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
{{- end }}

{{/*
Common labels
*/}}
{{- define "xatu-server.labels" -}}
helm.sh/chart: {{ include "xatu-server.chart" . }}
{{ include "xatu-server.selectorLabels" . }}
{{- if .Chart.AppVersion }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- end }}
app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- end }}

{{/*
Selector labels
*/}}
{{- define "xatu-server.selectorLabels" -}}
app.kubernetes.io/name: {{ include "xatu-server.name" . }}
app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}

{{/*
Create the name of the service account to use
*/}}
{{- define "xatu-server.serviceAccountName" -}}
{{- if .Values.serviceAccount.create }}
{{- default (include "xatu-server.fullname" .) .Values.serviceAccount.name }}
{{- else }}
{{- default "default" .Values.serviceAccount.name }}
{{- end }}
{{- end }}

{{- define "xatu-server.httpPort" -}}
{{ (split ":" .Values.config.addr)._1 | default "8080" }}
{{- end }}

{{- define "xatu-server.metricsPort" -}}
{{ (split ":" .Values.config.metricsAddr)._1 | default "9090" }}
{{- end -}}

{{- define "xatu-server.pprofPort" -}}
{{- if .Values.config.pprofAddr -}}
{{ (split ":" .Values.config.pprofAddr)._1 | default "6060" }}
{{- end -}}
{{- end -}}



================================================
FILE: charts/xatu-server/templates/configmap.yaml
================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "xatu-server.fullname" . }}
  labels:
    {{- include "xatu-server.labels" . | nindent 4 }}
data:
  config.yaml: |-
    {{ toYaml .Values.config | nindent 4 }}



================================================
FILE: charts/xatu-server/templates/deployment.yaml
================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "xatu-server.fullname" . }}
  labels:
    {{- include "xatu-server.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  {{- if .Values.strategy }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}
  {{- if ne .Values.replicas nil }}
  replicas: {{ .Values.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "xatu-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "xatu-server.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "xatu-server.serviceAccountName" . }}
    {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        {{- if gt (len .Values.customCommand) 0 }}
          {{- toYaml .Values.customCommand | nindent 12}}
        {{- else }}
          - "/xatu"
          - "server"
          - --config=/config.yaml
          {{- if gt (len .Values.args) 0 }}
          {{- toYaml .Values.args | nindent 12}}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.customArgs) 0 }}
        args:
          {{- toYaml .Values.customArgs | nindent 12}}
        {{- end }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: "/config.yaml"
            subPath: config.yaml
            readOnly: true
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 10 }}
          {{- end }}
        ports:
          - name: http
            containerPort: {{ include "xatu-server.httpPort" . }}
            protocol: TCP
          - name: metrics
            containerPort: {{ include "xatu-server.metricsPort" . }}
            protocol: TCP
          {{- if (include "xatu-server.pprofPort" .) }}
          - name: pprof
            containerPort: {{ include "xatu-server.pprofPort" . }}
            protocol: TCP
          {{- end }}
          {{- if .Values.extraPodPorts }}
            {{ toYaml .Values.extraPodPorts | nindent 10 }}
          {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          {{- if .Values.livenessProbe.custom }}
          {{- toYaml .Values.livenessProbe.customProbe | nindent 10 }}
          {{- else }}
          tcpSocket:
            port: {{ .Values.livenessProbe.tcp.port }}
          initialDelaySeconds: {{ .Values.livenessProbe.tcp.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.tcp.periodSeconds }}
          {{- end }}
        {{- end }}

        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          {{- if .Values.readinessProbe.custom }}
          {{- toYaml .Values.readinessProbe.customProbe | nindent 10 }}
          {{- else }}
          tcpSocket:
            port: {{ .Values.readinessProbe.tcp.port }}
          initialDelaySeconds: {{ .Values.readinessProbe.tcp.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.tcp.periodSeconds }}
          {{- end }}
        {{- end }}
        lifecycle:
          {{- toYaml .Values.lifecycle | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        {{- range $key, $value := .Values.secretEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ include "xatu-server.fullname" $ }}-env
                key: {{ $key }}
        {{- end }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 12 }}
        {{- end }}
      {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8}}
      {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | nindent 8}}
      {{- end }}
        - name: config
          configMap:
            name: {{ include "xatu-server.fullname" . }}



================================================
FILE: charts/xatu-server/templates/hpa.yaml
================================================
{{- if .Values.autoscaling.enabled -}}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "xatu-server.fullname" . }}
  labels:
    {{- include "xatu-server.labels" . | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "xatu-server.fullname" . }}
  minReplicas: {{ .Values.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.autoscaling.maxReplicas }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ .Values.autoscaling.targetCPUUtilizationPercentage }}
{{- end }}



================================================
FILE: charts/xatu-server/templates/ingress.yaml
================================================
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "xatu-server.fullname" . -}}
{{- $svcPort := include "xatu-server.httpPort" . -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "xatu-server.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}



================================================
FILE: charts/xatu-server/templates/NOTES.txt
================================================
1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "xatu-server.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "xatu-server.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "xatu-server.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ include "xatu-server.httpPort" . }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "xatu-server.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}



================================================
FILE: charts/xatu-server/templates/pdb.yaml
================================================
{{- if or .Values.podDisruptionBudget.minAvailable .Values.podDisruptionBudget.maxUnavailable -}}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: {{ include "xatu-server.fullname" . }}
  labels:
    {{- include "xatu-server.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "xatu-server.selectorLabels" . | nindent 6 }}
  {{- if .Values.podDisruptionBudget.minAvailable }}
  minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
  {{- end  }}
  {{- if .Values.podDisruptionBudget.maxUnavailable }}
  maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
  {{- end  }}
{{- end -}}


================================================
FILE: charts/xatu-server/templates/secret.yaml
================================================
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "xatu-server.fullname" . }}-env
  labels:
    {{- include "xatu-server.labels" . | nindent 4 }}
data:
{{- range $key, $value := .Values.secretEnv }}
  {{ $key }}: {{ $value | b64enc }}
{{- end }}



================================================
FILE: charts/xatu-server/templates/service.yaml
================================================
apiVersion: v1
kind: Service
metadata:
  name: {{ include "xatu-server.fullname" . }}
  labels:
    {{- include "xatu-server.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ include "xatu-server.httpPort" . }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ include "xatu-server.metricsPort" . }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    {{- if (include "xatu-server.pprofPort" .) }}
    - port: {{ include "xatu-server.pprofPort" . }}
      targetPort: pprof
      protocol: TCP
      name: pprof
    {{- end }}
  {{- if .Values.extraPorts }}
    {{ toYaml .Values.extraPorts | nindent 4}}
  {{- end }}
  selector:
    {{- include "xatu-server.selectorLabels" . | nindent 4 }}



================================================
FILE: charts/xatu-server/templates/serviceaccount.yaml
================================================
{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "xatu-server.serviceAccountName" . }}
  labels:
    {{- include "xatu-server.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
{{- end }}



================================================
FILE: charts/xatu-server/templates/servicemonitor.yaml
================================================
{{- if .Values.serviceMonitor.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "xatu-server.fullname" . }}
  {{- if .Values.serviceMonitor.namespace }}
  namespace: {{ .Values.serviceMonitor.namespace }}
  {{- end }}
  labels:
    {{- include "xatu-server.labels" . | nindent 4 }}
    {{- if .Values.serviceMonitor.labels }}
    {{- toYaml .Values.serviceMonitor.labels | nindent 4 }}
    {{- end }}
  {{- if .Values.serviceMonitor.annotations }}
  annotations:
  {{ toYaml .Values.serviceMonitor.annotations | nindent 4 }}
  {{- end }}
spec:
  endpoints:
  - interval: {{ .Values.serviceMonitor.interval }}
    {{- if .Values.serviceMonitor.scrapeTimeout }}
    scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
    {{- end }}
    honorLabels: true
    port: metrics
    path: {{ .Values.serviceMonitor.path }}
    scheme: {{ .Values.serviceMonitor.scheme }}
    {{- if .Values.serviceMonitor.tlsConfig }}
    tlsConfig:
    {{- toYaml .Values.serviceMonitor.tlsConfig | nindent 6 }}
    {{- end }}
    {{- if .Values.serviceMonitor.relabelings }}
    relabelings:
    {{- toYaml .Values.serviceMonitor.relabelings | nindent 4 }}
    {{- end }}
  jobLabel: "{{ .Release.Name }}"
  selector:
    matchLabels:
      {{- include "xatu-server.selectorLabels" . | nindent 8 }}
  namespaceSelector:
    matchNames:
      - {{ .Release.Namespace }}
{{- end }}



================================================
FILE: .github/CODEOWNERS
================================================
/charts/ @skylenet



================================================
FILE: .github/dependabot.yml
================================================
version: 2
updates:
   - package-ecosystem: github-actions
     directory: /
     schedule:
        interval: monthly
     groups:
        actions:
           patterns:
              - '*'



================================================
FILE: .github/workflows/check-typos.yaml
================================================
name: Check typos

on:
  pull_request:
    branches:
      - master

jobs:
  check-typos:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Check for typos
        uses: crate-ci/typos@3be83342e28b9421997e9f781f713f8dde8453d2 # v1.31.2



================================================
FILE: .github/workflows/release.yaml
================================================
name: release

on:
  push:
    branches:
      - master

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
        with:
          version: v3.16.2

      - name: Add repo dependencies
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add ethpandaops https://ethpandaops.github.io/ethereum-helm-charts

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@cae68fefc6b5f367a0275617c9f83181ba54714f # v1.7.0
        with:
          charts_dir: charts
          skip_existing: true
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"



================================================
FILE: .github/workflows/test-charts.yaml
================================================
name: charts/all

on: pull_request

jobs:
  test:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.head_ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Fetch default branch
        run: git fetch origin ${{ github.event.repository.default_branch }}:${{ github.event.repository.default_branch }}

      - name: Set up Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
        with:
          version: v3.16.2

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3.12

      - name: Run pre-commit hooks
        uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1

      - name: Set up chart-testing
        uses: helm/chart-testing-action@0d28d3144d3a25ea2cc349d6e59901c4ff469b3b # v2.7.0
        with:
          version: "v3.11.0"

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config ct.yaml --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Run chart-testing (lint)
        run: >
          ct lint
          --config ct.yaml
          --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        if: steps.list-changed.outputs.changed == 'true'

      - name: Run chart-testing (install)
        run: >
          ct install
          --config ct.yaml
          --target-branch ${{ github.event.repository.default_branch }}
          --excluded-charts ethereum-node
          --excluded-charts beaconchain-explorer
          --excluded-charts fauceth
          --excluded-charts eth-faucet
          --excluded-charts genesis-generator
          --excluded-charts beacon-metrics-gazer
          --excluded-charts tracoor-server
          --excluded-charts tracoor-agent
          --excluded-charts tracoor-single
          --excluded-charts xatu-cl-mimicry
          --excluded-charts contributoor
          --excluded-charts hermes
          --excluded-charts spamoor



================================================
FILE: .github/workflows/test-ethereum-node.yaml
================================================
name: charts/ethereum-node

on:
  pull_request:
    paths:
      - charts/ethereum-node/**
jobs:
  test:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.head_ref }}-${{ matrix.network }}-${{ matrix.consensus }}-${{ matrix.execution }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        consensus: [teku, prysm, lighthouse, nimbus, lodestar, grandine]
        execution: [geth, nethermind, erigon, besu, ethereumjs, reth]
        network: [sepolia, mainnet]
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Fetch default branch
        run: git fetch origin ${{ github.event.repository.default_branch }}:${{ github.event.repository.default_branch }}

      - name: Set up Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
        with:
          version: v3.16.2

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3.12

      - name: Run pre-commit hooks
        uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1

      - name: Set up chart-testing
        uses: helm/chart-testing-action@0d28d3144d3a25ea2cc349d6e59901c4ff469b3b # v2.7.0
        with:
          version: "v3.11.0"

      - name: Check if chart got changed
        id: list-changed
        run: |
          if ct list-changed --config ct.yaml --target-branch ${{ github.event.repository.default_branch }} | grep -q 'charts/ethereum-node'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Run chart-testing (lint)
        run: >
          ct lint
          --config ct.yaml
          --target-branch ${{ github.event.repository.default_branch }}
          --charts charts/ethereum-node

      - name: Create kind cluster
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        if: steps.list-changed.outputs.changed == 'true'

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: >
          ct install
          --config ct.yaml
          --target-branch ${{ github.event.repository.default_branch }}
          --charts charts/ethereum-node
          --helm-extra-set-args="
            --values=charts/ethereum-node/ci/networks/${{ matrix.network }}.yaml
            --values=charts/ethereum-node/ci/clients/execution/${{ matrix.execution }}.yaml
            --values=charts/ethereum-node/ci/clients/consensus/${{ matrix.consensus }}.yaml
          "


