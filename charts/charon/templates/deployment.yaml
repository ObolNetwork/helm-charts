apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "release.name" . }}
  labels:
    {{- include "charon.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "charon.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "charon.selectorLabels" . | nindent 8 }}
    spec:
      {{- with concat .Values.imagePullSecrets }}
        imagePullSecrets:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.serviceAccount.enabled }}
      serviceAccountName: {{ include "charon.serviceAccountName" . }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      {{- if .Values.initContainers }}
        {{- tpl (toYaml .Values.initContainers | nindent 8) $ }}
      {{- end }}
      containers:
        - args:
          - run
          command:
          - /usr/local/bin/charon
          env:
          - name: KUBERNETES_CLUSTER_DOMAIN
            value: {{ .Values.kubernetesClusterDomain }}
        {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 10 }}
        {{- end }}
          envFrom:
          - configMapRef:
              name: {{ include "release.name" . }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          name: {{ .Chart.Name }}
          {{- with .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          ports:
            - containerPort: {{ .Values.httpPort }}
              name: validator-api
              protocol: TCP
            - containerPort: {{ .Values.p2pPort }}
              name: p2p-tcp
              protocol: TCP
            - containerPort: {{ .Values.monitoringPort }}
              name: monitoring
              protocol: TCP
          {{- if .Values.extraPorts -}}
            {{ toYaml .Values.extraPorts | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if .Values.extraVolumeMounts -}}
            {{ toYaml .Values.extraVolumeMounts | nindent 12 }}
          {{- end }}
            - mountPath: /charon/charon-enr-private-key
              name: charon-enr-private-key
            - mountPath: /charon/cluster-lock
              name: cluster-lock
      {{- if .Values.extraContainers }}
        {{ tpl (toYaml .Values.extraContainers | nindent 8) $ }}
      {{- end }}
      volumes:
      {{- if .Values.extraVolumes -}}
        {{ toYaml .Values.extraVolumes | nindent 8 }}
      {{- end }}
        - name: charon-enr-private-key
          projected:
            sources:
            - secret:
                name: {{ .Values.secrets.enrPrivateKey }}
        - name: cluster-lock
          projected:
            sources:
            - secret:
                name: {{ .Values.secrets.clusterlock }}

