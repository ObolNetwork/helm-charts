
Charon
===========
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}{{ template "chart.appVersionBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# How to use this chart

A distributed validator node is a machine running:

- An Ethereum Execution client
- An Ethereum Consensus client
- An Ethereum Distributed Validator client [This chart]
- An Ethereum Validator client

![Distributed Validator Node](https://github.com/ObolNetwork/charon-distributed-validator-node/blob/main/DVNode.png?raw=true)

## Prerequisites
You have the following charon node artifacts created as k8s secrets:
- `validator-keys` (with keystore-0.json and keystore-0.txt)
- `charon-enr-private-key`
- `cluster-lock`

e.g.:
```console
kubectl create secret generic charon-enr-private-key --from-file=.charon/charon-enr-private-key
kubectl create secret generic cluster-lock --from-file=.charon/cluster-lock.json
kubectl create secret generic validator-keys --from-file=keystore-0.json=.charon/validator_keys/keystore-0.json --from-file=keystore-0.txt=.charon/validator_keys/keystore-0.txt
```

## Add Obol's Helm Charts
```console
helm repo add obol https://obolnetwork.github.io/helm-charts
helm repo update
```
_See [helm repo](https://helm.sh/docs/helm/helm_repo/) for command documentation._

## Install the chart
```console
helm upgrade --install charon-node obol/charon \
  --set='config.beaconNodeEndpoints=<BEACON_NODES_ENDPOINTS>' \
  --create-namespace \
  --namespace $CHARON_NODE_NAMESPACE
```

## Connect the validator client
- Update the validator client to connect to charon node API endpoint instead of the beacon node endpoint `--beacon-node-api-endpoint="http://CHARON_NODE_SERVICE_NAME:3600"`
- Mount `validator-keys` k8s secrets to the validator client validator folder.

## Uninstall the chart
To uninstall and delete the `charon-node`:
```console
helm uninstall charon-node
```
The command removes all the Kubernetes components associated with the chart and deletes the release.
