
Charon
===========
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}{{ template "chart.appVersionBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# Usage Example

Installs [Charon](https://github.com/ObolNetwork/charon) single node

## Add Obol's Helm Charts

```console
helm repo add obol https://obolnetwork.github.io/helm-charts
helm repo update
```

_See [helm repo](https://helm.sh/docs/helm/helm_repo/) for command documentation._

## Prerequisites
- You can completed the DKG ceremony and have generated the `.charon` directory.
- The charon cluster keys must be populated to your Kubernetes cluster as secrets in the same namespace where the charon node chart will get deployed.

You can create the secrets from `.charon` directory as the following:
```console
files=""
for secret in ./.charon/validator_keys/*; do
    files="$files --from-file=./.charon/validator_keys/$(basename $secret)"
done
kubectl -n $NAME_SPACE create secret generic validator-keys $files --dry-run=client -o yaml | kubectl apply -f -
kubectl -n $NAME_SPACE create secret generic charon-enr-private-key --from-file=charon-enr-private-key=./.charon/charon-enr-private-key --dry-run=client -o yaml | kubectl apply -f -
kubectl -n $NAME_SPACE create secret generic cluster-lock --from-file=cluster-lock.json=./.charon/cluster-lock.json --dry-run=client -o yaml | kubectl apply -f -
```

### Check the secrets
```console
kubeclt -n <CLUSTER_NAMESPACE> get secrets
```
You should get list of charon secrets as the following:
- `validator-keys`
- `charon-enr-private-key`
- `cluster-lock`

## Installing the Chart
To install the chart with the release name `charon-node`:
```console
helm upgrade --install charon-node obol/charon \
  --set='config.beaconNodeEndpoints=<BEACON_NODES_ENDPOINTS>' \
  --create-namespace \
  --namespace <CLUSTER_NAMESPACE>
```

## Uninstalling the Chart
To uninstall and delete the `charon-node`:
```console
helm uninstall charon-node
```
The command removes all the Kubernetes components associated with the chart and deletes the release.
