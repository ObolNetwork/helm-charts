
Charon Cluster
===========
{{ template "chart.deprecationWarning" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}{{ template "chart.appVersionBadge" . }}

{{ template "chart.description" . }}

{{ template "chart.homepageLine" . }}

{{ template "chart.sourcesSection" . }}

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

# How to use the chart

Installs [Charon](https://github.com/ObolNetwork/charon) full cluster

## Add Obol's Helm Charts

```console
helm repo add obol https://obolnetwork.github.io/helm-charts
helm repo update
```

_See [helm repo](https://helm.sh/docs/helm/helm_repo/) for command documentation._

## Prerequisites
- You can completed the DKG ceremony and have generated the `.charon` directory.
- The charon cluster keys must be populated to your Kubernetes cluster as secrets in the same namespace where the charon cluster chart will get deployed.

### Example: How to create the k8s secrets from a `.charon` directory:
```console
cat << 'EOF' >> create-k8s-secrets.sh
i=0
CLUSTER_NAME=charon-cluster
NAMESPACE=charon-cluster
NODES=4
# set current namespace
kubectl config set-context --current --namespace=$NAMESPACE
kubectl -n ${CLUSTER_NAME} create secret generic cluster-lock --from-file=cluster-lock.json=.charon/cluster/cluster-lock.json --dry-run=client -o yaml | kubectl apply -f -
while [[ $i -lt "$NODES" ]]
do
    files=""
    for secret in .charon/cluster/node${i}/validator_keys/*; do
        files="$files --from-file=.charon/cluster/node${i}/validator_keys/$(basename $secret)"
    done
    kubectl -n ${CLUSTER_NAME} create secret generic ${CLUSTER_NAME}-${i}-validators $files --dry-run=client -o yaml | kubectl apply -f -
    kubectl -n ${CLUSTER_NAME} create secret generic ${CLUSTER_NAME}-${i}-charon-enr-private-key --from-file=charon-enr-private-key=.charon/cluster/node${i}/charon-enr-private-key --dry-run=client -o yaml | kubectl apply -f -
    ((i=i+1))
done
EOF
chmod +x create-k8s-secrets.sh && ./create-k8s-secrets.sh
```

### Check the secrets
```console
kubeclt -n <CLUSTER_NAMESPACE> get secrets
```
You should get list of charon secrets as the following:
- `<cluster-name>-<node-index>-validators`
- `<cluster-name>-<node-index>-charon-enr-private-key`
- `cluster-lock`

## Installing the Chart
To install the chart with the release name `charon-cluster`:
```console
helm upgrade --install charon-cluster obol/charon-cluster \
  --set='clusterSize=4' \
  --set='config.beaconNodeEndpoints=<BEACON_NODES_ENDPOINTS>' \
  --create-namespace \
  --namespace <CLUSTER_NAMESPACE>
```

## Uninstalling the Chart
To uninstall and delete the `charon-cluster`:
```console
helm uninstall charon-cluster
```
The command removes all the Kubernetes components associated with the chart and deletes the release.
