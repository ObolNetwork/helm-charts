{{- if and .Values.secrets.defaultEnrPrivateKey (not .Values.charon.enr.existingSecret.name) }}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ template "dv-pod.fullname" . }}-test-auto-detect-enr"
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "dv-pod.labels" . | nindent 4 }}
    app.kubernetes.io/component: test-auto-detect-enr
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
    "helm.sh/hook-weight": "2"
    "sidecar.istio.io/inject": "false"
spec:
  serviceAccountName: {{ template "dv-pod.serviceAccountNameTest" . }}
  restartPolicy: Never
  containers:
    - name: test-auto-detect-default-secret
      image: bitnami/kubectl:latest
      command:
        - /bin/sh
        - -ec
        - |
          echo "INFO: Testing ENR secret auto-detection behavior..."
          DEFAULT_SECRET_NAME="{{ .Values.secrets.defaultEnrPrivateKey }}"
          NAMESPACE={{ .Release.Namespace }}
          
          echo "INFO: Checking if default secret '$DEFAULT_SECRET_NAME' exists..."
          if kubectl get secret $DEFAULT_SECRET_NAME -n $NAMESPACE >/dev/null 2>&1; then
            echo "INFO: Default secret '$DEFAULT_SECRET_NAME' exists."
            
            # Verify ENR job behavior when default secret exists
            JOB_NAME="{{ template "dv-pod.fullname" . }}-enr-job"
            if kubectl get job $JOB_NAME -n $NAMESPACE >/dev/null 2>&1; then
              echo "INFO: ENR generation job $JOB_NAME exists, checking if it skipped generation..."
              # Check job logs to verify it detected the existing secret
              JOB_POD=$(kubectl get pods -n $NAMESPACE -l job-name=$JOB_NAME -o jsonpath='{.items[0].metadata.name}')
              if [ -n "$JOB_POD" ]; then
                echo "INFO: Checking ENR job logs..."
                kubectl logs $JOB_POD -c kubectl-secret-creator -n $NAMESPACE | grep -q "Secret .* already exists. Skipping ENR generation" && \
                  echo "INFO: ENR job correctly detected existing secret and skipped generation." || \
                  echo "WARNING: Could not verify if ENR job skipped generation."
              fi
            else
              echo "INFO: ENR generation job not created (this is also acceptable)."
            fi
            
            # Verify the statefulset uses the default secret
            STATEFULSET_NAME="{{ template "dv-pod.fullname" . }}"
            POD_NAME=${STATEFULSET_NAME}-0
            
            echo "INFO: Waiting for pod $POD_NAME to be ready..."
            if ! kubectl wait --for=condition=ready pod/$POD_NAME -n $NAMESPACE --timeout=120s; then
              echo "ERROR: Pod $POD_NAME did not become ready in time."
              kubectl logs $POD_NAME -n $NAMESPACE --tail=50
              exit 1
            fi
            
            echo "INFO: Verifying pod is using the auto-detected secret..."
            # Check if the charon-enr-key volume is using the default secret
            SECRET_NAME_IN_POD=$(kubectl get pod $POD_NAME -n $NAMESPACE -o jsonpath='{.spec.volumes[?(@.name=="charon-enr-key")].secret.secretName}')
            if [ "$SECRET_NAME_IN_POD" = "$DEFAULT_SECRET_NAME" ]; then
              echo "INFO: Pod is correctly using the auto-detected secret '$DEFAULT_SECRET_NAME'."
            else
              echo "ERROR: Pod is using secret '$SECRET_NAME_IN_POD' instead of expected '$DEFAULT_SECRET_NAME'."
              exit 1
            fi
            
            echo "SUCCESS: ENR secret auto-detection is working correctly."
          else
            echo "INFO: Default secret '$DEFAULT_SECRET_NAME' does not exist."
            echo "INFO: This test only runs when the default secret exists. Skipping."
          fi
{{- end }}