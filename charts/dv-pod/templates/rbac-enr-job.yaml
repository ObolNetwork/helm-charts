{{- if .Values.charon.enr.generate.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "dv-pod.fullname" . }}-enr-job
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "dv-pod.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "-15" # Ensure SA is created before the job that uses it
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "dv-pod.fullname" . }}-enr-job-role
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "dv-pod.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "-15"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]  # For checking existence
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: 
    - {{ include "dv-pod.enrSecretName" . | quote }}
  verbs: ["update", "patch"]  # For updating existing secret
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create"]  # For initial creation only
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "dv-pod.fullname" . }}-enr-job-rolebinding
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "dv-pod.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "-15"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "dv-pod.fullname" . }}-enr-job-role
subjects:
- kind: ServiceAccount
  name: {{ include "dv-pod.fullname" . }}-enr-job
  namespace: {{ .Release.Namespace }}
{{- end }}
