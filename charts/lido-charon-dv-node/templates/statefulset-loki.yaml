{{- if .Values.loki.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "lido-charon-dv-node.fullname" . }}-loki
  labels:
    {{- include "lido-charon-dv-node.labels" . | nindent 4 }}
    app.kubernetes.io/component: loki
spec:
  serviceName: {{ include "lido-charon-dv-node.fullname" . }}-loki
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "lido-charon-dv-node.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: loki
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap-loki.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "lido-charon-dv-node.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: loki
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "lido-charon-dv-node.serviceAccountName" . }}
      securityContext:
        fsGroup: 10001
        runAsUser: 10001
        runAsGroup: 10001
        runAsNonRoot: true
      containers:
        - name: loki
          {{- with .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.loki.image.repository }}:{{ .Values.loki.image.tag }}"
          imagePullPolicy: {{ .Values.loki.image.pullPolicy }}
          args:
            - -config.file=/etc/loki/loki.yml
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ready
              port: 3100
            initialDelaySeconds: 45
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ready
              port: 3100
            initialDelaySeconds: 45
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /etc/loki
            - name: storage
              mountPath: /opt/loki
          {{- with .Values.loki.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.extraEnvVars }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "lido-charon-dv-node.fullname" . }}-loki-config
        {{- if not .Values.loki.persistence.enabled }}
        - name: storage
          emptyDir: {}
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
  {{- if .Values.loki.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes: {{ .Values.loki.persistence.accessModes }}
        {{- if .Values.loki.persistence.storageClassName }}
        storageClassName: {{ .Values.loki.persistence.storageClassName }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.loki.persistence.size }}
  {{- end }}
{{- end }}