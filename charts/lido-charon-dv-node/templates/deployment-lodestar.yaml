{{- if .Values.lodestar.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lido-charon-dv-node.fullname" . }}-lodestar
  labels:
    {{- include "lido-charon-dv-node.labels" . | nindent 4 }}
    app.kubernetes.io/component: lodestar
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "lido-charon-dv-node.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: lodestar
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "lido-charon-dv-node.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: lodestar
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "lido-charon-dv-node.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-charon
          image: busybox:1.36
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c']
          args:
            - |
              echo "Waiting for Charon to be ready..."
              until wget -qO- http://{{ include "lido-charon-dv-node.fullname" . }}-charon:3620/readyz 2>/dev/null; do
                echo "Charon not ready yet, waiting..."
                sleep 5
              done
              echo "Charon is ready!"
      containers:
        - name: lodestar
          {{- with .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.lodestar.image.repository }}:{{ .Values.lodestar.image.tag }}"
          imagePullPolicy: {{ .Values.lodestar.image.pullPolicy }}
          command:
            - node
            - /usr/app/packages/cli/bin/lodestar
            - validator
          args:
            - --network={{ include "lido-charon-dv-node.network" . }}
            - --beacon-nodes=http://{{ include "lido-charon-dv-node.fullname" . }}-charon:3600
            - --metrics=true
            - --metrics.address=0.0.0.0
            - --metrics.port=5064
            - --builder={{ .Values.charon.builderApi }}
            {{- if eq .Values.lodestar.builderSelection "builderalways" }}
            - --builder.selection=builderalways
            {{- end }}
            - --dataDir=/opt/data
            - --importKeystores=/opt/charon/validator_keys
            - --importKeystoresPassword=/opt/charon/validator_keys
          ports:
            - name: metrics
              containerPort: 5064
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: 5064
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /metrics
              port: 5064
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - name: data
              mountPath: /opt/data
            - name: validator-keys
              mountPath: /opt/charon/validator_keys
              readOnly: true
          {{- with .Values.lodestar.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: BEACON_NODE_ADDRESS
              value: "http://{{ include "lido-charon-dv-node.fullname" . }}-charon:3600"
            - name: NETWORK
              value: {{ include "lido-charon-dv-node.network" . }}
            - name: BUILDER_API_ENABLED
              value: "{{ .Values.charon.builderApi }}"
            - name: BUILDER_SELECTION
              value: {{ .Values.lodestar.builderSelection }}
            {{- with .Values.extraEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: data
          {{- if .Values.lodestar.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "lido-charon-dv-node.fullname" . }}-lodestar-data
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: validator-keys
          persistentVolumeClaim:
            claimName: {{ include "lido-charon-dv-node.fullname" . }}-charon-data-{{ include "lido-charon-dv-node.fullname" . }}-charon-0
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
---
{{- if .Values.lodestar.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "lido-charon-dv-node.fullname" . }}-lodestar-data
  labels:
    {{- include "lido-charon-dv-node.labels" . | nindent 4 }}
    app.kubernetes.io/component: lodestar
spec:
  accessModes: {{ .Values.lodestar.persistence.accessModes }}
  {{- if .Values.lodestar.persistence.storageClassName }}
  storageClassName: {{ .Values.lodestar.persistence.storageClassName }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.lodestar.persistence.size }}
{{- end }}
{{- end }}