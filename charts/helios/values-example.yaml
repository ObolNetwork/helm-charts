# Example values file for Helios

# Set replicas to 1 for a single Helios instance
replicaCount: 1

# Helios specific configuration
helios:
  # Network to sync to: mainnet, sepolia, or holesky
  network: "mainnet"
  
  # REQUIRED: RPC endpoint for Ethereum execution layer (must support eth_getProof)
  # Alchemy is recommended as Infura doesn't support eth_getProof
  executionRpc: "https://eth-mainnet.g.alchemy.com/v2/YOUR-API-KEY"
  
  # Optional: Custom consensus layer RPC endpoint
  # Will default to https://www.lightclientdata.org if not provided
  consensusRpc: "https://www.lightclientdata.org"
  
  # Optional: Custom weak subjectivity checkpoint
  # Get from beaconcha.in (first block hash in any finalized epoch)
  checkpoint: "0xe1912ca8ca3b45dac497cae7825bab055b0f60285533721b046e8fefb5b076f2"
  
  # RPC port for the local RPC server
  rpcPort: 8545
  
  # IP to bind the RPC server to - use 0.0.0.0 to allow remote access
  rpcBindIp: "0.0.0.0"
  
  # Optional: Enable configuration file through ConfigMap
  config:
    enabled: false
    # content: |
    #   [mainnet]
    #   consensus_rpc = "https://www.lightclientdata.org"
    #   execution_rpc = "https://eth-mainnet.g.alchemy.com/v2/YOUR-API-KEY"
    #   checkpoint = "0xe1912ca8ca3b45dac497cae7825bab055b0f60285533721b046e8fefb5b076f2"

# Configure persistence for checkpoint data
persistence:
  enabled: true
  # storageClass: "standard"  # Specify if needed
  accessMode: ReadWriteOnce
  size: 1Gi

# Service type configuration
service:
  # Use LoadBalancer if you want to expose the Helios RPC endpoint externally
  # Use ClusterIP if you only need internal access or plan to use a separate ingress
  type: ClusterIP
  port: 8545

# Resource requests and limits
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 500m
    memory: 512Mi
